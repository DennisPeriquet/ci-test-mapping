[
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: cinder.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.kubevirt.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.ovirt.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: csi.vsphere.vmware.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: disk.csi.azure.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: diskplugin.csi.alibabacloud.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: ebs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail in binding dynamic provisioned PV to PVC [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to create pod by failing to mount volume [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: efs.csi.aws.com] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail in binding dynamic provisioned PV to PVC [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to create pod by failing to mount volume [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: manila.csi.openstack.org] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which share the same volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: pd.csi.storage.gke.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[Feature:ReadWriteOncePod] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should block a second pod from using an in-use ReadWriteOncePod volume on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should preempt lower priority pods using ReadWriteOncePod volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] volume-stress multiple pods should access different volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] volume-lifecycle-performance should provision volumes at scale within performance constraints [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source in parallel [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable-stress[Feature:VolumeSnapshotDataSource] should support snapshotting of many volumes repeatedly [Slow] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Inline-volume (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if non-existent subpath is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath directory is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath file is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should fail if subpath with backstepping is outside the volume [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support creating multiple subpath from same volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using directory as subpath [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should support restarting containers using file as subpath [Slow][LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] volumeIO should write files of various sizes, verify size, validate content [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with different volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should access to two volumes with the same volume mode and retain data across pod recreation on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single read-only volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on different node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the single volume from pods on the same node",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and its clone from pods on the same node [LinuxOnly][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] multiVolume [Slow] should concurrently access the volume and restored snapshot from pods on the same node [LinuxOnly][Feature:VolumeSnapshotDataSource][Feature:VolumeSourceXFS]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should fail to use a volume in a pod with mismatched mode [Slow]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should allow exec of files on the volume",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned PV (xfs)][Slow] volumes should store data",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "External Storage [Driver: vpc.block.csi.ibm.io] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral)",
    "Suite": "openshift-tests"
  },
  {
    "Name": "OSUpdateStarted event should be recorded for nodes that reach OSUpdateStaged",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "OSUpdateStarted event should be recorded for nodes that reach OSUpdateStaged",
    "Suite": "openshift-tests"
  },
  {
    "Name": "Operator upgrade authentication",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade baremetal",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade cloud-controller-manager",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade cloud-credential",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade cluster-autoscaler",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade config-operator",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade console",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade control-plane-machine-set",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade csi-snapshot-controller",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade dns",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade etcd",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade image-registry",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade ingress",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade insights",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade kube-apiserver",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade kube-controller-manager",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade kube-scheduler",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade kube-storage-version-migrator",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade machine-api",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade machine-approver",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade machine-config",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade marketplace",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade monitoring",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade network",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade node-tuning",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade openshift-apiserver",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade openshift-controller-manager",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade openshift-samples",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade operator-lifecycle-manager",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade operator-lifecycle-manager-catalog",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade operator-lifecycle-manager-packageserver",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade service-ca",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "Operator upgrade storage",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "TestAutoscaling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster/EnsureNetworkPolicies/EnsureLimitedEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/Main",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/PostTeardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/PostTeardown/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/PostTeardown/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/PostTeardown/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/PostTeardown/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/PostTeardown/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/PostTeardown/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/PostTeardown/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/PostTeardown/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/Teardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestAutoscaling/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster/EnsureNetworkPolicies/EnsureLimitedEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/PostTeardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/PostTeardown/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/PostTeardown/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/PostTeardown/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/PostTeardown/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/PostTeardown/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/PostTeardown/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/PostTeardown/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/PostTeardown/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/Teardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateCluster/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster/EnsureNetworkPolicies/EnsureLimitedEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureOAuthWithIdentityProvider",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/EnsureSecretEncryptedUsingKMS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/Main",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/Main/EnsureOAuthWithIdentityProvider",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/Main/EnsureSecretEncryptedUsingKMS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/PostTeardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/PostTeardown/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/PostTeardown/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/PostTeardown/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/PostTeardown/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/PostTeardown/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/PostTeardown/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/PostTeardown/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/PostTeardown/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/Teardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterCustomConfig/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/EnsureSecretEncryptedUsingKMS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterKms/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster/EnsureNetworkPolicies/EnsureLimitedEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/Main",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/Main/SwitchFromPrivateToPublic",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/Main/SwitchFromPrivateToPublic/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/Main/SwitchFromPrivateToPublic/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/Main/SwitchFromPrivateToPublic/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/Main/SwitchFromPrivateToPublic/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/Main/SwitchFromPrivateToPublic/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/Main/SwitchFromPublicToPrivate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/Main/SwitchFromPublicToPrivate/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/PostTeardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/PostTeardown/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/PostTeardown/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/PostTeardown/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/PostTeardown/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/PostTeardown/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/PostTeardown/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/PostTeardown/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/PostTeardown/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/SwitchFromPrivateToPublic",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/SwitchFromPrivateToPublic/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/SwitchFromPrivateToPublic/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/SwitchFromPrivateToPublic/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/SwitchFromPrivateToPublic/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/SwitchFromPrivateToPublic/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/SwitchFromPublicToPrivate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/SwitchFromPublicToPrivate/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/Teardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterPrivate/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster/EnsureNetworkPolicies/EnsureLimitedEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/PostTeardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/PostTeardown/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/PostTeardown/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/PostTeardown/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/PostTeardown/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/PostTeardown/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/PostTeardown/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/PostTeardown/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/PostTeardown/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/Teardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterProxy/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestCreateClusterWithArmNodePool/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/KillAllMembers",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/Main",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/Main/KillAllMembers",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/PostTeardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/PostTeardown/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/PostTeardown/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/PostTeardown/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/PostTeardown/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/PostTeardown/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/PostTeardown/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/PostTeardown/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/PostTeardown/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/Teardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/ValidateHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/ValidateHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/ValidateHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/ValidateHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/ValidateHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/ValidateHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/ValidateHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/ValidateHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestEtcdChaos/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/KillAllMembers",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/KillRandomMembers",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/Main",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/Main/KillAllMembers",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/Main/KillRandomMembers",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/Main/SingleMemberRecovery",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/PostTeardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/PostTeardown/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/PostTeardown/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/PostTeardown/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/PostTeardown/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/PostTeardown/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/PostTeardown/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/PostTeardown/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/PostTeardown/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/Teardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/ValidateHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/ValidateHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/ValidateHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/ValidateHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/ValidateHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/ValidateHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/ValidateHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/ValidateHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestHAEtcdChaos/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestInPlaceUpgradeNodePool/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureAllContainersHavePullPolicyIfNotPresent#01",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureHCPContainersHaveResourceRequests#01",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureNoPodsWithTooHighPriority#01",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigAppliedInPlace/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureAllContainersHavePullPolicyIfNotPresent#01",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureHCPContainersHaveResourceRequests#01",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureNoPodsWithTooHighPriority#01",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNTOMachineConfigGetsRolledOut/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster/EnsureNetworkPolicies/EnsureLimitedEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/KubeVirtCacheTest",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/KubeVirtQoSClassGuaranteedTest",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestKMSRootVolumeEncryption",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNTOMachineConfigAppliedInPlace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNTOMachineConfigAppliedInPlace/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNTOMachineConfigAppliedInPlace/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNTOMachineConfigAppliedInPlace/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNTOMachineConfigAppliedInPlace/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNTOMachineConfigGetsRolledOut",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNTOMachineConfigGetsRolledOut/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNTOMachineConfigGetsRolledOut/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNTOMachineConfigGetsRolledOut/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNTOMachineConfigGetsRolledOut/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNodePoolAutoRepair",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNodePoolInPlaceUpgrade",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNodePoolReplaceUpgrade",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNodepoolMachineconfigGetsRolledout",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNodepoolMachineconfigGetsRolledout/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNodepoolMachineconfigGetsRolledout/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNodepoolMachineconfigGetsRolledout/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestNodepoolMachineconfigGetsRolledout/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Main/TestRollingUpgrade",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/KubeVirtCacheTest",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestKMSRootVolumeEncryption",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNTOMachineConfigGetsRolledOut",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNTOMachineConfigGetsRolledOut/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNTOMachineConfigGetsRolledOut/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNTOMachineConfigGetsRolledOut/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNTOMachineConfigGetsRolledOut/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNodePoolAutoRepair",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNodePoolReplaceUpgrade",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNodepoolMachineconfigGetsRolledout",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNodepoolMachineconfigGetsRolledout/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNodepoolMachineconfigGetsRolledout/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNodepoolMachineconfigGetsRolledout/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NodePool_Tests_Group/TestNodepoolMachineconfigGetsRolledout/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/PostTeardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/PostTeardown/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/PostTeardown/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/PostTeardown/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/PostTeardown/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/PostTeardown/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/PostTeardown/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/PostTeardown/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/PostTeardown/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestKMSRootVolumeEncryption",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNTOMachineConfigGetsRolledOut",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNTOMachineConfigGetsRolledOut/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNTOMachineConfigGetsRolledOut/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNTOMachineConfigGetsRolledOut/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNTOMachineConfigGetsRolledOut/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNodePoolAutoRepair",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNodepoolMachineconfigGetsRolledout",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNodepoolMachineconfigGetsRolledout/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNodepoolMachineconfigGetsRolledout/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNodepoolMachineconfigGetsRolledout/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Refactored/TestNodepoolMachineconfigGetsRolledout/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/Teardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNodePool/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/Main",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/PostTeardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/PostTeardown/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/PostTeardown/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/PostTeardown/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/PostTeardown/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/PostTeardown/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/PostTeardown/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/PostTeardown/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/PostTeardown/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/Teardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/ValidateHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/ValidateHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/ValidateHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/ValidateHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/ValidateHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/ValidateHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/ValidateHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/ValidateHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestNoneCreateCluster/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestOLM",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestReplaceUpgradeNodePool/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/DeleteTestNamespace",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/DestroyCluster_1",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster/EnsureNetworkPolicies/EnsureLimitedEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureMachineDeploymentGeneration",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/Main",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/Main/EnsureMachineDeploymentGeneration",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/Main/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/Main/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/PostTeardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/PostTeardown/EnsureAPIBudget",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/PostTeardown/EnsureAPIBudget/control-plane-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/PostTeardown/EnsureAPIBudget/control-plane-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/PostTeardown/EnsureAPIBudget/control-plane-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/PostTeardown/EnsureAPIBudget/hypershift-operator_mutate",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/PostTeardown/EnsureAPIBudget/hypershift-operator_no_404_deletes",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/PostTeardown/EnsureAPIBudget/hypershift-operator_read",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/PostTeardown/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/PreTeardownClusterDump",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/Teardown",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureAllContainersHavePullPolicyIfNotPresent",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureAllRoutesUseHCPRouter",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureGuestWebhooksValidated",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureHCPContainersHaveResourceRequests",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureNetworkPolicies",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureNetworkPolicies/EnsureComponentsHaveNeedManagementKASAccessLabel",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureNetworkPolicies/EnsureEgressTrafficToManagementKAS",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureNoCrashingPods",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureNoPodsWithTooHighPriority",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureNodeCommunication",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsureNodeCountMatchesNodePoolReplicas",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsurePSANotPrivileged",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateHostedCluster/NoticePreemptionOrFailedScheduling",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "TestUpgradeControlPlane/ValidateMetricsAreExposed",
    "Suite": "hypershift-e2e"
  },
  {
    "Name": "[Conformance][sig-api-machinery][Feature:APIServer] local kubeconfig \"lb-ext.kubeconfig\" should be present on all masters and work [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Conformance][sig-api-machinery][Feature:APIServer] local kubeconfig \"lb-ext.kubeconfig\" should be present on all masters and work [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Conformance][sig-api-machinery][Feature:APIServer] local kubeconfig \"lb-int.kubeconfig\" should be present on all masters and work [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Conformance][sig-api-machinery][Feature:APIServer] local kubeconfig \"lb-int.kubeconfig\" should be present on all masters and work [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Conformance][sig-api-machinery][Feature:APIServer] local kubeconfig \"localhost-recovery.kubeconfig\" should be present on all masters and work [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Conformance][sig-api-machinery][Feature:APIServer] local kubeconfig \"localhost-recovery.kubeconfig\" should be present on all masters and work [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Conformance][sig-api-machinery][Feature:APIServer] local kubeconfig \"localhost.kubeconfig\" should be present on all masters and work [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Conformance][sig-api-machinery][Feature:APIServer] local kubeconfig \"localhost.kubeconfig\" should be present on all masters and work [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Conformance][sig-sno][Serial] Cluster should allow a fast rollout of kube-apiserver [Suite:openshift/conformance/serial/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Conformance][sig-sno][Serial] Cluster should allow a fast rollout of kube-apiserver with no pods restarts during API disruption [Suite:openshift/conformance/serial/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Conformance][sig-sno][Serial] Cluster should allow a fast rollout of kube-apiserver with no pods restarts during API disruption [apigroup:config.openshift.io][apigroup:operator.openshift.io] [Suite:openshift/conformance/serial/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] XXXitor test legacy-authentication-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] XXXitor test legacy-authentication-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] XXXitor test legacy-authentication-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] XXXitor test legacy-authentication-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] XXXitor test legacy-authentication-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] XXXitor test legacy-authentication-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] invariant test legacy-authentication-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Authentication\"] monitor test legacy-authentication-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test legacy-cvo-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test legacy-cvo-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test legacy-cvo-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test legacy-cvo-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test legacy-cvo-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test legacy-cvo-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test operator-state-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test operator-state-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test operator-state-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test operator-state-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test operator-state-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] XXXitor test operator-state-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test legacy-cvo-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] invariant test operator-state-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test legacy-cvo-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Cluster Version Operator\"] monitor test operator-state-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] XXXitor test image-registry-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] XXXitor test image-registry-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] XXXitor test image-registry-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] XXXitor test image-registry-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] XXXitor test image-registry-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] XXXitor test image-registry-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] invariant test image-registry-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Image Registry\"] monitor test image-registry-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] XXXitor test pod-network-avalibility cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] XXXitor test pod-network-avalibility collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] XXXitor test pod-network-avalibility interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] XXXitor test pod-network-avalibility setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] XXXitor test pod-network-avalibility test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] XXXitor test pod-network-avalibility writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Network / ovn-kubernetes\"] monitor test pod-network-avalibility writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test ingress-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test ingress-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test ingress-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test ingress-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test ingress-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test ingress-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test service-type-load-balancer-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test service-type-load-balancer-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test service-type-load-balancer-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test service-type-load-balancer-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test service-type-load-balancer-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] XXXitor test service-type-load-balancer-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test ingress-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] invariant test service-type-load-balancer-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test ingress-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"NetworkEdge\"] monitor test service-type-load-balancer-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] XXXitor test legacy-networking-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] XXXitor test legacy-networking-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] XXXitor test legacy-networking-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] XXXitor test legacy-networking-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] XXXitor test legacy-networking-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] XXXitor test legacy-networking-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] invariant test legacy-networking-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Networking\"] monitor test legacy-networking-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test kubelet-log-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test kubelet-log-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test kubelet-log-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test kubelet-log-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test kubelet-log-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test kubelet-log-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test legacy-node-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test legacy-node-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test legacy-node-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test legacy-node-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test legacy-node-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test legacy-node-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-lifecycle cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-lifecycle collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-lifecycle interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-lifecycle setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-lifecycle test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-lifecycle writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-state-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-state-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-state-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-state-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-state-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test node-state-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test pod-lifecycle cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test pod-lifecycle collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test pod-lifecycle interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test pod-lifecycle setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test pod-lifecycle test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] XXXitor test pod-lifecycle writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test kubelet-log-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test legacy-node-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test node-state-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] invariant test pod-lifecycle writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test kubelet-log-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test legacy-node-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-lifecycle writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test node-state-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Node\"] monitor test pod-lifecycle writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] XXXitor test legacy-storage-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] XXXitor test legacy-storage-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] XXXitor test legacy-storage-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] XXXitor test legacy-storage-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] XXXitor test legacy-storage-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] XXXitor test legacy-storage-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] invariant test legacy-storage-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Storage\"] monitor test legacy-storage-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test additional-events-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test additional-events-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test additional-events-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test additional-events-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test additional-events-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test additional-events-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test alert-summary-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test alert-summary-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test alert-summary-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test alert-summary-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test alert-summary-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test alert-summary-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test cluster-info-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test cluster-info-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test cluster-info-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test cluster-info-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test cluster-info-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test cluster-info-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test clusteroperator-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test clusteroperator-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test clusteroperator-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test clusteroperator-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test clusteroperator-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test clusteroperator-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test disruption-summary-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test disruption-summary-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test disruption-summary-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test disruption-summary-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test disruption-summary-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test disruption-summary-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test e2e-test-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test e2e-test-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test e2e-test-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test e2e-test-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test e2e-test-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test e2e-test-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test event-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test event-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test event-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test event-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test event-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test event-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test external-service-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test external-service-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test external-service-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test external-service-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test external-service-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test external-service-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test interval-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test interval-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test interval-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test interval-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test interval-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test interval-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test known-image-checker cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test known-image-checker collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test known-image-checker interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test known-image-checker setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test known-image-checker test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test known-image-checker writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test legacy-test-framework-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test legacy-test-framework-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test legacy-test-framework-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test legacy-test-framework-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test legacy-test-framework-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test legacy-test-framework-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test pathological-event-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test pathological-event-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test pathological-event-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test pathological-event-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test pathological-event-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test pathological-event-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test timeline-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test timeline-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test timeline-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test timeline-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test timeline-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test timeline-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test tracked-resources-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test tracked-resources-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test tracked-resources-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test tracked-resources-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test tracked-resources-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test tracked-resources-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test upload-to-loki-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test upload-to-loki-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test upload-to-loki-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test upload-to-loki-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test upload-to-loki-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] XXXitor test upload-to-loki-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test additional-events-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test alert-summary-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test cluster-info-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test disruption-summary-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test e2e-test-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test external-service-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test interval-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test known-image-checker writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test legacy-test-framework-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pathological-event-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test pod-lifecycle writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test timeline-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test tracked-resources-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] invariant test upload-to-loki-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test additional-events-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test alert-summary-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test cluster-info-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test clusteroperator-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test disruption-summary-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test e2e-test-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test event-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test external-service-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test interval-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test known-image-checker writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test legacy-test-framework-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test pathological-event-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test timeline-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test tracked-resources-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"Test Framework\"] monitor test upload-to-loki-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test etcd-log-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test etcd-log-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test etcd-log-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test etcd-log-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test etcd-log-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test etcd-log-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test legacy-etcd-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test legacy-etcd-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test legacy-etcd-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test legacy-etcd-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test legacy-etcd-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] XXXitor test legacy-etcd-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test etcd-log-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] invariant test legacy-etcd-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test etcd-log-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"etcd\"] monitor test legacy-etcd-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-new-disruption-invariant cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-new-disruption-invariant collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-new-disruption-invariant interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-new-disruption-invariant setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-new-disruption-invariant test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test apiserver-new-disruption-invariant writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test audit-log-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test audit-log-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test audit-log-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test audit-log-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test audit-log-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test audit-log-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test graceful-shutdown-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test graceful-shutdown-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test graceful-shutdown-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test graceful-shutdown-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test graceful-shutdown-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test graceful-shutdown-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test legacy-kube-apiserver-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test legacy-kube-apiserver-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test legacy-kube-apiserver-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test legacy-kube-apiserver-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test legacy-kube-apiserver-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] XXXitor test legacy-kube-apiserver-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test apiserver-new-disruption-invariant writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test audit-log-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] invariant test legacy-kube-apiserver-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test apiserver-new-disruption-invariant writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test audit-log-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test graceful-shutdown-analyzer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test incluster-disruption-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[Jira:\"kube-apiserver\"] monitor test legacy-kube-apiserver-invariants writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial] [sig-auth][Feature:OAuthServer] [RequestHeaders] [IdP] test RequestHeaders IdP [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial] [sig-auth][Feature:OAuthServer] [RequestHeaders] [IdP] test RequestHeaders IdP [apigroup:config.openshift.io][apigroup:user.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload attached to SRIOV networks should let resource-aligned PODs have working SRIOV network interface [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload saturating NUMA nodes should allow a pod requesting as many cores as a full NUMA node have [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload saturating NUMA nodes should guarantee correct allocation with concurrent creation [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload saturating NUMA nodes should reject pod requesting more cores than a single NUMA node have [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload should guarantee NUMA-aligned cpu cores in gu pods with multiple pods, each with a single container requesting 1 core, 1 device [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload should guarantee NUMA-aligned cpu cores in gu pods with multiple pods, each with a single container requesting 2 core, 1 device [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload should guarantee NUMA-aligned cpu cores in gu pods with multiple pods, each with multiple containers requesting 1 core, 1 device [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload should guarantee NUMA-aligned cpu cores in gu pods with multiple pods, each with multiple containers requesting 1 core, only one requesting 1 device [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload should guarantee NUMA-aligned cpu cores in gu pods with single pod, multiple containers requesting 1 core, 1 device each [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload should guarantee NUMA-aligned cpu cores in gu pods with single pod, single container requesting 1 core, 1 device [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[Serial][sig-node][Feature:TopologyManager] Configured cluster with gu workload should guarantee NUMA-aligned cpu cores in gu pods with single pod, single container requesting 4 cores, 1 device [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Bare Metal Hardware Provisioning] clusteroperator/baremetal should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Bare Metal Hardware Provisioning] clusteroperator/baremetal should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Bare Metal Hardware Provisioning] clusteroperator/baremetal should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Bare Metal Hardware Provisioning] clusteroperator/baremetal should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/cloud-controller-manager should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/cloud-controller-manager should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/cloud-controller-manager should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/cloud-controller-manager should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/cluster-autoscaler should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/cluster-autoscaler should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/cluster-autoscaler should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/cluster-autoscaler should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/cluster-autoscaler should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/control-plane-machine-set should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/control-plane-machine-set should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/control-plane-machine-set should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/control-plane-machine-set should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/machine-api should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/machine-api should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/machine-api should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/machine-api should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/machine-api should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/machine-approver should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/machine-approver should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/machine-approver should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/machine-approver should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute] clusteroperator/machine-approver should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-machine-approver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-machine-approver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-machine-api",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-machine-api",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-machine-approver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-machine-approver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-machine-api",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Compute][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-machine-api",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Credential Operator] clusteroperator/cloud-credential should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Credential Operator] clusteroperator/cloud-credential should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Credential Operator] clusteroperator/cloud-credential should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Credential Operator] clusteroperator/cloud-credential should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Credential Operator] clusteroperator/cloud-credential should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Credential Operator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-credential-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Credential Operator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-credential-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cloud Credential Operator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-credential-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cloud Credential Operator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-credential-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cluster Version Operator] Verify object deletions after upgrade success",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[bz-Cluster Version Operator] Verify presence of admin ack gate blocks upgrade until acknowledged",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[bz-Cluster Version Operator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-version",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cluster Version Operator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-version",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Cluster Version Operator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-version",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Cluster Version Operator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-version",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-DNS] clusteroperator/dns should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-DNS] clusteroperator/dns should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-DNS] clusteroperator/dns should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-DNS] clusteroperator/dns should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-DNS] clusteroperator/dns should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-DNS][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-dns",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-DNS][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-dns",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-DNS][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-dns-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-DNS][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-dns-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-DNS][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-dns",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-DNS][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-dns",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-DNS][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-dns-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-DNS][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-dns-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Etcd] clusteroperator/etcd should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Etcd] clusteroperator/etcd should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Etcd] clusteroperator/etcd should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Etcd] clusteroperator/etcd should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Etcd] clusteroperator/etcd should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Etcd][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-etcd",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Etcd][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-etcd",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Etcd][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-etcd-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Etcd][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-etcd-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Etcd][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-etcd",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Etcd][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-etcd",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Etcd][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-etcd-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Etcd][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-etcd-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Image Registry] clusteroperator/image-registry should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Image Registry] clusteroperator/image-registry should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Image Registry] clusteroperator/image-registry should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Image Registry] clusteroperator/image-registry should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Image Registry] clusteroperator/image-registry should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Image Registry][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-image-registry",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Image Registry][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-image-registry",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Image Registry][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-image-registry",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Image Registry][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-image-registry",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Insights Operator] clusteroperator/insights should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Insights Operator] clusteroperator/insights should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Insights Operator] clusteroperator/insights should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Insights Operator] clusteroperator/insights should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Insights Operator] clusteroperator/insights should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Machine Config Operator] Nodes should reach OSUpdateStaged in a timely fashion",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Machine Config Operator] Nodes should reach OSUpdateStaged in a timely fashion",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Machine Config Operator] clusteroperator/machine-config should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Machine Config Operator] clusteroperator/machine-config should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Machine Config Operator] clusteroperator/machine-config should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Machine Config Operator] clusteroperator/machine-config should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Machine Config Operator] clusteroperator/machine-config should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Machine Config Operator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-machine-config-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Machine Config Operator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-machine-config-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Machine Config Operator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-machine-config-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Machine Config Operator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-machine-config-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Management Console] clusteroperator/console should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Management Console] clusteroperator/console should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Management Console] clusteroperator/console should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Management Console] clusteroperator/console should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Management Console] clusteroperator/console should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Management Console][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-console",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Management Console][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-console",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Management Console][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-console-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Management Console][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-console-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Management Console][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-console",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Management Console][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-console",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Management Console][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-console-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Management Console][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-console-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Monitoring] clusteroperator/monitoring should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Monitoring] clusteroperator/monitoring should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Monitoring] clusteroperator/monitoring should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Monitoring] clusteroperator/monitoring should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Monitoring] clusteroperator/monitoring should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Monitoring][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-monitoring",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Monitoring][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-monitoring",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Monitoring][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-monitoring",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Monitoring][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-monitoring",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking] clusteroperator/network should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking] clusteroperator/network should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking] clusteroperator/network should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking] clusteroperator/network should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking] clusteroperator/network should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-network-config-controller",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-network-config-controller",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-host-network",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-host-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-multus",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-multus",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-network-diagnostics",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-network-diagnostics",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-network-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-network-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-ovn-kubernetes",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-ovn-kubernetes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-network-config-controller",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-network-config-controller",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-host-network",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-host-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-multus",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-multus",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-network-diagnostics",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-network-diagnostics",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-network-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-network-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-ovn-kubernetes",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Networking][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-ovn-kubernetes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Node Tuning Operator] clusteroperator/node-tuning should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Node Tuning Operator] clusteroperator/node-tuning should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Node Tuning Operator] clusteroperator/node-tuning should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Node Tuning Operator] clusteroperator/node-tuning should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Node Tuning Operator] clusteroperator/node-tuning should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Node Tuning Operator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-node-tuning-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Node Tuning Operator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-node-tuning-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Node Tuning Operator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-node-tuning-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Node Tuning Operator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-node-tuning-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/marketplace should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM] clusteroperator/marketplace should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/marketplace should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM] clusteroperator/marketplace should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/marketplace should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager-catalog should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager-catalog should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager-catalog should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager-catalog should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager-catalog should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager-packageserver should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager-packageserver should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager-packageserver should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager-packageserver should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM] clusteroperator/operator-lifecycle-manager-packageserver should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-marketplace",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-marketplace",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-operator-lifecycle-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-operator-lifecycle-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-operators",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-operators",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-marketplace",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-marketplace",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-operator-lifecycle-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-operator-lifecycle-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-operators",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-operators",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM][invariant] alert/RedhatOperatorsCatalogError should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM][invariant] alert/RedhatOperatorsCatalogError should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-OLM][invariant] alert/RedhatOperatorsCatalogError should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-OLM][invariant] alert/RedhatOperatorsCatalogError should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Routing] clusteroperator/ingress should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Routing] clusteroperator/ingress should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Routing] clusteroperator/ingress should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Routing] clusteroperator/ingress should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Routing] clusteroperator/ingress should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Routing] console is not available via ingress",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-ingress",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-ingress",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-ingress-canary",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-ingress-canary",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-ingress-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-ingress-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-ingress",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-ingress",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-ingress-canary",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-ingress-canary",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-ingress-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Routing][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-ingress-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Samples] clusteroperator/openshift-samples should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Samples] clusteroperator/openshift-samples should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Samples] clusteroperator/openshift-samples should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Samples] clusteroperator/openshift-samples should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Samples] clusteroperator/openshift-samples should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Samples][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-samples-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Samples][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-samples-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Samples][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-samples-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Samples][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-samples-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Storage] clusteroperator/csi-snapshot-controller should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Storage] clusteroperator/csi-snapshot-controller should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Storage] clusteroperator/csi-snapshot-controller should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Storage] clusteroperator/csi-snapshot-controller should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Storage] clusteroperator/csi-snapshot-controller should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Storage] clusteroperator/storage should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Storage] clusteroperator/storage should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Storage] clusteroperator/storage should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Storage] clusteroperator/storage should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Storage] clusteroperator/storage should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Storage][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-csi-drivers",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Storage][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-csi-drivers",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Storage][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-storage-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Storage][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-storage-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Storage][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-csi-drivers",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Storage][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-csi-drivers",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Storage][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-storage-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Storage][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-storage-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in all the other namespaces",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in all the other namespaces",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/default",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/default",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/kube-system",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/kube-system",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-config",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-config",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-config-managed",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-config-managed",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-insights",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-insights",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kni-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kni-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-nutanix-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-nutanix-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-openstack-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-openstack-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-ovirt-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-ovirt-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-user-workload-monitoring",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-user-workload-monitoring",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-vsphere-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-vsphere-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in all the other namespaces",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in all the other namespaces",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/default",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/default",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/kube-system",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/kube-system",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-config",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-config",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-config-managed",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-config-managed",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-insights",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-insights",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kni-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kni-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-nutanix-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-nutanix-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-openstack-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-openstack-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-ovirt-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-ovirt-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-user-workload-monitoring",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-user-workload-monitoring",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-vsphere-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-Unknown][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-vsphere-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth] clusteroperator/authentication should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-apiserver-auth] clusteroperator/authentication should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth] clusteroperator/authentication should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-apiserver-auth] clusteroperator/authentication should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth] clusteroperator/authentication should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth] openshift-oauth-apiserver should not get probe error on liveiness probe due to timeout",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-apiserver-auth] openshift-oauth-apiserver should not get probe error on liveiness probe due to timeout",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth] openshift-oauth-apiserver should not get probe error on readiiness probe due to connection refused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-apiserver-auth] openshift-oauth-apiserver should not get probe error on readiiness probe due to connection refused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth] openshift-oauth-apiserver should not get probe error on readiiness probe due to timeout",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-apiserver-auth] openshift-oauth-apiserver should not get probe error on readiiness probe due to timeout",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-authentication",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-apiserver-auth][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-authentication",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-authentication-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-apiserver-auth][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-authentication-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-authentication",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-apiserver-auth][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-authentication",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-authentication-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-apiserver-auth][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-authentication-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-apiserver-auth][invariant] alert/PodSecurityViolation should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-apiserver-auth][invariant] alert/PodSecurityViolation should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-baremetal] clusteroperator/baremetal should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-baremetal] clusteroperator/baremetal should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-baremetal] clusteroperator/baremetal should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-baremetal] clusteroperator/baremetal should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-cloud-controller-manager] clusteroperator/cloud-controller-manager should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-cloud-controller-manager] clusteroperator/cloud-controller-manager should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-cloud-controller-manager] clusteroperator/cloud-controller-manager should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-cloud-controller-manager] clusteroperator/cloud-controller-manager should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-cluster-api] clusteroperator/cluster-api should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-cluster-api] clusteroperator/cluster-api should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-config-operator] clusteroperator/config-operator should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-config-operator] clusteroperator/config-operator should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-config-operator] clusteroperator/config-operator should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-config-operator] clusteroperator/config-operator should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-config-operator] clusteroperator/config-operator should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-config-operator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-config-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-config-operator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-config-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-config-operator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-config-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-config-operator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-config-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-control-plane-machine-set] clusteroperator/control-plane-machine-set should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-control-plane-machine-set] clusteroperator/control-plane-machine-set should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-control-plane-machine-set] clusteroperator/control-plane-machine-set should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-control-plane-machine-set] clusteroperator/control-plane-machine-set should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd] pathological event should not see excessive RequiredInstallerResourcesMissing secrets",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd] pathological event should not see excessive RequiredInstallerResourcesMissing secrets",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd] should not see excessive RequiredInstallerResourcesMissing secrets",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd] should not see excessive RequiredInstallerResourcesMissing secrets",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdGRPCRequestsSlow should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdGRPCRequestsSlow should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdGRPCRequestsSlow should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdGRPCRequestsSlow should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighCommitDurations should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighCommitDurations should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighCommitDurations should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighCommitDurations should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighFsyncDurations should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighFsyncDurations should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighFsyncDurations should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighFsyncDurations should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighNumberOfFailedGRPCRequests should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighNumberOfFailedGRPCRequests should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighNumberOfFailedGRPCRequests should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighNumberOfFailedGRPCRequests should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighNumberOfLeaderChanges should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighNumberOfLeaderChanges should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighNumberOfLeaderChanges should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdHighNumberOfLeaderChanges should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdInsufficientMembers should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdInsufficientMembers should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdInsufficientMembers should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdInsufficientMembers should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdMemberCommunicationSlow should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdMemberCommunicationSlow should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdMemberCommunicationSlow should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdMemberCommunicationSlow should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdMembersDown should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdMembersDown should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdMembersDown should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdMembersDown should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdNoLeader should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdNoLeader should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdNoLeader should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-etcd][invariant] alert/etcdNoLeader should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver] clusteroperator/kube-apiserver should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver] clusteroperator/kube-apiserver should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver] clusteroperator/kube-apiserver should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver] clusteroperator/kube-apiserver should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver] clusteroperator/kube-apiserver should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver] kube-apiserver should be accessible by clients using internal load balancer without iptables issues",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver] kube-apiserver should be accessible by clients using internal load balancer without iptables issues",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubeAPIErrorBudgetBurn should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubeAPIErrorBudgetBurn should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubeAPIErrorBudgetBurn should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubeAPIErrorBudgetBurn should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubeClientErrors should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubeClientErrors should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubeClientErrors should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubeClientErrors should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-apiserver-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-apiserver-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-apiserver-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-apiserver][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-apiserver-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-controller-manager] clusteroperator/kube-controller-manager should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-controller-manager] clusteroperator/kube-controller-manager should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-controller-manager] clusteroperator/kube-controller-manager should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-controller-manager] clusteroperator/kube-controller-manager should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-controller-manager] clusteroperator/kube-controller-manager should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-controller-manager][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-controller-manager][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-controller-manager][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-controller-manager][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-controller-manager][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-controller-manager][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-controller-manager][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-controller-manager][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-scheduler] clusteroperator/kube-scheduler should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-scheduler] clusteroperator/kube-scheduler should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-scheduler] clusteroperator/kube-scheduler should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-scheduler] clusteroperator/kube-scheduler should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-scheduler] clusteroperator/kube-scheduler should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-scheduler][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-scheduler",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-scheduler][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-scheduler",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-scheduler][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-scheduler-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-scheduler][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-scheduler-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-scheduler][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-scheduler",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-scheduler][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-scheduler",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-scheduler][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-scheduler-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-scheduler][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-scheduler-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-storage-version-migrator] clusteroperator/kube-storage-version-migrator should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-storage-version-migrator] clusteroperator/kube-storage-version-migrator should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-storage-version-migrator] clusteroperator/kube-storage-version-migrator should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-storage-version-migrator] clusteroperator/kube-storage-version-migrator should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-storage-version-migrator] clusteroperator/kube-storage-version-migrator should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-storage-version-migrator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-storage-version-migrator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-storage-version-migrator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-storage-version-migrator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-storage-version-migrator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-storage-version-migrator-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-storage-version-migrator][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-kube-storage-version-migrator-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-storage-version-migrator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-storage-version-migrator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-storage-version-migrator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-storage-version-migrator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-kube-storage-version-migrator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-storage-version-migrator-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-kube-storage-version-migrator][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-storage-version-migrator-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-machine config operator][invariant] alert/MCDDrainError should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-machine config operator][invariant] alert/MCDDrainError should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-machine config operator][invariant] alert/MCDDrainError should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-machine config operator][invariant] alert/MCDDrainError should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-machine config operator][invariant] alert/MCDPivotError should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-machine config operator][invariant] alert/MCDPivotError should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-machine config operator][invariant] alert/MCDPivotError should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-machine config operator][invariant] alert/MCDPivotError should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-monitoring][invariant] alert/PrometheusOperatorWatchErrors should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-monitoring][invariant] alert/PrometheusOperatorWatchErrors should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-monitoring][invariant] alert/PrometheusOperatorWatchErrors should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-monitoring][invariant] alert/PrometheusOperatorWatchErrors should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-monitoring][invariant] alert/Watchdog must have no gaps or changes",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-monitoring][invariant] alert/Watchdog must have no gaps or changes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-networking] ovnkube-node readiness probe should not fail repeatedly",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-networking] ovnkube-node readiness probe should not fail repeatedly",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-networking] pod IPs should not be used by two pods at the same time",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-networking] pod IPs should not be used by two pods at the same time",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-networking][invariant] alert/OVNKubernetesResourceRetryFailure should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-networking][invariant] alert/OVNKubernetesResourceRetryFailure should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-networking][invariant] alert/OVNKubernetesResourceRetryFailure should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-networking][invariant] alert/OVNKubernetesResourceRetryFailure should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-oauth-apiserver][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-oauth-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-oauth-apiserver][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-oauth-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-oauth-apiserver][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-oauth-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-oauth-apiserver][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-oauth-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-olm] clusteroperator/olm should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-olm] clusteroperator/olm should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-apiserver] clusteroperator/openshift-apiserver should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-apiserver] clusteroperator/openshift-apiserver should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-apiserver] clusteroperator/openshift-apiserver should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-apiserver] clusteroperator/openshift-apiserver should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-apiserver] clusteroperator/openshift-apiserver should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-apiserver][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-apiserver][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-apiserver][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-apiserver-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-apiserver][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-apiserver-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-apiserver][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-apiserver][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-apiserver][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-apiserver-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-apiserver][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-apiserver-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-controller-manager] clusteroperator/openshift-controller-manager should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-controller-manager] clusteroperator/openshift-controller-manager should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-controller-manager] clusteroperator/openshift-controller-manager should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-controller-manager] clusteroperator/openshift-controller-manager should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-controller-manager] clusteroperator/openshift-controller-manager should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-controller-manager][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-controller-manager][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-controller-manager][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-controller-manager][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-controller-manager][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-controller-manager][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-openshift-controller-manager][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-openshift-controller-manager][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-samples][invariant] alert/SamplesImagestreamImportFailing should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-samples][invariant] alert/SamplesImagestreamImportFailing should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-samples][invariant] alert/SamplesImagestreamImportFailing should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-samples][invariant] alert/SamplesImagestreamImportFailing should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-service-ca] clusteroperator/service-ca should not change condition/Available",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-service-ca] clusteroperator/service-ca should not change condition/Available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-service-ca] clusteroperator/service-ca should not change condition/Degraded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-service-ca] clusteroperator/service-ca should not change condition/Degraded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-service-ca] clusteroperator/service-ca should not change condition/Progressing",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-service-ca][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-service-ca",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-service-ca][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-service-ca",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-service-ca][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-service-ca-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-service-ca][invariant] alert/KubePodNotReady should not be at or above info in ns/openshift-service-ca-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-service-ca][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-service-ca",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-service-ca][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-service-ca",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-service-ca][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-service-ca-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-service-ca][invariant] alert/KubePodNotReady should not be at or above pending in ns/openshift-service-ca-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-single-node][invariant] alert/KubeMemoryOvercommit should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-single-node][invariant] alert/KubeMemoryOvercommit should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-single-node][invariant] alert/KubeMemoryOvercommit should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-single-node][invariant] alert/KubeMemoryOvercommit should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-storage][invariant] alert/KubePersistentVolumeErrors should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-storage][invariant] alert/KubePersistentVolumeErrors should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-storage][invariant] alert/KubePersistentVolumeErrors should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-storage][invariant] alert/KubePersistentVolumeErrors should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-storage][invariant] alert/VSphereOpenshiftNodeHealthFail should not be at or above info",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-storage][invariant] alert/VSphereOpenshiftNodeHealthFail should not be at or above info",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[bz-storage][invariant] alert/VSphereOpenshiftNodeHealthFail should not be at or above pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[bz-storage][invariant] alert/VSphereOpenshiftNodeHealthFail should not be at or above pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull from private registry with secret [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull image [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull from private registry without secret [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Runtime blackbox test when running a container with a new image should not be able to pull image from invalid registry [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Docker Containers should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Docker Containers should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Docker Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Docker Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] GKE local SSD [Feature:GKELocalSSD] should write and read from node local SSD [Feature:GKELocalSSD] [sig-arch] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] GKE node pools [Feature:GKENodePool] should create a cluster with multiple node pools [Feature:GKENodePool] [sig-arch] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Lease lease API should be available [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] NodeLease when the NodeLease feature is enabled should have OwnerReferences set [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] NodeLease when the NodeLease feature is enabled the kubelet should create and update a lease in the kube-node-lease namespace [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] NodeLease when the NodeLease feature is enabled the kubelet should report node status infrequently [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Pods should be updated [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Pods should delete a collection of pods [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Pods should get a host IP [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Pods should support pod readiness gates [NodeFeature:PodReadinessGate] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] PrivilegedPod [NodeConformance] should enable privileged commands [LinuxOnly] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should *not* be restarted by liveness probe because startup probe delays it [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should *not* be restarted with a non-local redirect http liveness probe [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should be restarted by liveness probe after startup probe enables it [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should be restarted startup probe fails [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should be restarted with a docker exec liveness probe with timeout  [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should be restarted with a local redirect http liveness probe [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should not be ready until startupProbe succeeds [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container should not be ready with a docker exec readiness probe timeout  [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a container with runAsNonRoot should not run with an explicit root user ID [LinuxOnly] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a container with runAsNonRoot should not run without a specified user ID [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a container with runAsNonRoot should run with an explicit non-root user ID [LinuxOnly] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a container with runAsNonRoot should run with an image specified user ID [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a container with runAsUser should run the container with uid 0 [LinuxOnly] [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a pod with privileged should run the container as privileged when XXXX [LinuxOnly] [NodeFeature:HostAccess] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a pod with privileged should run the container as privileged when true [LinuxOnly] [NodeFeature:HostAccess] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a pod with privileged should run the container as unprivileged when XXXXX [LinuxOnly] [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with readonly rootfs when readOnlyRootFilesystem=XXXX [LinuxOnly] [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with readonly rootfs when readOnlyRootFilesystem=true [LinuxOnly] [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=XXXXX [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when XXXX [LinuxOnly] [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when not explicitly set and uid != 0 [LinuxOnly] [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when true [LinuxOnly] [NodeConformance] [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when XXXXX [LinuxOnly] [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] Variable Expansion should allow substituting values in a volume subpath [sig-storage] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [Feature:Example] [k8s.io] Downward API should create a pod that prints his name and namespace [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [Feature:Example] [k8s.io] Liveness liveness pods should be automatically restarted [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [Feature:Example] [k8s.io] Secret should create a pod that reads a secret [sig-node] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] AppArmor load AppArmor profiles can disable an AppArmor profile, using unconfined [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] AppArmor load AppArmor profiles should enforce an AppArmor profile [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Mount propagation should propagate mounts to the host [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] NoExecuteTaintManager Multiple Pods [Serial] only evicts pods without tolerations from tainted nodes [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] NoExecuteTaintManager Single Pod [Serial] doesn't evict pod with tolerations from tainted nodes [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] NoExecuteTaintManager Single Pod [Serial] eventually evict pod with finite tolerations from tainted nodes [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] NoExecuteTaintManager Single Pod [Serial] evicts pods from tainted nodes [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period should be submitted and removed [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Pods Extended [k8s.io] Pod Container Status should never report success for a pending container [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Pods Extended [k8s.io] Pod Container lifecycle should not create extra sandbox if all containers are done [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] PreStop graceful pod terminated should wait until preStop hook completes the process [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] PreStop should call prestop when killing a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support container.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support pod.Spec.SecurityContext.SupplementalGroups [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support seccomp alpha runtime/default annotation [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the container [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support seccomp alpha unconfined annotation on the pod [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support seccomp default which is unconfined [Feature:Seccomp] [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support seccomp default which is unconfined [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support seccomp runtime/default [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support seccomp unconfined on the container [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] Security Context should support seccomp unconfined on the pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] crictl should be able to run crictl on the node [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[k8s.io] [sig-node] kubelet [k8s.io] [sig-node] Clean up pods on node kubelet should be able to delete 10 pods per node in 1m0s. [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] API data in etcd should be stored at the correct location and version for all resources [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] API data in etcd should be stored at the correct location and version for all resources [Serial][apigroup:config.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] API priority and fairness should ensure that requests can be classified by adding FlowSchema and PriorityLevelConfiguration [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] API priority and fairness should ensure that requests can't be drowned out (fairness) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] API priority and fairness should ensure that requests can't be drowned out (priority) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] APIServer CR fields validation additionalCORSAllowedOrigins [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] APIServer CR fields validation additionalCORSAllowedOrigins [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject everything except leases [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceValidationRules [Privileged:ClusterAdmin] MUST NOT fail validation for create of a custom resource that satisfies the x-kubernetes-validations rules [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceValidationRules [Privileged:ClusterAdmin] MUST fail create of a custom resource definition that contains a x-kubernetes-validations rule that refers to a property that do not exist [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceValidationRules [Privileged:ClusterAdmin] MUST fail create of a custom resource definition that contains an x-kubernetes-validations rule that contains a syntax error [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceValidationRules [Privileged:ClusterAdmin] MUST fail create of a custom resource definition that contains an x-kubernetes-validations rule that exceeds the estimated cost limit [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceValidationRules [Privileged:ClusterAdmin] MUST fail create of a custom resource that exceeds the runtime cost limit for x-kubernetes-validations rule execution [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceValidationRules [Privileged:ClusterAdmin] MUST fail update of a custom resource that does not satisfy a x-kubernetes-validations transition rule [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] CustomResourceValidationRules [Privileged:ClusterAdmin] MUST fail validation for create of a custom resource that does not satisfy the x-kubernetes-validations rules [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Discovery Custom resource should have storage version hash [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Discovery should accurately determine present and missing resources [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Events should delete a collection of events [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should delete jobs and pods created by cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should orphan pods created by rc if deleteOptions.OrphanDependents is nil [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should support cascading deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Garbage collector should support orphan deletion of custom resources [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Generated clientset should create pods, set the deletionTimestamp and deletionGracePeriodSeconds of the pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Generated clientset should create v1 cronJobs, delete cronJobs, watch cronJobs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Generated clientset should create v1beta1 cronJobs, delete cronJobs, watch cronJobs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Kubernetes APIs remain available",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-api-machinery] Kubernetes APIs remain available for new connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-api-machinery] Kubernetes APIs remain available with reused connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-api-machinery] Namespaces [Serial] should always delete fast (ALL of 100 namespaces in 150 seconds) [Feature:ComprehensiveNamespaceDraining] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Namespaces [Serial] should delete fast enough (90 percent of 100 namespaces in 150 seconds) [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] OAuth APIs remain available",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-api-machinery] OAuth APIs remain available for new connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-api-machinery] OAuth APIs remain available with reused connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-api-machinery] OpenAPIV3 should contain OpenAPI V3 for Aggregated APIServer [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] OpenAPIV3 should publish OpenAPI V3 for CustomResourceDefinition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] OpenAPIV3 should round trip OpenAPI V3 for all built-in group versions [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] OpenShift APIs remain available",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-api-machinery] OpenShift APIs remain available for new connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-api-machinery] OpenShift APIs remain available with reused connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's multiple priority class scope (quota set to pod count: 2) against 2 pods with same priority classes. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (cpu, memory quota set) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against 2 pods with different priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against 2 pods with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with different priority class (ScopeSelectorOpExists). [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with different priority class (ScopeSelectorOpNotIn). [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (quota set to pod count: 1) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with best effort scope using scope-selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with terminating scopes through scope selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a custom resource. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim with a storage class [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim with a storage class. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should verify ResourceQuota with cross namespace pod affinity scope using scope-selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Secrets should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Secrets should fail to create secret due to empty secret key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Secrets should patch a secret [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Server request timeout default timeout should be used if the specified timeout in the request URL is 0s [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Server request timeout should return HTTP status code 400 if the user specifies an invalid timeout in the request URL [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Server request timeout the request should be served with a default timeout if the specified timeout in the request URL exceeds maximum allowed [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ServerSideApply should create an applied object if it does not already exist [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ServerSideApply should give up ownership of a field if forced applied by a controller [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ServerSideApply should ignore conflict errors if force apply is used [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ServerSideApply should not remove a field if an owner unsets the field but other managers still have ownership of the field [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ServerSideApply should remove a field if it is owned but removed in the apply request [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ServerSideApply should work for CRDs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ServerSideApply should work for subresources [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Servers with support for Table transformation should return chunks of table results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Servers with support for Table transformation should return generic metadata details across all namespaces for nodes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Servers with support for Table transformation should return pod details [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin][Alpha][Feature:ValidatingAdmissionPolicy] should allow expressions to refer variables. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin][Alpha][Feature:ValidatingAdmissionPolicy] should type check validation expressions [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin][Alpha][Feature:ValidatingAdmissionPolicy] should validate against a Deployment [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/json,application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf\" [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] client-go should negotiate watch and report errors with accept \"application/vnd.kubernetes.protobuf,application/json\" [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-kube-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-kube-api connection/new should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-kube-api connection/new target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-kube-api connection/new target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-kube-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-kube-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-kube-api connection/reused target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-kube-api connection/reused target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-kube-api should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-kube-api should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-oauth-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-oauth-api connection/new should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-oauth-api connection/new target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-oauth-api connection/new target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-oauth-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-oauth-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-oauth-api connection/reused target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-oauth-api connection/reused target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-oauth-api should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-oauth-api should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-openshift-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-openshift-api connection/new should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-openshift-api connection/new target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-openshift-api connection/new target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-openshift-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-openshift-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-openshift-api connection/reused target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-openshift-api connection/reused target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-openshift-api should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/cache-openshift-api should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/kube-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/kube-api connection/new should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/kube-api connection/new target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/kube-api connection/new target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/kube-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/kube-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/kube-api connection/reused target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/kube-api connection/reused target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/kube-api should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/kube-api should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/oauth-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/oauth-api connection/new should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/oauth-api connection/new target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/oauth-api connection/new target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/oauth-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/oauth-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/oauth-api connection/reused target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/oauth-api connection/reused target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/oauth-api should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/oauth-api should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/openshift-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/openshift-api connection/new should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/openshift-api connection/new target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/openshift-api connection/new target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/openshift-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/openshift-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/openshift-api connection/reused target=api-int should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/openshift-api connection/reused target=service-network should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/openshift-api should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/openshift-api should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/cache-kube-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/cache-kube-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/cache-oauth-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/cache-oauth-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/cache-openshift-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/cache-openshift-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/kube-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/kube-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/oauth-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/oauth-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/openshift-api connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] disruption/service-network/openshift-api connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] health handlers should contain necessary checks [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] kube-apiserver terminates within graceful termination period",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] kube-apiserver terminates within graceful termination period",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] kube-apiserver-new-connection should be available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] kube-apiserver-reused-connection should be available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] oauth-apiserver-new-connection should be available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] oauth-apiserver-reused-connection should be available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] openshift-apiserver-new-connection should be available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] openshift-apiserver-reused-connection should be available",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] server version should find the server version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery] the pod.spec.nodeName field is immutable, once set cannot be changed",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery] the pod.spec.nodeName field is immutable, once set cannot be changed",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer] TestTLSDefaults [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer] anonymous browsers should get a 403 from / [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer] authenticated browser should get a 200 from / [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer] should serve openapi v3 [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer] should serve openapi v3 discovery [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer] start in-cluster disruption monitors [Early] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer] start in-cluster disruption monitors [Early] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer] tear down in-cluster disruption monitors [Late] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer][Late] API LBs follow /readyz of kube-apiserver and don't send request early [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer][Late] API LBs follow /readyz of kube-apiserver and stop sending requests [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer][Late] API LBs follow /readyz of kube-apiserver and stop sending requests before server shutdowns for external clients [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer][Late] API LBs follow /readyz of kube-apiserver and stop sending requests before server shutdowns for external clients [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer][Late] kube-apiserver terminates within graceful termination period [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:APIServer][Late] kubelet terminates kube-apiserver gracefully [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ClusterResourceQuota] Cluster resource quota should control resource limits across namespaces [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ClusterResourceQuota] Cluster resource quota should control resource limits across namespaces [apigroup:quota.openshift.io][apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ClusterResourceQuota] Cluster resource quota should control resource limits across namespaces [apigroup:quota.openshift.io][apigroup:image.openshift.io][apigroup:monitoring.coreos.com][apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ResourceQuota] Object count The number of created persistent volume claims can not exceed the limitation [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ResourceQuota] Object count check the quota after import-image with --all option [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ResourceQuota] Object count check the quota after import-image with --all option [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ResourceQuota] Object count should properly count the number of imagestreams resources [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ResourceQuota] Object count should properly count the number of imagestreams resources [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ResourceQuota] Object count should properly count the number of persistentvolumeclaims resources [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for apps.openshift.io/v1, Resource=deploymentconfigs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for apps.openshift.io/v1, Resource=deploymentconfigs [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for build.openshift.io/v1, Resource=buildconfigs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for build.openshift.io/v1, Resource=buildconfigs [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for build.openshift.io/v1, Resource=builds [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for build.openshift.io/v1, Resource=builds [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for image.openshift.io/v1, Resource=images [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for image.openshift.io/v1, Resource=images [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for image.openshift.io/v1, Resource=imagestreams [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for image.openshift.io/v1, Resource=imagestreams [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for oauth.openshift.io/v1, Resource=oauthaccesstokens [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for oauth.openshift.io/v1, Resource=oauthaccesstokens [apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for oauth.openshift.io/v1, Resource=oauthauthorizetokens [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for oauth.openshift.io/v1, Resource=oauthauthorizetokens [apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for oauth.openshift.io/v1, Resource=oauthclientauthorizations [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for oauth.openshift.io/v1, Resource=oauthclientauthorizations [apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for oauth.openshift.io/v1, Resource=oauthclients [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for oauth.openshift.io/v1, Resource=oauthclients [apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for route.openshift.io/v1, Resource=routes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for route.openshift.io/v1, Resource=routes [apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for security.openshift.io/v1, Resource=rangeallocations [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for security.openshift.io/v1, Resource=rangeallocations [apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for template.openshift.io/v1, Resource=brokertemplateinstances [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for template.openshift.io/v1, Resource=brokertemplateinstances [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for template.openshift.io/v1, Resource=templateinstances [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for template.openshift.io/v1, Resource=templateinstances [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for template.openshift.io/v1, Resource=templates [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for template.openshift.io/v1, Resource=templates [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for user.openshift.io/v1, Resource=groups [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for user.openshift.io/v1, Resource=groups [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for user.openshift.io/v1, Resource=identities [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for user.openshift.io/v1, Resource=identities [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for user.openshift.io/v1, Resource=users [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-api-machinery][Feature:ServerSideApply] Server-Side Apply should work for user.openshift.io/v1, Resource=users [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should be able to schedule after more than 100 missed schedule [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should delete failed finished jobs with limit of one job [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should delete successful finished jobs with limit of one successful job [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should not emit unexpected warnings [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should remove from active list jobs that have been deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should schedule multiple jobs concurrently [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should support CronJob API operations [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] CronJob should support timezone [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DaeXXX set [Serial] should list and delete a collection of DaeXXXSets [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DaeXXX set [Serial] should not update pod when spec was updated and update strategy is OnDelete [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DaeXXX set [Serial] should retry creating failed daeXXX pods [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DaeXXX set [Serial] should rollback without unnecessary restarts [Conformance] [Skipped:SingleReplicaTopology] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DaeXXX set [Serial] should run and stop complex daeXXX [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DaeXXX set [Serial] should run and stop complex daeXXX with node affinity [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DaeXXX set [Serial] should run and stop simple daeXXX [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DaeXXX set [Serial] should surge pods onto nodes when spec was updated and update strategy is RollingUpdate [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DaeXXX set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DaeXXX set [Serial] should verify changes to a daeXXX set status [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should not update pod when spec was updated and update strategy is OnDelete [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [Skipped:SingleReplicaTopology] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should run and stop complex daemon with node affinity [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should surge pods onto nodes when spec was updated and update strategy is RollingUpdate [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment deployment reaping should cascade to its replica sets and pods [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment deployment should delete old replica sets [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment deployment should support proportional scaling [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment deployment should support rollover [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment iterative rollouts should eventually progress [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment should not disrupt a cloud load-balancer's connectivity during rollout [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Deployment test Deployment ReplicaSet orphaning and adoption regarding controllerRef [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController evictions: enough pods, absolute =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController evictions: enough pods, replicaSet, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController evictions: maxUnavailable allow single eviction, percentage =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController evictions: maxUnavailable deny evictions, integer =\u003e should not allow an eviction [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController evictions: no PDB =\u003e should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController evictions: too few pods, absolute =\u003e should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController evictions: too few pods, replicaSet, percentage =\u003e should not allow an eviction [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController should create a PodDisruptionBudget [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController should observe that the PodDisruptionBudget status is not updated for unmanaged pods [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job Using a pod failure policy to not count some failures towards the backoffLimit Ignore DisruptionTarget condition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job Using a pod failure policy to not count some failures towards the backoffLimit Ignore exit code 137 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should allow to use the pod failure policy to not count the failure towards the backoffLimit [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should apply changes to a job status [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should delete a job [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should delete pods when suspended [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should fail to exceed backoffLimit [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should fail when exceeds active deadline [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should manage the lifecycle of a job [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should manage the lifecycle of a job [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should not create pods when created in suspend state [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should remove pods when job is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should run a job to completion when tasks succeed [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] Job should run a job to completion with CPU requests [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicaSet should serve a basic image on each replica with a private image [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicaSet should surface a failure condition on a comXXX issue like exceeded quota [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicaSet should surface a failure condition on a common issue like exceeded quota [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicationController should release no longer matching pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicationController should serve a basic image on each replica with a private image [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicationController should surface a failure condition on a comXXX issue like exceeded quota [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet AvailableReplicas should get updated accordingly when MinReadySeconds is enabled [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should adopt matching orphans and release non-matching pods [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should implement legacy replacement when the update strategy is OnDelete [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should not deadlock when a pod's predecessor fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications with PVCs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should provide basic identity [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet MinReadySeconds should be honored when enabled [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Non-retain StatefulSetPersistentVolumeClaimPolicy should delete PVCs after adopting pod (WhenDeleted) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Non-retain StatefulSetPersistentVolumeClaimPolicy should delete PVCs after adopting pod (WhenScaled) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Non-retain StatefulSetPersistentVolumeClaimPolicy should delete PVCs with a OnScaledown policy [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Non-retain StatefulSetPersistentVolumeClaimPolicy should delete PVCs with a WhenDeleted policy [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Scaling StatefulSetStartOrdinal Decreasing .start.ordinal [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Scaling StatefulSetStartOrdinal Increasing .start.ordinal [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Scaling StatefulSetStartOrdinal Removing .start.ordinal [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Scaling StatefulSetStartOrdinal Setting .start.ordinal [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Scaling StatefulSetStartOrdinal [Feature:StatefulSetStartOrdinal] Decreasing .start.ordinal [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Scaling StatefulSetStartOrdinal [Feature:StatefulSetStartOrdinal] Increasing .start.ordinal [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Scaling StatefulSetStartOrdinal [Feature:StatefulSetStartOrdinal] Removing .start.ordinal [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet Scaling StatefulSetStartOrdinal [Feature:StatefulSetStartOrdinal] Setting .start.ordinal [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should adopt matching orphans and release non-matching pods [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should implement legacy replacement when the update strategy is OnDelete [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should not deadlock when a pod's predecessor fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications with PVCs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should provide basic identity [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] TTLAfterFinished job should be deleted once it finishes after TTL seconds [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] [Feature:TTLAfterFinished] job should be deleted once it finishes after TTL seconds [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] daemonset-upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-apps] deployment-upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-apps] job-upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-apps] poddisruptionbudgets with unhealthyPodEvictionPolicy should evict according to the AlwaysAllow policy [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] poddisruptionbudgets with unhealthyPodEvictionPolicy should evict according to the IfHealthyBudget policy [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps] replicaset-upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-apps] statefulset-upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs  should adhere to Three Laws of Controllers [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs  should adhere to Three Laws of Controllers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs adoption will orphan all RCs and adopt them back when recreated [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs adoption will orphan all RCs and adopt them back when recreated [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs adoption will orphan all RCs and adopt them back when recreated [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs generation should deploy based on a status version bump [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs generation should deploy based on a status version bump [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs generation should deploy based on a status version bump [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason should let the deployment config with a NewReplicationControllerCreated reason [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason should let the deployment config with a NewReplicationControllerCreated reason [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs initially should not deploy if pods never transition to ready [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs initially should not deploy if pods never transition to ready [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid should deal with cancellation after deployer pod succeeded [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid should deal with cancellation after deployer pod succeeded [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid should deal with cancellation after deployer pod succeeded [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid should deal with cancellation of running deployment [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid should deal with cancellation of running deployment [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid should deal with config change in case the deployment is still running [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs keep the deployer pod invariant valid should deal with config change in case the deployment is still running [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs paused should disable actions on deployments [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs paused should disable actions on deployments [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs paused should disable actions on deployments [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs rolled back should rollback to an older deployment [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs rolled back should rollback to an older deployment [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs rolled back should rollback to an older deployment [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs should adhere to Three Laws of Controllers [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy resolve the image pull spec [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy resolve the image pull spec [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy resolve the image pull spec [apigroup:apps.openshift.io][apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs viewing rollout history should print the rollout history [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs viewing rollout history should print the rollout history [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs viewing rollout history should print the rollout history [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when changing image change trigger should successfully trigger from an updated image [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when changing image change trigger should successfully trigger from an updated image [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when changing image change trigger should successfully trigger from an updated image [apigroup:apps.openshift.io][apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when run iteratively should immediately start a new deployment [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when run iteratively should immediately start a new deployment [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when run iteratively should only deploy the last deployment [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when run iteratively should only deploy the last deployment [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when run iteratively should only deploy the last deployment [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when tagging images should successfully tag the deployed image [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when tagging images should successfully tag the deployed image [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when tagging images should successfully tag the deployed image [apigroup:apps.openshift.io][apigroup:authorization.openshift.io][apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with custom deployments should run the custom deployment steps [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with custom deployments should run the custom deployment steps [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with custom deployments should run the custom deployment steps [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with enhanced status should include various info in status [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with enhanced status should include various info in status [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with enhanced status should include various info in status [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap should expand the config map key to a value [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap should expand the config map key to a value [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap should expand the config map key to a value [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with failing hook should get all logs from retried hooks [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with failing hook should get all logs from retried hooks [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with failing hook should get all logs from retried hooks [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set should not transition the deployment to Complete before satisfied [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set should not transition the deployment to Complete before satisfied [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with a trigger used by different containers [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with a trigger used by different containers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with a trigger used by different containers [apigroup:apps.openshift.io][apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with multiple triggers [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with multiple triggers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with multiple triggers [apigroup:apps.openshift.io][apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with revision history limits should never persist more old deployments than acceptable after being observed by the controller [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with revision history limits should never persist more old deployments than acceptable after being observed by the controller [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with revision history limits should never persist more old deployments than acceptable after being observed by the controller [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with test deployments should run a deployment to completion and then scale to zero [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with test deployments should run a deployment to completion and then scale to zero [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with test deployments should run a deployment to completion and then scale to zero [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images when patched with empty image [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images when patched with empty image [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:DeploymentConfig] deploymentconfigs won't deploy RC with unresolved images when patched with empty image [apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:Jobs] Users should be able to create and run a job in a user project [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:Jobs] Users should be able to create and run a job in a user project [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestDeployScale [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestDeployScale [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestDeploymentConfigDefaults [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestDeploymentConfigDefaults [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestTriggers_MultipleICTs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestTriggers_MultipleICTs [apigroup:apps.openshift.io][apigroup:images.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestTriggers_configChange [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestTriggers_configChange [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestTriggers_imageChange [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestTriggers_imageChange [apigroup:apps.openshift.io][apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestTriggers_imageChange_nonAutomatic [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestTriggers_imageChange_nonAutomatic [apigroup:image.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestTriggers_manual [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-apps][Feature:OpenShiftControllerManager] TestTriggers_manual [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Check if alerts are firing during or after upgrade success",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-arch] Check if critical alerts are firing after upgrade success",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-arch] Cluster topology single node tests Verify that OpenShift components deploy one replica in SingleReplica topology mode [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Cluster topology single node tests [apigroup:config.openshift.io] Verify that OpenShift components deploy one replica in SingleReplica topology mode [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] ClusterOperators [apigroup:config.openshift.io] should define at least one namespace in their lists of related objects  [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] ClusterOperators [apigroup:config.openshift.io] should define at least one related object that is not a namespace [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] ClusterOperators [apigroup:config.openshift.io] should define valid related objects [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] ClusterOperators should define at least one namespace in their lists of related objects [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] ClusterOperators should define at least one related object that is not a namespace [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] ClusterOperators should define valid related objects [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] External binary usage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] External binary usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should [apigroup:apps.openshift.io] should expose cluster services outside the cluster [apigroup:route.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should ensure control plane operators do not make themselves unevictable [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should ensure control plane pods do not run in best-effort QoS [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should ensure platform components have system-* priority class associated [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should ensure pods use downstream images from our release image with proper ImagePullPolicy [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should ensure pods use downstream images from our release image with proper ImagePullPolicy [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should expose cluster services outside the cluster [apigroup:route.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should have no crashlooping pods in core namespaces over four minutes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should have operators on the cluster version [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should have operators on the cluster version [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should only include cluster daeXXXsets that have maxUnavailable or maxSurge update of 10 percent or maxUnavailable of 33 percent [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should only include cluster daeXXXsets that have maxUnavailable update of 10 or 33 percent [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should only include cluster daeXXXsets that have maxUnavailable update of 10 or 33 percent [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should only include cluster daemonsets that have maxUnavailable or maxSurge update of 10 percent or maxUnavailable of 33 percent [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should only include cluster daemonsets that have maxUnavailable update of 10 or 33 percent [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should only include cluster daemonsets that have maxUnavailable update of 10 or 33 percent [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should set requests but not limits [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should should expose cluster services outside the cluster [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Managed cluster should should expose cluster services outside the cluster [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] Only known images used by tests",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] Only known images used by tests",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] [Conformance] FIPS TestFIPS [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] [Conformance] FIPS TestFIPS [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] [Conformance] sysctl pod should not start for sysctl not on whitelist kernel.msgmax [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] [Conformance] sysctl pod should not start for sysctl not on whitelist net.ipv4.ip_dynaddr [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] [Conformance] sysctl whitelists kernel.shm_rmid_forced [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] [Conformance] sysctl whitelists net.ipv4.ip_local_port_range [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] [Conformance] sysctl whitelists net.ipv4.ip_unprivileged_port_start [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] [Conformance] sysctl whitelists net.ipv4.ping_group_range [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] [Conformance] sysctl whitelists net.ipv4.tcp_syncookies [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] cloud API quota should not be exceeded",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] cloud API quota should not be exceeded",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace default",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace default",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace kube-system",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace kube-system",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-apiserver-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-apiserver-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-authentication",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-authentication",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-authentication-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-authentication-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cloud-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cloud-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cloud-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cloud-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cloud-credential-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cloud-credential-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cloud-network-config-controller",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cloud-network-config-controller",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-csi-drivers",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-csi-drivers",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-machine-approver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-machine-approver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-node-tuning-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-node-tuning-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-samples-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-samples-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-storage-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-storage-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-version",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-cluster-version",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-config",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-config",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-config-managed",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-config-managed",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-config-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-config-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-console",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-console",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-console-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-console-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-dns",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-dns",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-dns-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-dns-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-etcd",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-etcd",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-etcd-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-etcd-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-host-network",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-host-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-image-registry",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-image-registry",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-ingress",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-ingress",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-ingress-canary",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-ingress-canary",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-ingress-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-ingress-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-insights",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-insights",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kni-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kni-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-apiserver-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-apiserver-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-scheduler",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-scheduler",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-scheduler-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-scheduler-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-storage-version-migrator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-storage-version-migrator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-storage-version-migrator-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-kube-storage-version-migrator-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-machine-api",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-machine-api",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-machine-config-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-machine-config-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-marketplace",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-marketplace",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-monitoring",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-monitoring",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-multus",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-multus",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-network-diagnostics",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-network-diagnostics",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-network-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-network-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-nutanix-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-nutanix-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-oauth-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-oauth-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-openstack-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-openstack-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-operator-lifecycle-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-operator-lifecycle-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-operators",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-operators",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-ovirt-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-ovirt-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-ovn-kubernetes",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-ovn-kubernetes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-service-ca",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-service-ca",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-service-ca-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-service-ca-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-user-workload-monitoring",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-user-workload-monitoring",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-vsphere-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for namespace openshift-vsphere-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/default",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/default",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/kube-system",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/kube-system",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-apiserver-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-apiserver-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-authentication",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-authentication",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-authentication-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-authentication-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cloud-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cloud-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cloud-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cloud-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cloud-credential-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cloud-credential-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cloud-network-config-controller",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cloud-network-config-controller",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-csi-drivers",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-csi-drivers",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-machine-approver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-machine-approver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-node-tuning-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-node-tuning-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-samples-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-samples-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-storage-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-storage-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-version",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-cluster-version",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-config",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-config",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-config-managed",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-config-managed",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-config-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-config-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-console",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-console",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-console-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-console-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-dns",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-dns",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-dns-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-dns-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-etcd",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-etcd",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-etcd-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-etcd-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-host-network",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-host-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-image-registry",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-image-registry",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-ingress",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-ingress",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-ingress-canary",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-ingress-canary",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-ingress-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-ingress-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-insights",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-insights",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kni-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kni-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-apiserver-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-apiserver-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-controller-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-controller-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-controller-manager-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-controller-manager-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-scheduler",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-scheduler",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-scheduler-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-scheduler-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-storage-version-migrator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-storage-version-migrator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-storage-version-migrator-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-kube-storage-version-migrator-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-machine-api",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-machine-api",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-machine-config-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-machine-config-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-marketplace",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-marketplace",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-monitoring",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-monitoring",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-multus",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-multus",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-network-diagnostics",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-network-diagnostics",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-network-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-network-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-nutanix-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-nutanix-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-oauth-apiserver",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-oauth-apiserver",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-openstack-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-openstack-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-operator-lifecycle-manager",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-operator-lifecycle-manager",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-operators",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-operators",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-ovirt-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-ovirt-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-ovn-kubernetes",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-ovn-kubernetes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-service-ca",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-service-ca",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-service-ca-operator",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-service-ca-operator",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-user-workload-monitoring",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-user-workload-monitoring",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-vsphere-infra",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically for ns/openshift-vsphere-infra",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically in e2e namespaces",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] events should not repeat pathologically in e2e namespaces",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] ocp payload should be based on existing source OLM version should contain the source commit id [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] ocp payload should be based on existing source OLM version should contain the source commit id [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] ocp payload should be based on existing source OLM version should contain the source commit id [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] ocp payload should be based on existing source [Serial] olm version should contain the source commit id [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] openshift-marketplace pods should not get excessive startupProbe failures",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] openshift-marketplace pods should not get excessive startupProbe failures",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] pathological event should not see excessive pull back-off on registry.redhat.io",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] pathological event should not see excessive pull back-off on registry.redhat.io",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch] should not see excessive pull back-off on registry.redhat.io",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch] should not see excessive pull back-off on registry.redhat.io",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Early] CRDs for openshift.io should have a status in the CRD schema [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch][Early] CRDs for openshift.io should have a status in the CRD schema [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Early] CRDs for openshift.io should have subresource.status [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch][Early] CRDs for openshift.io should have subresource.status [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Early] Managed cluster should [apigroup:config.openshift.io] start all core operators [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch][Early] Managed cluster should [apigroup:config.openshift.io] start all core operators [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Early] Managed cluster should start all core operators [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch][Early] Managed cluster should start all core operators [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Early] Managed cluster should start all core operators [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Feature:ClusterUpgrade] All nodes should be in ready state [Early][Suite:upgrade]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch][Feature:ClusterUpgrade] Cluster should be upgradeable after finishing upgrade [Late][Suite:upgrade]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch][Feature:ClusterUpgrade] Cluster should be upgradeable before beginning upgrade [Early][Suite:upgrade]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch][Feature:ClusterUpgrade] Cluster should remain functional during upgrade [Disruptive] [Serial]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch][Feature:ClusterUpgrade] Cluster should remain functional during upgrade [Disruptive] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Feature:ClusterUpgrade] tear down in-cluster disruption monitors [Late][Suite:upgrade]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-arch][Late] clients should not use APIs that are removed in upcoming releases [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Late] clients should not use APIs that are removed in upcoming releases [apigroup:apiserver.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Late] clients should not use APIs that are removed in upcoming releases [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Late] operators should not create watch channels very often [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Late] operators should not create watch channels very often [apigroup:apiserver.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][Late] operators should not create watch channels very often [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cloud Compute][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-controller-manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cloud Compute][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-controller-manager-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cloud Compute][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-machine-approver [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cloud Compute][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-machine-api [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cloud Compute][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-controller-manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cloud Compute][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-controller-manager-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cloud Compute][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-machine-approver [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cloud Compute][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-machine-api [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cloud Credential Operator][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-credential-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cloud Credential Operator][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-credential-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cluster Version Operator][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-version [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Cluster Version Operator][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-version [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-DNS][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-dns [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-DNS][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-dns-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-DNS][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-dns [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-DNS][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-dns-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Etcd][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-etcd [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Etcd][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-etcd-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Etcd][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-etcd [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Etcd][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-etcd-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Image Registry][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-image-registry [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Image Registry][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-image-registry [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Machine Config Operator][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-machine-config-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Machine Config Operator][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-machine-config-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Management Console][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-console [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Management Console][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-console-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Management Console][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-console [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Management Console][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-console-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-cloud-network-config-controller [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-host-network [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-multus [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-network-diagnostics [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-network-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-ovn-kubernetes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-cloud-network-config-controller [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-host-network [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-multus [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-network-diagnostics [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-network-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Networking][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-ovn-kubernetes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Node Tuning Operator][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-node-tuning-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Node Tuning Operator][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-node-tuning-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-OLM][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-marketplace [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-OLM][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-operator-lifecycle-manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-OLM][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-operators [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-OLM][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-marketplace [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-OLM][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-operator-lifecycle-manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-OLM][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-operators [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-OLM][Late] Alerts alert/RedhatOperatorsCatalogError should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-OLM][Late] Alerts alert/RedhatOperatorsCatalogError should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Routing][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-ingress [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Routing][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-ingress-canary [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Routing][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-ingress-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Routing][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-ingress [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Routing][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-ingress-canary [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Routing][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-ingress-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Samples][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-samples-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Samples][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-samples-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Storage][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-csi-drivers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Storage][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-cluster-storage-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Storage][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-csi-drivers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Storage][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-cluster-storage-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in all the other namespaces [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/default [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/kube-system [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-config [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-config-managed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-insights [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-kni-infra [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-nutanix-infra [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-openstack-infra [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-ovirt-infra [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-user-workload-monitoring [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-vsphere-infra [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in all the other namespaces [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/default [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/kube-system [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-config [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-config-managed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-insights [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-kni-infra [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-nutanix-infra [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-openstack-infra [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-ovirt-infra [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-user-workload-monitoring [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-Unknown][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-vsphere-infra [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-apiserver-auth][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-authentication [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-apiserver-auth][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-authentication-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-apiserver-auth][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-authentication [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-apiserver-auth][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-authentication-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-config-operator][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-config-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-config-operator][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-config-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdGRPCRequestsSlow should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdGRPCRequestsSlow should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdHighCommitDurations should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdHighCommitDurations should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdHighFsyncDurations should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdHighFsyncDurations should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdHighNumberOfFailedGRPCRequests should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdHighNumberOfFailedGRPCRequests should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdHighNumberOfLeaderChanges should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdHighNumberOfLeaderChanges should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdInsufficientMembers should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdInsufficientMembers should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdMemberCommunicationSlow should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdMemberCommunicationSlow should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdMembersDown should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdMembersDown should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdNoLeader should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-etcd][Late] Alerts alert/etcdNoLeader should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-apiserver][Late] Alerts alert/KubeAPIErrorBudgetBurn should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-apiserver][Late] Alerts alert/KubeAPIErrorBudgetBurn should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-apiserver][Late] Alerts alert/KubeClientErrors should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-apiserver][Late] Alerts alert/KubeClientErrors should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-apiserver][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-kube-apiserver [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-apiserver][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-kube-apiserver-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-apiserver][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-apiserver [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-apiserver][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-apiserver-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-controller-manager][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-kube-controller-manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-controller-manager][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-kube-controller-manager-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-controller-manager][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-controller-manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-controller-manager][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-controller-manager-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-scheduler][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-kube-scheduler [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-scheduler][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-kube-scheduler-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-scheduler][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-scheduler [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-scheduler][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-scheduler-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-storage-version-migrator][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-kube-storage-version-migrator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-storage-version-migrator][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-kube-storage-version-migrator-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-storage-version-migrator][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-storage-version-migrator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-kube-storage-version-migrator][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-kube-storage-version-migrator-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-machine config operator][Late] Alerts alert/MCDDrainError should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-machine config operator][Late] Alerts alert/MCDDrainError should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-monitoring][Late] Alerts alert/PrometheusOperatorWatchErrors should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-monitoring][Late] Alerts alert/PrometheusOperatorWatchErrors should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-monitoring][Late] Alerts alert/Watchdog must have no gaps or changes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-oauth-apiserver][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-oauth-apiserver [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-oauth-apiserver][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-oauth-apiserver [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-openshift-apiserver][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-apiserver [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-openshift-apiserver][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-apiserver-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-openshift-apiserver][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-apiserver [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-openshift-apiserver][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-apiserver-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-openshift-controller-manager][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-controller-manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-openshift-controller-manager][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-controller-manager-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-openshift-controller-manager][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-controller-manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-openshift-controller-manager][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-controller-manager-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-service-ca][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-service-ca [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-service-ca][Late] Alerts alert/KubePodNotReady should not be at or above info in ns/openshift-service-ca-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-service-ca][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-service-ca [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-service-ca][Late] Alerts alert/KubePodNotReady should not be at or above pending in ns/openshift-service-ca-operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-storage][Late] Alerts alert/KubePersistentVolumeErrors should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-storage][Late] Alerts alert/KubePersistentVolumeErrors should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-storage][Late] Alerts alert/VSphereOpenshiftNodeHealthFail should not be at or above info [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-arch][bz-storage][Late] Alerts alert/VSphereOpenshiftNodeHealthFail should not be at or above pending [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-architecture] platform pods should not be force deleted with gracePeriod 0",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-architecture] platform pods should not be force deleted with gracePeriod 0",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-architecture] platform pods should not exit more than once with a non-zero exit code",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-architecture] platform pods should not exit more than once with a non-zero exit code",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-architecture] platform pods should not fail to start",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-architecture] platform pods should not fail to start",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] Certificates API [Privileged:ClusterAdmin] should support building a client with a CSR [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] Metadata Concealment should run a check-metadata-concealment job to completion [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] SelfSubjectReview [Feature:APISelfSubjectReview] should support SelfSubjectReview API operations [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] SelfSubjectReview [Feature:APISelfSubjectReview] testing SSR in different API groups authentication/v1beta1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] SelfSubjectReview should support SelfSubjectReview API operations [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] SelfSubjectReview testing SSR in different API groups authentication/v1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] SelfSubjectReview testing SSR in different API groups authentication/v1beta1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] ServiceAccounts no secret-based service account token should be auto-generated [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] ServiceAccounts should set ownership and permission when RunAsUser or FsGroup is present [LinuxOnly] [NodeFeature:FSGroup] [Feature:TokenRequestProjection] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] ServiceAccounts should set ownership and permission when RunAsUser or FsGroup is present [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthenticator] The kubelet can delegate ServiceAccount tokens to the API server [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthenticator] The kubelet can delegate ServiceAccount tokens to the API server [Skipped:ibmroks] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthenticator] The kubelet's main port 10250 should reject requests with no credentials [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthenticator] The kubelet's main port 10250 should reject requests with no credentials [Skipped:ibmroks] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to create another node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to delete another node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] Getting a non-existent configmap should exit with the Forbidden error, not a NotFound error [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] Getting a non-existent configmap should exit with the Forbidden error, not a NotFound error [Skipped:ibmroks] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] Getting a non-existent secret should exit with the Forbidden error, not a NotFound error [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] Getting a non-existent secret should exit with the Forbidden error, not a NotFound error [Skipped:ibmroks] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] Getting a secret for a workload the node has access to should succeed [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] Getting a secret for a workload the node has access to should succeed [Skipped:ibmroks] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] Getting an existing configmap should exit with the Forbidden error [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] Getting an existing configmap should exit with the Forbidden error [Skipped:ibmroks] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] Getting an existing secret should exit with the Forbidden error [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth] [Feature:NodeAuthorizer] Getting an existing secret should exit with the Forbidden error [Skipped:ibmroks] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:Authentication]  TestFrontProxy should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:Authentication]  TestFrontProxy should succeed [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [apigroup:user.openshift.io][apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [apigroup:user.openshift.io][apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:LDAP] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:LDAP] LDAP should start an OpenLDAP test server [apigroup:user.openshift.io][apigroup:security.openshift.io][apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:LDAP][Serial] ldap group sync can sync groups from ldap [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:LDAP][Serial] ldap group sync can sync groups from ldap [apigroup:user.openshift.io][apigroup:authorization.openshift.io][apigroup:security.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] ClientSecretWithPlus should create oauthclient [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] ClientSecretWithPlus should create oauthclient [apigroup:config.openshift.io][apigroup:oauth.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] ClientSecretWithPlus should create oauthclient [apigroup:oauth.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] OAuth Authenticator accepts classic non-prefixed access tokens [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] OAuth Authenticator accepts sha256 access tokens [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] OAuth Authenticator accepts sha256 access tokens [apigroup:user.openshift.io][apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] OAuth server [apigroup:auth.openshift.io] should use http1.1 only to prevent http2 connection reuse [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] OAuth server has the correct token and certificate fallback semantics [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] OAuth server has the correct token and certificate fallback semantics [apigroup:config.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] OAuth server has the correct token and certificate fallback semantics [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] OAuth server should use http1.1 only to prevent http2 connection reuse [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] OAuthClientWithRedirectURIs must validate request URIs according to oauth-client definition [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers][apigroup:route.openshift.io][apigroup:config.openshift.io][apigroup:oauth.openshift.io] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers][apigroup:route.openshift.io][apigroup:config.openshift.io][apigroup:oauth.openshift.io] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers][apigroup:route.openshift.io][apigroup:config.openshift.io][apigroup:oauth.openshift.io] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers][apigroup:route.openshift.io][apigroup:config.openshift.io][apigroup:oauth.openshift.io] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers][apigroup:route.openshift.io][apigroup:config.openshift.io][apigroup:oauth.openshift.io] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers][apigroup:route.openshift.io][apigroup:config.openshift.io][apigroup:oauth.openshift.io] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers][apigroup:route.openshift.io][apigroup:config.openshift.io][apigroup:oauth.openshift.io] expected headers returned from the root URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers][apigroup:route.openshift.io][apigroup:config.openshift.io][apigroup:oauth.openshift.io] expected headers returned from the token URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Headers][apigroup:route.openshift.io][apigroup:config.openshift.io][apigroup:oauth.openshift.io] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age [apigroup:oauth.openshift.io] to generate tokens that do not expire works as expected when using a code authorization flow [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age [apigroup:oauth.openshift.io] to generate tokens that do not expire works as expected when using a token authorization flow [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age [apigroup:oauth.openshift.io] to generate tokens that expire shortly works as expected when using a code authorization flow [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age [apigroup:oauth.openshift.io] to generate tokens that expire shortly works as expected when using a token authorization flow [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] [apigroup:oauth.openshift.io] OAuthClientWithRedirectURIs must validate request URIs according to oauth-client definition [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] well-known endpoint should be reachable [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] well-known endpoint should be reachable [apigroup:config.openshift.io][apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] well-known endpoint should be reachable [apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OAuthServer] well-known endpoint should be reachable [apigroup:route.openshift.io] [apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyClusterRoleEndpoint should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyEndpointConfirmNoEscalation should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleBindingEndpoint should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] RBAC proxy for openshift authz  RunLegacyLocalRoleEndpoint should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] RBAC proxy for openshift authz RunLegacyClusterRoleBindingEndpoint should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] RBAC proxy for openshift authz RunLegacyClusterRoleEndpoint should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] RBAC proxy for openshift authz RunLegacyEndpointConfirmNoEscalation [apigroup:authorization.openshift.io] should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] RBAC proxy for openshift authz RunLegacyLocalRoleBindingEndpoint should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] RBAC proxy for openshift authz RunLegacyLocalRoleEndpoint should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] The default cluster RBAC policy should have correct RBAC rules [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReview should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] authorization  TestAuthorizationSubjectAccessReviewAPIGroup should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] authorization  TestBrowserSafeAuthorizer should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] authorization  TestClusterReaderCoverage should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] authorization TestAuthorizationSubjectAccessReview should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] authorization TestAuthorizationSubjectAccessReviewAPIGroup should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] authorization TestBrowserSafeAuthorizer should succeed [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] authorization TestClusterReaderCoverage should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] scopes TestScopeEscalations should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] scopes TestScopeEscalations should succeed [apigroup:user.openshift.io][apigroup:authorization.openshift.io][apigroup:build.openshift.io][apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] scopes TestScopedImpersonation should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] scopes TestScopedImpersonation should succeed [apigroup:user.openshift.io][apigroup:authorization.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] scopes TestScopedTokens should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] scopes TestScopedTokens should succeed [apigroup:user.openshift.io][apigroup:authorization.openshift.io][apigroup:oauth.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] scopes TestTokensWithIllegalScopes should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] scopes TestTokensWithIllegalScopes should succeed [apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] scopes TestUnknownScopes should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] scopes TestUnknownScopes should succeed [apigroup:user.openshift.io][apigroup:authorization.openshift.io][apigroup:project.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] self-SAR compatibility  TestBootstrapPolicySelfSubjectAccessReviews should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] self-SAR compatibility  TestSelfSubjectAccessReviewsNonExistingNamespace should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] self-SAR compatibility TestBootstrapPolicySelfSubjectAccessReviews should succeed [apigroup:user.openshift.io][apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization] self-SAR compatibility TestSelfSubjectAccessReviewsNonExistingNamespace should succeed [apigroup:user.openshift.io][apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization][Serial] authorization  TestAuthorizationResourceAccessReview should succeed [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:OpenShiftAuthorization][Serial] authorization TestAuthorizationResourceAccessReview should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:PodSecurity] restricted-v2 SCC should mutate empty securityContext to match restricted PSa profile [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:PodSecurity][Feature:SCC] SCC admission fails for incorrect/non-existent required-scc annotation [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:PodSecurity][Feature:SCC] creating pod controllers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:PodSecurity][Feature:SCC] required-scc annotation is being applied to workloads [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestInvalidRoleRefs should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestInvalidRoleRefs should succeed [apigroup:authorization.openshift.io][apigroup:user.openshift.io][apigroup:project.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestProjectIsNamespace should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestProjectIsNamespace should succeed [apigroup:project.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestProjectWatch should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestProjectWatch should succeed [apigroup:project.openshift.io][apigroup:authorization.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestProjectWatchWithSelectionPredicate should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestProjectWatchWithSelectionPredicate should succeed [apigroup:project.openshift.io][apigroup:authorization.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestScopedProjectAccess should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestScopedProjectAccess should succeed [apigroup:user.openshift.io][apigroup:project.openshift.io][apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestUnprivilegedNewProject [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI]  TestUnprivilegedNewProject [apigroup:project.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI][Serial]  TestUnprivilegedNewProjectDenied [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:ProjectAPI][Serial]  TestUnprivilegedNewProjectDenied [apigroup:authorization.openshift.io][apigroup:project.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional  Create a RBAC rolebinding when subject is not already bound and is not permitted by any RBR should fail [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional  Create a rolebinding that also contains system:non-existing users should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is already bound should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is not already bound and is not permitted by any RBR should fail [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional  Create a rolebinding when subject is permitted by RBR should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional  Create a rolebinding when there are no restrictions should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional  Rolebinding restrictions tests single project should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional Create a RBAC rolebinding when subject is not already bound and is not permitted by any RBR should fail [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional Create a rolebinding that also contains system:non-existing users should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional Create a rolebinding when subject is already bound should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional Create a rolebinding when subject is not already bound and is not permitted by any RBR should fail [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional Create a rolebinding when subject is permitted by RBR should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional Create a rolebinding when there are no restrictions should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:RoleBindingRestrictions] RoleBindingRestrictions should be functional Rolebinding restrictions tests single project should succeed [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:SCC][Early] should not have pod creation failures during install [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-auth][Feature:SCC][Early] should not have pod creation failures during install [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:SecurityContextConstraints]  TestAllowedSCCViaRBAC [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:SecurityContextConstraints]  TestAllowedSCCViaRBAC [apigroup:project.openshift.io][apigroup:user.openshift.io][apigroup:authorization.openshift.io][apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:SecurityContextConstraints]  TestAllowedSCCViaRBAC with service account [apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:SecurityContextConstraints]  TestPodDefaultCapabilities [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:SecurityContextConstraints]  TestPodDefaultCapabilities [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:SecurityContextConstraints]  TestPodUpdateSCCEnforcement [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:SecurityContextConstraints]  TestPodUpdateSCCEnforcement [apigroup:user.openshift.io][apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:SecurityContextConstraints]  TestPodUpdateSCCEnforcement with service account [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:SecurityContextConstraints]  Websocket requests to pods/exec are subject to security.openshift.io/SCCExecRestrictions [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:UserAPI] groups should work [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:UserAPI] groups should work [apigroup:user.openshift.io][apigroup:project.openshift.io][apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:UserAPI] users can manipulate groups [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-auth][Feature:UserAPI] users can manipulate groups [apigroup:user.openshift.io][apigroup:authorization.openshift.io][apigroup:project.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [Feature:HPA] Horizontal pod autoscaling (scale resource: CPU) CustomResourceDefinition Should scale with a CRD targetRef [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [Feature:HPA] Horizontal pod autoscaling (scale resource: CPU) ReplicationController light Should scale from 1 pod to 2 pods [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale down with Custom Metric of type Object from Stackdriver [Feature:CustomMetricsAutoscaling] [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale down with Custom Metric of type Pod from Stackdriver [Feature:CustomMetricsAutoscaling] [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale down with Custom Metric of type Pod from Stackdriver with Prometheus [Feature:CustomMetricsAutoscaling] [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale down with External Metric with target average value from Stackdriver [Feature:CustomMetricsAutoscaling] [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale down with External Metric with target value from Stackdriver [Feature:CustomMetricsAutoscaling] [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale up with two External metrics from Stackdriver [Feature:CustomMetricsAutoscaling] [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale up with two metrics of type Pod from Stackdriver [Feature:CustomMetricsAutoscaling] [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with Custom Metric of type Object from Stackdriver should scale down [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with Custom Metric of type Object from Stackdriver should scale down to 0 [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with Custom Metric of type Pod from Stackdriver should scale down [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with Custom Metric of type Pod from Stackdriver should scale down with Prometheus [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with Custom Metric of type Pod from Stackdriver should scale up with two metrics [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with External Metric from Stackdriver should scale down with target average value [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with External Metric from Stackdriver should scale down with target value [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with External Metric from Stackdriver should scale up with two metrics [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with multiple metrics of different types should not scale down when one metric is missing (Container Resource and External Metrics) [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with multiple metrics of different types should not scale down when one metric is missing (Pod and Object Metrics) [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with multiple metrics of different types should scale up when one metric is missing (Pod and External metrics) [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-autoscaling] [HPA] [Feature:CustomMetricsAutoscaling] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) with multiple metrics of different types should scale up when one metric is missing (Resource and Object metrics) [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] Multi-stage image builds  should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] Multi-stage image builds should succeed [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] Multi-stage image builds should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] Multi-stage image builds should succeed [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] Optimized image builds  should succeed [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] Optimized image builds  should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] Optimized image builds should succeed [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build can reference a cluster service with a build being created from new-build should be able to run a build that references a cluster service [apigroup:build.openshift.io] [Skipped:Disconnected] [Skipped:Proxy] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build can reference a cluster service with a build being created from new-build should be able to run a build that references a cluster service [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build have source revision metadata started build should contain source revision information [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build with empty source started build should build even with an empty source in build config [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a docker template without an output image reference defined [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a docker template without an output image reference defined [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build without output image building from templates should create an image from a S2i template without an output image reference defined [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] build without output image building from templates should create an image from a docker template without an output image reference defined [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] buildconfig secret injector  should inject secrets to the appropriate buildconfigs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] buildconfig secret injector should inject secrets to the appropriate buildconfigs [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] clone repository using git:// protocol  should clone using git:// if no proxy is configured [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] clone repository using git:// protocol  should clone using git:// if no proxy is configured [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] custom build with buildah  being created from new-build should complete build with custom builder image [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] custom build with buildah being created from new-build should complete build with custom builder image [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] custom build with buildah being created from new-build should complete build with custom builder image built from base image pulled using node secrets [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] custom build with buildah being created from new-build should complete unprivileged build with custom builder image built from base image pulled anonymously [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] custom build with buildah being created from new-build should fail to build the custom builder image without node credentials [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] docker build with a quota Building from a template should create a docker build with a quota and run it [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] imagechangetriggers  imagechangetriggers should trigger builds of all types [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] imagechangetriggers  imagechangetriggers should trigger builds of all types [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] imagechangetriggers imagechangetriggers should trigger builds of all types [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] oc new-app  should fail with a --name longer than 58 characters [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] oc new-app  should succeed with a --name of 58 characters [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] oc new-app  should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] oc new-app  should succeed with an imagestream [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] oc new-app  should succeed with an imagestream [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] oc new-app should fail with a --name longer than 58 characters [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] oc new-app should succeed with a --name of 58 characters [apigroup:build.openshift.io] [Skipped:Disconnected] [Skipped:Proxy] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] oc new-app should succeed with a --name of 58 characters [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] oc new-app should succeed with an imagestream [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  buildconfigs should have a default history limit set when created via the group api [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune builds after a buildConfig change [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune canceled builds based on the failedBuildsHistoryLimit setting [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune completed builds based on the successfulBuildsHistoryLimit setting [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune completed builds based on the successfulBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune errored builds based on the failedBuildsHistoryLimit setting [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune failed builds based on the failedBuildsHistoryLimit setting [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune failed builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig buildconfigs should have a default history limit set when created via the group api [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune builds after a buildConfig change [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune canceled builds based on the failedBuildsHistoryLimit setting [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune completed builds based on the successfulBuildsHistoryLimit setting [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune errored builds based on the failedBuildsHistoryLimit setting [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune failed builds based on the failedBuildsHistoryLimit setting [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] remove all builds when build configuration is removed  oc delete buildconfig should start builds and delete the buildconfig [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] remove all builds when build configuration is removed oc delete buildconfig should start builds and delete the buildconfig [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] result image should have proper labels set  Docker build from a template should create a image from \"test-docker-build.json\" template with proper Docker labels [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] result image should have proper labels set  Docker build from a template should create a image from \"test-docker-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] result image should have proper labels set Docker build from a template should create a image from \"test-docker-build.json\" template with proper Docker labels [apigroup:build.openshift.io][apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] result image should have proper labels set S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [apigroup:build.openshift.io][apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] s2i build with a quota Building from a template should create an s2i build with a quota and run it [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and fail without a privileged SCC [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and fail without a privileged SCC [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] verify /run filesystem contents  are writeable using a simple Docker Strategy Build [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] verify /run filesystem contents  are writeable using a simple Docker Strategy Build [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] verify /run filesystem contents  do not have unexpected content using a simple Docker Strategy Build [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] verify /run filesystem contents  do not have unexpected content using a simple Docker Strategy Build [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] verify /run filesystem contents are writeable in unprivileged builds using a simple Docker Strategy Build [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] verify /run filesystem contents are writeable using a simple Docker Strategy Build [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] verify /run filesystem contents do not have unexpected content in unprivileged builds using a simple Docker Strategy Build [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds] verify /run filesystem contents do not have unexpected content using a simple Docker Strategy Build [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration build config no ocm rollout [apigroup:config.openshift.io] Apply default proxy configuration to docker build pod through env vars [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration build config no ocm rollout [apigroup:config.openshift.io] Apply default proxy configuration to source build pod through env vars [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration build config no ocm rollout [apigroup:config.openshift.io] Apply git proxy configuration to build pod [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration build config with ocm rollout [apigroup:config.openshift.io] Apply default image label configuration to build pod",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration build config with ocm rollout [apigroup:config.openshift.io] Apply env configuration to build pod",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration build config with ocm rollout [apigroup:config.openshift.io] Apply node selector configuration to build pod",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration build config with ocm rollout [apigroup:config.openshift.io] Apply override image label configuration to build pod [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration build config with ocm rollout [apigroup:config.openshift.io] Apply resource configuration to build pod",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration build config with ocm rollout [apigroup:config.openshift.io] Apply toleration override configuration to build pod",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration registries config context should allow registries to be blacklisted",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration registries config context should allow registries to be whitelisted",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Serial][Slow][Disruptive] alter builds via cluster configuration registries config context should default registry search to docker.io for image pulls",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] Capabilities should be dropped for s2i builders s2i build with a rootable builder should not be able to switch to root with an assemble script [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have Dockerfile input being created from new-build should be able to build an image with fewer node-level privileges [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have Dockerfile input being created from new-build should be able to start a build from Dockerfile with FROM reference to scratch [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have Dockerfile input being created from new-build should create a image via new-build [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have Dockerfile input being created from new-build should create a image via new-build and infer the origin tag [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have Dockerfile input being created from new-build testing build image with dockerfile contains a file path uses a variable in its name [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have Dockerfile input being created from new-build testing build image with invalid dockerfile content [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have container image source [apigroup:image.openshift.io] buildconfig with input source image and docker strategy should complete successfully and contain the expected file [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have container image source [apigroup:image.openshift.io] buildconfig with input source image and s2i strategy should complete successfully and contain the expected file [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have container image source [apigroup:image.openshift.io] creating a build with an input source image and custom strategy should resolve the imagestream references and secrets [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have container image source [apigroup:image.openshift.io] creating a build with an input source image and docker strategy should resolve the imagestream references and secrets [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build can have container image source [apigroup:image.openshift.io] creating a build with an input source image and s2i strategy should resolve the imagestream references and secrets [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build controller RunBuildCompletePodDeleteTest should succeed [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build controller RunBuildDeleteTest should succeed [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] build controller RunBuildRunningPodDeleteTest should succeed [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] builds should have deadlines oc start-build docker-build --wait Docker: should start a build and wait for the build failed and build pod being killed by kubelet [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] builds should have deadlines oc start-build source-build --wait Source: should start a build and wait for the build failed and build pod being killed by kubelet [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] builds should support proxies start build with broken proxy and a no_proxy override should start a docker build and wait for the build to succeed [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] builds should support proxies start build with broken proxy and a no_proxy override should start an s2i build and wait for the build to succeed [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] builds should support proxies start build with broken proxy should start a build and wait for the build to fail [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] builds should support proxies start build with cluster-wide custom PKI should mount the custom PKI into the build if specified [apigroup:config.openshift.io][apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] builds with a context directory docker context directory build should docker build an application using a context directory [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] builds with a context directory docker context directory build should unprivileged docker build an application using a context directory [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] builds with a context directory s2i context directory build should s2i build an application using a context directory [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use build secrets build with secrets and configMaps should contain secrets during the docker strategy build",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use build secrets build with secrets and configMaps should contain secrets during the docker strategy build [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use build secrets build with secrets and configMaps should contain secrets during the source strategy build [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use build secrets build with secrets and configMaps should contain secrets during the unprivileged docker strategy build [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use build secrets build with secrets and configMaps should contain secrets during the unprivileged source strategy build [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use private repositories as build input build using an HTTP token should be able to clone source code via an HTTP token [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use private repositories as build input build using an HTTP token should be able to clone source code via an HTTP token without privileges [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use private repositories as build input build using an ssh private key should be able to clone source code via ssh [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use private repositories as build input build using an ssh private key should be able to clone source code via ssh using SCP-style URIs [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use private repositories as build input build using an ssh private key should be able to clone source code via ssh using SCP-style URIs without privileges [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] can use private repositories as build input build using an ssh private key should be able to clone source code via ssh without privileges [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] completed builds should have digest of the image in their status Docker build started with log level \u003e5 should save the image digest when finished [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] completed builds should have digest of the image in their status Docker build started with normal log level should save the image digest when finished [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] completed builds should have digest of the image in their status S2I build started with log level \u003e5 should save the image digest when finished [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] completed builds should have digest of the image in their status S2I build started with normal log level should save the image digest when finished [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] incremental s2i build Building from a template should create a build from \"incremental-auth-build.json\" template and run it [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] s2i build with environment file in sources Building from a template should create a image from \"test-env-build.json\" template and run it in a pod [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context Setting build-args on Docker builds Should accept build args that are specified in the Dockerfile [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context Setting build-args on Docker builds Should complete with a warning on non-existent build-arg [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context Setting build-args on Docker builds Should copy build args from BuildConfig to Build [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context Trigger builds with branch refs matching directories on master branch Should checkout the config branch, not config directory [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context binary builds shoud accept --from-archive with https URL as an input [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context binary builds shoud accept --from-file with https URL as an input [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context binary builds should accept --from-dir as input [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context binary builds should accept --from-file as input [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context binary builds should accept --from-repo as input [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context binary builds should accept --from-repo with --commit as input [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context binary builds should reject binary build requests without a --from-xxxx value [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context cancel a binary build that doesn't start running in 5 minutes should start a build and wait for the build to be cancelled [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context cancel a build started by oc start-build --wait should start a build and wait for the build to cancel [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context oc start-build --wait should start a build and wait for the build to complete [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context oc start-build --wait should start a build and wait for the build to fail [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context oc start-build with pr ref should start a build from a PR ref, wait for the build to complete, and confirm the right level was used [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context override environment BUILD_LOGLEVEL in buildconfig can be overridden by build-loglevel [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context override environment BUILD_LOGLEVEL in buildconfig should create verbose output [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context override environment should accept environment variables [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context s2i build maintaining symlinks should s2i build image and maintain symlinks [apigroup:build.openshift.io][apigroup:image.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] starting a build using CLI start-build test context start a build via a webhook should be able to start builds via the webhook with valid secrets and fail with invalid secrets [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] testing build configuration hooks testing postCommit hook should run docker postCommit hooks [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] testing build configuration hooks testing postCommit hook should run s2i postCommit hooks [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] update failure status Build status Docker fetch image content failure should contain the Docker build fetch image content reason and message [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] update failure status Build status Docker fetch source failure should contain the Docker build fetch source failure reason and message [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] update failure status Build status OutOfMemoryKilled should contain OutOfMemoryKilled failure reason and message [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] update failure status Build status S2I bad context dir failure should contain the S2I bad context dir failure reason and message [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] update failure status Build status S2I fetch source failure should contain the S2I fetch source failure reason and message [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] update failure status Build status failed assemble container should contain the failure reason related to an assemble script failing in s2i [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] update failure status Build status failed https proxy invalid url should contain the generic failure reason and message [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] update failure status Build status fetch builder image failure should contain the fetch builder image failure reason and message [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] update failure status Build status postcommit hook failure should contain the post commit hook failure reason and message [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] update failure status Build status push image to registry failure should contain the image push to registry failure reason and message [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using build configuration runPolicy build configuration with Parallel build run policy runs the builds in parallel [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using build configuration runPolicy build configuration with Serial build run policy handling cancellation starts the next build immediately after one is canceled [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using build configuration runPolicy build configuration with Serial build run policy handling deletion starts the next build immediately after running one is deleted [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using build configuration runPolicy build configuration with Serial build run policy handling failure starts the next build immediately after one fails [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using build configuration runPolicy build configuration with Serial build run policy runs the builds in serial order [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using build configuration runPolicy build configuration with SerialLatestOnly build run policy runs the builds in serial order but cancel previous builds [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using pull secrets in a build start-build test context binary builds should be able to run a build that is implicitly pulling from the internal registry [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using pull secrets in a build start-build test context binary builds should be able to run an unprivileged build that is implicitly pulling from the internal registry [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using pull secrets in a build start-build test context pulling from an external authenticated registry should be able to use a pull secret in a build [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using pull secrets in a build start-build test context pulling from an external authenticated registry should be able to use a pull secret in an unprivileged build [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using pull secrets in a build start-build test context pulling from an external authenticated registry should be able to use a pull secret linked to the builder service account [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][Slow] using pull secrets in a build start-build test context pulling from an external authenticated registry should be able to use a pull secret linked to the builder service account in an unprivileged build [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][pullsearch] docker build where the registry is not specified  Building from a Dockerfile whose FROM image ref does not specify the image registry should create a docker build that has buildah search from our predefined list of image registries and succeed [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][pullsearch] docker build where the registry is not specified Building from a Dockerfile whose FROM image ref does not specify the image registry should create a docker build that can search from our predefined list of image registries and succeed [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][pullsearch] docker build where the registry is not specified Building from a Dockerfile whose FROM image ref does not specify the image registry should create a docker build that has buildah search from our predefined list of image registries and succeed [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][pullsearch] docker build where the registry is not specified Building from a Dockerfile whose FROM image ref does not specify the image registry should create an unprivileged docker build that can still search our predefined list of image registries and shortnames and succeed [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][pullsecret] docker build using a pull secret  Building from a template should create a docker build that pulls using a secret run it [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][pullsecret] docker build using a pull secret  Building from a template should create a docker build that pulls using a secret run it [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][pullsecret] docker build using a pull secret Building from a template should create a docker build that pulls using a secret and run it [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][pullsecret] docker build using a pull secret Building from a template should create a docker build that pulls using a secret run it [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][pullsecret] docker build using a pull secret Building from a template should create an unprivileged docker build that pulls using a secret and run it [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for docker [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for docker [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][timing] capture build stages and durations should record build stages and durations for docker [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][timing] capture build stages and durations should record build stages and durations for s2i [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in docker build environment variable references [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in sti build environment variable references [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in docker build environment variables [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in docker build environment variables [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should fail resolving unresolvable valueFrom in docker build environment variable references [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should fail resolving unresolvable valueFrom in sti build environment variable references [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should successfully resolve valueFrom in docker build environment variables [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should successfully resolve valueFrom in s2i build environment variables [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] build volumes  should mount given secrets and configmaps into the build pod for docker strategy builds [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] build volumes  should mount given secrets and configmaps into the build pod for source strategy builds [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] build volumes should mount given secrets and configmaps into the build pod for docker strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] build volumes should mount given secrets and configmaps into the build pod for privileged docker strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] build volumes should mount given secrets and configmaps into the build pod for privileged source strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] build volumes should mount given secrets and configmaps into the build pod for source strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] build volumes should mount given secrets and configmaps into the build pod for unprivileged docker strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] build volumes should mount given secrets and configmaps into the build pod for unprivileged source strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview disabled clusters  should fail mounting given csi shared resource secret into the build pod for docker strategy builds [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview disabled clusters  should fail mounting given csi shared resource secret into the build pod for source strategy builds [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview disabled clusters [apigroup:config.openshift.io] should fail mounting given csi shared resource secret into the build pod for docker strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview disabled clusters [apigroup:config.openshift.io] should fail mounting given csi shared resource secret into the build pod for source strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview disabled clusters [apigroup:config.openshift.io] should fail mounting given csi shared resource secret into the build pod for unprivileged docker strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview disabled clusters [apigroup:config.openshift.io] should fail mounting given csi shared resource secret into the build pod for unprivileged source strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster  should mount given csi shared resource secret into the build pod for docker strategy builds [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster  should mount given csi shared resource secret into the build pod for source strategy builds [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster  should mount given csi shared resource secret without resource refresh into the build pod for docker strategy builds [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster  should mount given csi shared resource secret without resource refresh into the build pod for source strategy builds [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster [apigroup:config.openshift.io] should mount given csi shared resource secret into the build pod for docker strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster [apigroup:config.openshift.io] should mount given csi shared resource secret into the build pod for source strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster [apigroup:config.openshift.io] should mount given csi shared resource secret into the build pod for unprivileged docker strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster [apigroup:config.openshift.io] should mount given csi shared resource secret into the build pod for unprivileged source strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster [apigroup:config.openshift.io] should mount given csi shared resource secret without resource refresh into the build pod for docker strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster [apigroup:config.openshift.io] should mount given csi shared resource secret without resource refresh into the build pod for source strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster [apigroup:config.openshift.io] should mount given csi shared resource secret without resource refresh into the build pod for unprivileged docker strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][volumes] csi build volumes within Tech Preview enabled cluster [apigroup:config.openshift.io] should mount given csi shared resource secret without resource refresh into the build pod for unprivileged source strategy builds [apigroup:image.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][webhook] TestWebhook [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][webhook] TestWebhook [apigroup:build.openshift.io][apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][webhook] TestWebhookGitHubPing [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][webhook] TestWebhookGitHubPing [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][webhook] TestWebhookGitHubPushWithImage [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][webhook] TestWebhookGitHubPushWithImage [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][webhook] TestWebhookGitHubPushWithImageStream [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:Builds][webhook] TestWebhookGitHubPushWithImageStream [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:JenkinsRHELImagesOnly][Feature:Jenkins][Feature:Builds][sig-devex][Slow] openshift pipeline build  jenkins pipeline build config strategy using a jenkins instance launched with the ephemeral template",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-builds][Feature:JenkinsRHELImagesOnly][Feature:Jenkins][Feature:Builds][sig-devex][Slow] openshift pipeline build jenkins pipeline build config strategy using a jenkins instance launched with the ephemeral template [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-ci] [Early] prow job name should match cluster version [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-ci] [Early] prow job name should match cluster version [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-ci] [Early] prow job name should match network type [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-ci] [Early] prow job name should match network type [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-ci] [Early] prow job name should match network type [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-ci] [Early] prow job name should match network type [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-ci] [Early] prow job name should match platform type [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-ci] [Early] prow job name should match platform type [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-ci] [Early] prow job name should match platform type [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-ci] [Early] prow job name should match platform type [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] CLI can run inside of a busybox container [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] CLI can run inside of a busybox container [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 should support forwarding over websockets [Skipped:Proxy] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects NO client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl Port forwarding With a server listening on 0.0.0.0 that expects a client request should support a client that connects, sends NO DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl Port forwarding With a server listening on localhost should support forwarding over websockets [Skipped:Proxy] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl Port forwarding With a server listening on localhost should support forwarding over websockets [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects NO client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl Port forwarding With a server listening on localhost that expects a client request should support a client that connects, sends NO DATA, and disconnects [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl apply apply set/view last-applied [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl apply should apply a new configuration to an existing RC [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl apply should reuse port when apply to an existing SVC [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl client-side validation should create/apply a CR with unknown fields for CRD with no validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl client-side validation should create/apply a valid CR for CRD with validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl client-side validation should create/apply a valid CR with arbitrary-extra properties for CRD with partially-specified validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl cluster-info dump should check if cluster-info dump succeeds [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl copy should copy a file from a running Pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl create quota should create a quota with scopes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl create quota should create a quota without scopes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl create quota should reject quota with invalid scopes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for cronjob [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl events should show event when pod is created [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl get componentstatuses should get componentstatuses [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl taint [Serial] should remove all the taints with the same key off a node [Skipped:SingleReplicaTopology] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl taint [Serial] should remove all the taints with the same key off a node [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl taint [Serial] should update the taint on a node [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl validation should create/apply a CR with unknown fields for CRD with no validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl validation should create/apply a valid CR for CRD with validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl validation should create/apply a valid CR with arbitrary-extra properties for CRD with partially-specified validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl validation should create/apply an invalid/valid CR with arbitrary-extra properties for CRD with partially-specified validation schema [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl validation should detect unknown metadata fields in both the root and embedded object of a CR [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl validation should detect unknown metadata fields of a typed object [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod Kubectl run running a failing command [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod Kubectl run running a successful command [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should contain last line of the log [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should return command exit codes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should return command exit codes execing into a container with a failing command [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should return command exit codes execing into a container with a successful command [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should return command exit codes running a failing command [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should return command exit codes running a successful command [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should return command exit codes should support port-forward [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should support exec [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should support exec through an HTTP proxy [Skipped:Proxy] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should support exec through an HTTP proxy [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should support exec through kubectl proxy [Skipped:Proxy] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should support exec through kubectl proxy [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should support exec using resource/name [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should support inline execution and attach [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Simple pod should support port-forward [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client kubectl subresource flag GET on status subresource of built-in type (node) returns identical info as GET on the built-in type [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client kubectl subresource flag should not be used in a bulk GET [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl client kubectl wait should ignore not found error with --for=delete [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl logs default container logs the second container is the default-container by annotation should log default container if not specified [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc --request-timeout works as expected [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc --request-timeout works as expected [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm build-chain [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm build-chain [apigroup:build.openshift.io][apigroup:image.openshift.io][apigroup:project.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm cluster-role-reapers [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm cluster-role-reapers [Serial][apigroup:authorization.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm cluster-role-reapers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm groups [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm groups [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm images [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm images [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm must-gather runs successfully [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm must-gather runs successfully for audit logs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm must-gather runs successfully for audit logs [apigroup:config.openshift.io][apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm must-gather runs successfully with options [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm must-gather runs successfully with options [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm must-gather when looking at the audit logs [apigroup:config.openshift.io] [sig-node] kubelet runs apiserver processes strictly sequentially in order to not risk audit log corruption [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm must-gather when looking at the audit logs [sig-node] kubelet runs apiserver processes strictly sequentially in order to not risk audit log corruption [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm must-gather when looking at the audit logs [sig-node] kubelet runs apiserver processes strictly sequentially in order to not risk audit log corruption [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm new-project [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm new-project [apigroup:project.openshift.io][apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm node-logs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm oc adm node-logs --boot=0 [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm oc adm node-logs --role=master --since=-2m [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm oc adm node-logs --since=-2m --until=-1m [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm oc adm node-logs --since=\u003cexplicit-date\u003e --until=-1m [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm oc adm node-logs --tail=5 [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm oc adm node-logs --unit=kubelet --since=-1m [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm oc adm node-logs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm policy [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm policy [apigroup:authorization.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm release extract image-references [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm role-reapers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm role-reapers [apigroup:authorization.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm role-selectors [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm role-selectors [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm serviceaccounts [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm storage-admin [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm storage-admin [apigroup:authorization.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm ui-project-commands [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm ui-project-commands [apigroup:project.openshift.io][apigroup:authorization.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm user-creation [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm user-creation [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm who-can [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc adm who-can [apigroup:authorization.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc annotate pod [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc api-resources can output expected information about api-resources [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc api-resources can output expected information about build.openshift.io api-resources [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc api-resources can output expected information about image.openshift.io api-resources [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc api-resources can output expected information about operator.openshift.io api-resources [apigroup:operator.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc api-resources can output expected information about project.openshift.io api-resources [apigroup:project.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc api-resources can output expected information about route.openshift.io api-resources and api-version [apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc api-resources can output expected information about snapshot.storage.k8s.io api-resources [apigroup:snapshot.storage.k8s.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can create and interact with a list of resources [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can create deploymentconfig and clusterquota [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can create deploymentconfig and clusterquota [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can describe an OAuth access token [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can describe an OAuth access token [apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can get version information from API [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can get version information from CLI [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can output expected --dry-run text [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can patch resources [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can patch resources [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can process templates [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can process templates [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can show correct whoami result [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can show correct whoami result with console [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc basics can show correct whoami result with console [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc builds complex build start-build [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc builds complex build start-build [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc builds complex build webhooks CRUD [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc builds complex build webhooks CRUD [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc builds get buildconfig [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc builds get buildconfig [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc builds new-build [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc builds new-build [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc builds patch buildconfig [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc builds patch buildconfig [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc can get list of nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc can route traffic to services [apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc can run inside of a busybox container [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc can run inside of a busybox container [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc completion returns expected help messages [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug deployment configs from a build [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug deployment configs from a build [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug deployment configs from a build [apigroup:image.openshift.io][apigroup:apps.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug dissect deployment config debug [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug dissect deployment config debug [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug does not require a real resource on the server [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug ensure debug does not depend on a container actually existing for the selected resource [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug ensure debug does not depend on a container actually existing for the selected resource [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug ensure it works with image streams [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug ensure it works with image streams [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc debug ensure it works with image streams [apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc env can set environment variables [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc env can set environment variables [apigroup:apps.openshift.io][apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain list uncovered GroupVersionResources [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain networking types when using openshift-sdn should contain proper fields description for special networking types [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for apps.openshift.io [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for authorization.openshift.io [apigroup:authorization.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for config.openshift.io [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for console.openshift.io [apigroup:console.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for image.openshift.io [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for oauth.openshift.io [apigroup:oauth.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for project.openshift.io [apigroup:project.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for rangeallocations of security.openshift.io, if the resource is present [apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for route.openshift.io [apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for security.internal.openshift.io [apigroup:security.internal.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for security.openshift.io [apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for securitycontextconstraints of security.openshift.io, if the resource is present [apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for special types [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for template.openshift.io [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper fields description for user.openshift.io [apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper spec+status for CRDs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain proper spec+status for CRDs [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for apps.openshift.io [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for build.openshift.io [apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for builtinTypes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for image.openshift.io [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for podsecuritypolicyreviews of security.openshift.io, if the resource is present [apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for podsecuritypolicyselfsubjectreviews of security.openshift.io, if the resource is present [apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for podsecuritypolicysubjectreviews of security.openshift.io, if the resource is present [apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for project.openshift.io [apigroup:project.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for route.openshift.io [apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for security.openshift.io [apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc explain should contain spec+status for template.openshift.io [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc expose can ensure the expose command is functioning as expected [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc expose can ensure the expose command is functioning as expected [apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc help works as expected [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc idle [apigroup:apps.openshift.io][apigroup:route.openshift.io][apigroup:project.openshift.io][apigroup:image.openshift.io] by all [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc idle [apigroup:apps.openshift.io][apigroup:route.openshift.io][apigroup:project.openshift.io][apigroup:image.openshift.io] by checking previous scale [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc idle [apigroup:apps.openshift.io][apigroup:route.openshift.io][apigroup:project.openshift.io][apigroup:image.openshift.io] by label [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc idle [apigroup:apps.openshift.io][apigroup:route.openshift.io][apigroup:project.openshift.io][apigroup:image.openshift.io] by name [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc label pod [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc observe works as expected [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc observe works as expected with cluster operators [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc probe can ensure the probe command is functioning as expected on deploymentconfigs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc probe can ensure the probe command is functioning as expected on deploymentconfigs [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc probe can ensure the probe command is functioning as expected on pods [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc project --show-labels works for projects [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc project --show-labels works for projects [apigroup:project.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc project can switch between different projects [apigroup:authorization.openshift.io][apigroup:user.openshift.io][apigroup:project.openshift.io][Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc rsh rsh specific flags should work well when access to a remote shell [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc rsh specific flags should work well when access to a remote shell [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc rsh specific flags should work well when access to a remote shell [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc run can use --image flag correctly [apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc secret creates and retrieves expected [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc service creates and deletes services [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc set image can set images for pods and deployments [apigroup:image.openshift.io][apigroup:apps.openshift.io][Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc statefulset creates and deletes statefulsets [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc status can show correct status after switching between projects [apigroup:project.openshift.io][apigroup:image.openshift.io][Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc status returns expected help messages [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] oc status returns expected help messages [apigroup:project.openshift.io][apigroup:build.openshift.io][apigroup:image.openshift.io][apigroup:apps.openshift.io][apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] policy scc-subject-review, scc-review [apigroup:authorization.openshift.io][apigroup:user.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] templates different namespaces [apigroup:user.openshift.io][apigroup:project.openshift.io][apigroup:template.openshift.io][apigroup:authorization.openshift.io][Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cli] templates process [apigroup:apps.openshift.io][apigroup:template.openshift.io][Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cloud-provider][Feature:OpenShiftCloudControllerManager][Late] Deploy an external cloud provider [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cloud-provider][Feature:OpenShiftCloudControllerManager][Late] Deploy an external cloud provider [apigroup:config.openshift.io][apigroup:machineconfiguration.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cloud-provider][Feature:OpenShiftCloudControllerManager][Late] Deploy an external cloud provider [apigroup:machineconfiguration.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] CSRs from machines that are not recognized by the cloud provider are not approved [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] CSRs from machines that are not recognized by the cloud provider are not approved [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] Cluster completes upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] Cluster version operator acknowledges upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] ClusterOperators are available and not degraded after upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] Pods cannot access the /config/master API endpoint [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] Pods cannot access the /config/master API endpoint [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] Pods cannot access the /config/master API endpoint [apigroup:config.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] TestAdminAck should succeed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] TestAdminAck should succeed [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] cluster upgrade should be fast",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] cluster upgrade should complete in 105.00 minutes",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] cluster upgrade should complete in 120.00 minutes",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] cluster upgrade should complete in 210.00 minutes",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] cluster upgrade should complete in 240.00 minutes",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] cluster upgrade should complete in 75.00 minutes",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] cluster upgrade should complete in 90.00 minutes",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] cluster upgrade should complete in a reasonable time",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] pathological event should not see excessive Back-off restarting failed containers",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] pathological event should not see excessive Back-off restarting failed containers",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] pathological event should not see excessive Back-off restarting failed containers in e2e namespaces",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] pathological event should not see excessive Back-off restarting failed containers in e2e namespaces",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] should not see excessive Back-off restarting failed containers",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] should not see excessive Back-off restarting failed containers",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle] should not see excessive Back-off restarting failed containers in e2e namespaces",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle] should not see excessive Back-off restarting failed containers in e2e namespaces",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle][Feature:Machines] Managed cluster should have machine resources [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle][Feature:Machines] Managed cluster should have machine resources [apigroup:machine.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle][Feature:Machines][Early] Managed cluster should have same number of Machines and Nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle][Feature:Machines][Early] Managed cluster should have same number of Machines and Nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle][Feature:Machines][Early] Managed cluster should have same number of Machines and Nodes [apigroup:machine.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-cluster-lifecycle][Feature:Machines][Early] Managed cluster should have same number of Machines and Nodes [apigroup:machine.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle][Feature:Machines][Serial] Managed cluster should grow and decrease when scaling different machineSets simultaneously [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle][Feature:Machines][Serial] Managed cluster should grow and decrease when scaling different machineSets simultaneously [Timeout:20m] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle][Feature:Machines][Serial] Managed cluster should grow and decrease when scaling different machineSets simultaneously [Timeout:30m] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-cluster-lifecycle][Feature:Machines][Serial] Managed cluster should grow and decrease when scaling different machineSets simultaneously [Timeout:30m][apigroup:machine.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-coreos] [Conformance] CoreOS bootimages TestBootimagesPresent [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-coreos] [Conformance] CoreOS bootimages TestBootimagesPresent [apigroup:machineconfiguration.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-coreos] master nodes updated",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-coreos] master nodes updated",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex] check registry.redhat.io is available and samples operator can import sample imagestreams run sample related validations [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex] check registry.redhat.io is available and samples operator can import sample imagestreams run sample related validations [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex] check registry.redhat.io is available and samples operator can import sample imagestreams run sample related validations [apigroup:config.openshift.io][apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:3.1-el7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:3.1-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:5.0-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:6.0-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.18-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.18-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.20-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.20-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:14-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:14-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:16-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.26-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.30-el7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.30-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.32-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/php:7.3-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/php:7.4-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/php:8.0-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:2.7-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:2.7-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.6-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.8-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.8-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.9-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.5-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.6-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.6-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.7-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.7-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:3.0-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:3.0-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:3.1-el7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:3.1-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:5.0-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:6.0-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.18-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.18-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.20-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.20-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:14-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:14-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:16-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.26-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.30-el7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.30-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.32-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/php:7.3-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/php:7.4-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/php:8.0-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:2.7-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:2.7-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.6-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.8-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.8-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.9-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.5-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.6-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.6-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.7-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.7-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:3.0-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled  using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:3.0-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:3.1-el7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:3.1-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:6.0-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.20-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.20-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:14-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:14-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:16-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.26-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.30-el7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.30-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.32-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/php:7.3-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/php:7.4-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/php:8.0-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:2.7-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.6-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.8-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.8-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.9-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.5-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.7-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.7-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:3.0-ubi7\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled returning s2i usage when running the image \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:3.0-ubi8\" should print the usage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:3.1-el7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:3.1-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/dotnet:6.0-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.20-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nginx:1.20-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:14-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:14-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/nodejs:16-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.26-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.30-el7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.30-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/perl:5.32-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/php:7.3-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/php:7.4-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/php:8.0-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:2.7-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.6-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.8-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.8-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/python:3.9-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.5-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.7-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:2.7-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:3.0-ubi7\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift images should be SCL enabled using the SCL in s2i images \"image-registry.openshift-image-registry.svc:5000/openshift/ruby:3.0-ubi8\" should be SCL enabled",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift sample application repositories [sig-devex][Feature:ImageEcosystem][nodejs] test nodejs images with nodejs-rest-http-crud db repo  Building nodejs-postgresql app from new-app should build a nodejs-postgresql image and run it in a pod",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift sample application repositories [sig-devex][Feature:ImageEcosystem][nodejs] test nodejs images with nodejs-rest-http-crud db repo Building nodejs-postgresql app from new-app should build a nodejs-postgresql image and run it in a pod [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift sample application repositories [sig-devex][Feature:ImageEcosystem][php] test php images with cakephp-ex db repo  Building cakephp-mysql app from new-app should build a cakephp-mysql image and run it in a pod",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift sample application repositories [sig-devex][Feature:ImageEcosystem][php] test php images with cakephp-ex db repo Building cakephp-mysql app from new-app should build a cakephp-mysql image and run it in a pod [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift sample application repositories [sig-devex][Feature:ImageEcosystem][python] test python images with django-ex db repo  Building django-psql app from new-app should build a django-psql image and run it in a pod",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift sample application repositories [sig-devex][Feature:ImageEcosystem][python] test python images with django-ex db repo Building django-psql app from new-app should build a django-psql image and run it in a pod [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift sample application repositories [sig-devex][Feature:ImageEcosystem][ruby] test ruby images with rails-ex db repo  Building rails-postgresql app from new-app should build a rails-postgresql image and run it in a pod",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][Slow] openshift sample application repositories [sig-devex][Feature:ImageEcosystem][ruby] test ruby images with rails-ex db repo Building rails-postgresql app from new-app should build a rails-postgresql image and run it in a pod [apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][mariadb][Slow] openshift mariadb image  Creating from a template should instantiate the template",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][mysql][Slow] openshift mysql image  Creating from a template should instantiate the template",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][perl][Slow] hot deploy for openshift perl image  hot deploy test should work",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][perl][Slow] hot deploy for openshift perl image hot deploy test should work [apigroup:image.openshift.io][apigroup:operator.openshift.io][apigroup:config.openshift.io][apigroup:build.openshift.io][apigroup:apps.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][php][Slow] hot deploy for openshift php image  CakePHP example should work with hot deploy",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][php][Slow] hot deploy for openshift php image CakePHP example should work with hot deploy [apigroup:image.openshift.io][apigroup:operator.openshift.io][apigroup:config.openshift.io][apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][python][Slow] hot deploy for openshift python image  Django example should work with hot deploy",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][python][Slow] hot deploy for openshift python image Django example should work with hot deploy [apigroup:image.openshift.io][apigroup:operator.openshift.io][apigroup:config.openshift.io][apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][ruby][Slow] hot deploy for openshift ruby image  Rails example should work with hot deploy",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:ImageEcosystem][ruby][Slow] hot deploy for openshift ruby image Rails example should work with hot deploy [apigroup:image.openshift.io][apigroup:operator.openshift.io][apigroup:config.openshift.io][apigroup:build.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:JenkinsRHELImagesOnly][Slow] openshift pipeline build  Sync plugin tests using the ephemeral template",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:OpenShiftControllerManager] TestAutomaticCreationOfPullSecrets [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:OpenShiftControllerManager] TestAutomaticCreationOfPullSecrets [apigroup:config.openshift.io][apigroup:image.openshift.io] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:OpenShiftControllerManager] TestAutomaticCreationOfPullSecrets [apigroup:config.openshift.io][apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:OpenShiftControllerManager] TestDockercfgTokenDeletedController [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:OpenShiftControllerManager] TestDockercfgTokenDeletedController [apigroup:image.openshift.io] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:OpenShiftControllerManager] TestDockercfgTokenDeletedController [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] template-api TestTemplate [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] template-api TestTemplate [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] template-api TestTemplateTransformationFromConfig [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] template-api TestTemplateTransformationFromConfig [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance creation with invalid object reports error  should report a failure on creation [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance creation with invalid object reports error should report a failure on creation [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance cross-namespace test should create and delete objects across namespaces [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance cross-namespace test should create and delete objects across namespaces [apigroup:user.openshift.io][apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance impersonation tests [apigroup:user.openshift.io][apigroup:authorization.openshift.io] should pass impersonation creation tests [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance impersonation tests [apigroup:user.openshift.io][apigroup:authorization.openshift.io] should pass impersonation deletion tests [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance impersonation tests [apigroup:user.openshift.io][apigroup:authorization.openshift.io] should pass impersonation update tests [apigroup:template.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance impersonation tests should pass impersonation creation tests [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance impersonation tests should pass impersonation deletion tests [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance impersonation tests should pass impersonation update tests [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance object kinds test should create and delete objects from varying API groups [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance object kinds test should create and delete objects from varying API groups [apigroup:template.openshift.io][apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance readiness test  should report failed soon after an annotated objects has failed [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance readiness test  should report failed soon after an annotated objects has failed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance readiness test should report failed soon after an annotated objects has failed [apigroup:template.openshift.io][apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance readiness test should report ready soon after all annotated objects are ready [apigroup:template.openshift.io][apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance security tests  should pass security tests [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateinstance security tests [apigroup:authorization.openshift.io][apigroup:template.openshift.io] should pass security tests [apigroup:route.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateservicebroker bind test  should pass bind tests [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateservicebroker end-to-end test  should pass an end-to-end test [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-devex][Feature:Templates] templateservicebroker security test  should pass security tests [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd] etcd cluster has the same number of master nodes and voting members from the endpoints configmap [Early] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-etcd] etcd cluster has the same number of master nodes and voting members from the endpoints configmap [Early] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd] etcd cluster has the same number of master nodes and voting members from the endpoints configmap [Early][apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-etcd] etcd cluster has the same number of master nodes and voting members from the endpoints configmap [Early][apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd] etcd leader changes are not excessive [Late] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd] etcd leader changes are not excessive [Late][apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd] etcd leader changes are not excessive [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd] etcd pod logs do not log dropped internal Raft messages",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-etcd] etcd pod logs do not log dropped internal Raft messages",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd] etcd pod logs do not log slow fdatasync",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-etcd] etcd pod logs do not log slow fdatasync",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd] etcd record the start revision of the etcd-operator [Early] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-etcd] etcd record the start revision of the etcd-operator [Early] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd][Feature:DisasterRecovery][Disruptive] [Feature:EtcdRecovery] Cluster should recover from a backup taken on one node and recovered on another [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd][Feature:DisasterRecovery][Disruptive] [Feature:EtcdRecovery] Cluster should recover from a backup taken on one node and recovered on another [apigroup:operator.openshift.io] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd][Feature:DisasterRecovery][Disruptive] [Feature:EtcdRecovery] Cluster should restore itself after quorum loss [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd][Feature:DisasterRecovery][Disruptive] [Feature:EtcdRecovery] Cluster should restore itself after quorum loss [apigroup:machine.openshift.io][apigroup:operator.openshift.io] [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd][Feature:DisasterRecovery][Suite:openshift/etcd/recovery] [Feature:EtcdRecovery] should install ssh keys on CP nodes",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd][Feature:DisasterRecovery][Suite:openshift/etcd/recovery] [Feature:EtcdRecovery][Disruptive] Restore snapshot from node on another single unhealthy node [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd][Feature:DisasterRecovery][Suite:openshift/etcd/recovery][Timeout:2h] [Feature:EtcdRecovery][Disruptive] Recover with snapshot with two unhealthy nodes and lost quorum [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd][Feature:DisasterRecovery][Suite:openshift/etcd/recovery][Timeout:30m] [Feature:EtcdRecovery][Disruptive] Restore snapshot from node on another single unhealthy node [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd][Feature:EtcdVerticalScaling][Suite:openshift/etcd/scaling] etcd [apigroup:config.openshift.io] is able to vertically scale up and down with a single node [Timeout:60m][apigroup:machine.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-etcd][Feature:EtcdVerticalScaling][Suite:openshift/etcd/scaling] etcd is able to vertically scale up and down with a single node [Timeout:60m][apigroup:machine.openshift.io]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry] Image registry [apigroup:route.openshift.io] should redirect on blob pull [apigroup:image.openshift.io] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry] Image registry [apigroup:route.openshift.io] should redirect on blob pull [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry] Image registry remain available",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-imageregistry] Image registry remains available using new connections",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-imageregistry] Image registry remains available using new connections",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry] Image registry remains available using new connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-imageregistry] Image registry remains available using reused connections",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-imageregistry] Image registry remains available using reused connections",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry] Image registry remains available using reused connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-imageregistry] Image registry should redirect on blob pull [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageAppend] Image append should create images by appending them [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageAppend] Image append should create images by appending them [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageAppend] Image append should create images by appending them [apigroup:image.openshift.io] [Skipped:Disconnected] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageAppend] Image append should create images by appending them [apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageExtract] Image extract should extract content from an image [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageExtract] Image extract should extract content from an image [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageExtract] Image extract should extract content from an image [apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageInfo] Image info should display information about images [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageInfo] Image info should display information about images [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageInfo] Image info should display information about images [apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLayers] Image layer subresource should identify a deleted image as missing [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLayers] Image layer subresource should identify a deleted image as missing [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLayers] Image layer subresource should return layers from tagged images [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLayers] Image layer subresource should return layers from tagged images [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLayers] Image layer subresource should return layers from tagged images [apigroup:image.openshift.io][apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLookup] Image policy should perform lookup when the Deployment gets the resolve-names annotation later [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLookup] Image policy should perform lookup when the Deployment gets the resolve-names annotation later [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLookup] Image policy should perform lookup when the object has the resolve-names annotation [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLookup] Image policy should perform lookup when the object has the resolve-names annotation [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLookup] Image policy should update OpenShift object image fields when local names are on [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLookup] Image policy should update OpenShift object image fields when local names are on [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLookup] Image policy should update OpenShift object image fields when local names are on [apigroup:image.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLookup] Image policy should update standard Kube object image fields when local names are on [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLookup] Image policy should update standard Kube object image fields when local names are on [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageLookup] Image policy should update standard Kube object image fields when local names are on [apigroup:image.openshift.io][apigroup:apps.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Annotation trigger reconciles after the image is overwritten [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Annotation trigger reconciles after the image is overwritten [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Annotation trigger reconciles after the image is overwritten [apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestMultipleImageChangeBuildTriggers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestMultipleImageChangeBuildTriggers [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustom [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustom [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustomWithConfigChange [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagCustomWithConfigChange [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDocker [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDocker [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDockerWithConfigChange [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagDockerWithConfigChange [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTI [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTI [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTIWithConfigChange [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers] Image change build triggers TestSimpleImageChangeBuildTriggerFromImageStreamTagSTIWithConfigChange [apigroup:image.openshift.io][apigroup:build.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream API TestImageStreamMappingCreate [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream API TestImageStreamMappingCreate [apigroup:image.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream API TestImageStreamTagLifecycleHook [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream API TestImageStreamTagLifecycleHook [apigroup:image.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream API TestImageStreamWithoutDockerImageConfig [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream API TestImageStreamWithoutDockerImageConfig [apigroup:image.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream admission TestImageStreamAdmitSpecUpdate [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream admission TestImageStreamAdmitSpecUpdate [apigroup:image.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream admission TestImageStreamAdmitStatusUpdate [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream admission TestImageStreamAdmitStatusUpdate [apigroup:image.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream admission TestImageStreamTagsAdmission [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:ImageTriggers][Serial] ImageStream admission TestImageStreamTagsAdmission [apigroup:image.openshift.io] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] oc tag should change image reference for internal images [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] oc tag should change image reference for internal images [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] oc tag should change image reference for internal images [apigroup:build.openshift.io][apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] oc tag should preserve image reference for external images [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] oc tag should preserve image reference for external images [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] oc tag should work when only imagestreams api is available [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] oc tag should work when only imagestreams api is available [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] oc tag should work when only imagestreams api is available [apigroup:image.openshift.io][apigroup:authorization.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] signature TestImageAddSignature [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] signature TestImageAddSignature [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] signature TestImageRemoveSignature [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Feature:Image] signature TestImageRemoveSignature [apigroup:image.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Serial] Image signature workflow can push a signed image to openshift registry and verify it [apigroup:user.openshift.io][apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Serial][Suite:openshift/registry/serial] Image signature workflow can push a signed image to openshift registry and verify it [Skipped:Disconnected] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-imageregistry][Serial][Suite:openshift/registry/serial] Image signature workflow can push a signed image to openshift registry and verify it [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal platform should [apigroup:config.openshift.io] have baremetalhost resources [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal platform should [apigroup:config.openshift.io] have hostfirmwaresetting resources [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal platform should [apigroup:config.openshift.io] have preprovisioning images for workers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal platform should [apigroup:config.openshift.io] not allow updating BootMacAddress [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal platform should have a metal3 deployment [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal platform should have baremetalhost resources [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal platform should have hostfirmwaresetting resources [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal platform should have preprovisioning images for workers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal platform should not allow updating BootMacAddress [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal/OpenStack/vSphere/None platforms  have a metal3 deployment [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal/OpenStack/vSphere/None platforms [apigroup:config.openshift.io] have a metal3 deployment [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal/OpenStack/vSphere/None/AWS/Azure/GCP platforms [apigroup:config.openshift.io] have a metal3 deployment [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal] Baremetal/OpenStack/vSphere/None/AWS/Azure/GCP platforms have a metal3 deployment [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal][Serial] Baremetal platform should [apigroup:config.openshift.io] skip inspection when disabled by annotation [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal][Serial] Baremetal platform should ensure [apigroup:config.openshift.io] cluster baremetal operator and metal3 deployment return back healthy after they are deleted [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal][Serial] Baremetal platform should ensure cluster baremetal operator and metal3 deployment return back healthy after they are deleted [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Feature:baremetal][Serial] Baremetal platform should skip inspection when disabled by annotation [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] Bugfix bz_2022627: Machine should report all openstack instance addresses",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] Bugfix bz_2073398: [Serial] MachineSet scale-in does not leak OpenStack ports",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] Machine ProviderSpec is correctly applied to OpenStack instances",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] Machine are in phase Running",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] MachineSet ProviderSpec template is correctly applied to Machines",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] MachineSet have role worker",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] MachineSet replica number corresponds to the number of Machines",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform after deletion of a machineset should not have leftovers ports",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform creates Control plane nodes in a server group",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform creates Control plane nodes in a server group [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform creates Control plane nodes on separate hosts when serverGroupPolicy is anti-affinity",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform creates Control plane nodes on separate hosts when serverGroupPolicy is anti-affinity [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform creates Worker nodes in a server group",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform creates Worker nodes in a server group [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform creates Worker nodes on separate hosts when serverGroupPolicy is anti-affinity",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform creates Worker nodes on separate hosts when serverGroupPolicy is anti-affinity [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform on instance creation should follow machineset specs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform on instance creation should follow machineset specs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform on instance creation should include the addresses on the machine specs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform on instance creation should report all openstack instance addresses on the corresponding Machine object",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform on volume creation should follow PVC specs during resizing for prometheus",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The OpenStack platform on volume creation should follow PVC specs during resizing for prometheus [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The Openshift on cloud provider configuration should haul the user config to the expected config maps",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The Openshift on cloud provider configuration should set enabled property in [LoadBalancer] section in CCM depending on the NetworkType",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The Openshift on cloud provider configuration should set use-octavia and enabled properties in CCM depending on the NetworkType",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack] The Openshift on cloud provider configuration should store cloud credentials on secrets",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][Kuryr] Kuryr should create a subnet for a namespace only when a pod without hostNetwork is created in the namespace",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][Kuryr] Kuryr should create a subnet for a namespace only when a pod without hostNetwork is created in the namespace [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][egressip] An egressIP attached to a floating IP should be kept after EgressIP node failover with OVN-Kubernetes NetworkType",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should apply lb-method on TCP Amphora LoadBalancer when a TCP svc with monitors and ETP:Local is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should apply lb-method on TCP OVN LoadBalancer when a TCP svc with monitors and ETP:Local is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should apply lb-method on UDP Amphora LoadBalancer when a UDP svc with monitors and ETP:Local is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should apply lb-method on UDP Amphora LoadBalancer when an UDP svc with monitors and ETP:Local is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should apply lb-method on UDP OVN LoadBalancer when a UDP svc with monitors and ETP:Local is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should apply lb-method on UDP OVN LoadBalancer when an UDP svc with monitors and ETP:Local is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should create a TCP Amphora LoadBalancer when LoadBalancerService ingressController is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should create a TCP Amphora LoadBalancer when a TCP svc with type:LoadBalancer is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should create a TCP OVN LoadBalancer when LoadBalancerService ingressController is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should create a TCP OVN LoadBalancer when a TCP svc with type:LoadBalancer is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should create a UDP Amphora LoadBalancer when a UDP svc with type:LoadBalancer is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should create a UDP OVN LoadBalancer when a UDP svc with type:LoadBalancer is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should create an UDP Amphora LoadBalancer using a pre-created FIP when an UDP LoadBalancer svc setting the LoadBalancerIP spec is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should create an UDP Amphora LoadBalancer when an UDP svc with type:LoadBalancer is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should create an UDP OVN LoadBalancer using a pre-created FIP when an UDP LoadBalancer svc setting the LoadBalancerIP spec is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should create an UDP OVN LoadBalancer when an UDP svc with type:LoadBalancer is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should limit service access on an UDP Amphora LoadBalancer when an UDP LoadBalancer svc setting the loadBalancerSourceRanges spec is created on Openshift",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should re-use an existing UDP Amphora LoadBalancer when new svc is created on Openshift with the proper annotation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-installer][Suite:openshift/openstack][lb][Serial] The Openstack platform should re-use an existing UDP OVN LoadBalancer when new svc is created on Openshift with the proper annotation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Events API should delete a collection of events [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Events should delete a collection of events [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] MetricsGrabber should grab all metrics from API server. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] MetricsGrabber should grab all metrics from a ControllerManager. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] MetricsGrabber should grab all metrics from a Kubelet. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] MetricsGrabber should grab all metrics from a Scheduler. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] MetricsGrabber should grab all metrics slis from API server. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster should have a AlertmanagerReceiversNotConfigured alert in firing state [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster should have important platform topology metrics [apigroup:config.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster should have non-Pod host cAdvisor metrics [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster should provide ingress metrics [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster should provide named network metrics [apigroup:project.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster should report telemetry [Late] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster should report telemetry [Serial] [Late] [Skipped:Disconnected] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster should start and expose a secured proxy and unsecured metrics [apigroup:config.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster shouldn't have failing rules evaluation [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early][apigroup:config.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early][apigroup:config.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus [apigroup:image.openshift.io] when installed on the cluster when using openshift-sdn should be able to get the sdn ovs flows [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus metrics should be available after an upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should have a AlertmanagerReceiversNotConfigured alert in firing state [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should have a AlertmanagerReceiversNotConfigured alert in firing state [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should have important platform topology metrics [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should have important platform topology metrics [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should have non-Pod host cAdvisor metrics [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should have non-Pod host cAdvisor metrics [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should provide ingress metrics [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should provide ingress metrics [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should provide named network metrics [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should provide named network metrics [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Late] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Late] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should start and expose a secured proxy and unsecured metrics [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster should start and expose a secured proxy and unsecured metrics [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster shouldn't have failing rules evaluation [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster shouldn't have failing rules evaluation [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster when using openshift-sdn should be able to get the sdn ovs flows [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation] Prometheus when installed on the cluster when using openshift-sdn should be able to get the sdn ovs flows [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] Alerts should have a Watchdog alert in firing state the entire cluster run [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] Alerts shouldn't exceed the 500 series limit of total series sent via telemetry from each cluster [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] Alerts shouldn't exceed the 500 series limit of total series sent via telemetry from each cluster [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] Alerts shouldn't exceed the 600 series limit of total series sent via telemetry from each cluster [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] Alerts shouldn't exceed the 650 series limit of total series sent via telemetry from each cluster [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] Alerts shouldn't exceed the series limit of total series sent via telemetry from each cluster [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] Alerts shouldn't report any alerts in firing or pending state apart from Watchdog and AlertmanagerReceiversNotConfigured and have no gaps in Watchdog firing [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] Alerts shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] Alerts shouldn't report any unexpected alerts in firing or pending state [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] Alerts shouldn't report any unexpected alerts in firing or pending state [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] OpenShift alerting rules [apigroup:image.openshift.io] should have a runbook_url annotation if the alert is critical [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] OpenShift alerting rules [apigroup:image.openshift.io] should have a valid severity label [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] OpenShift alerting rules [apigroup:image.openshift.io] should have description and summary annotations [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] OpenShift alerting rules [apigroup:image.openshift.io] should link to a valid URL if the runbook_url annotation is defined [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] OpenShift alerting rules [apigroup:image.openshift.io] should link to an HTTP(S) location if the runbook_url annotation is defined [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] OpenShift alerting rules should have a runbook_url annotation if the alert is critical [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] OpenShift alerting rules should have a valid severity label [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][Late] OpenShift alerting rules should have description and summary annotations [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][sig-builds][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][sig-builds][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][sig-builds][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-instrumentation][sig-builds][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [apigroup:config.openshift.io][apigroup:build.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-kubevirt] migration when running openshift cluster on KubeVirt virtual machines and live migrate hosted control plane workers [Early] should maintain node readiness [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-kubevirt] migration when running openshift cluster on KubeVirt virtual machines and live migrate hosted control plane workers [Early] should maintain node readiness [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-kubevirt] services when running openshift cluster on KubeVirt virtual machines should allow connections to pods from guest cluster PodNetwork pod via LoadBalancer service across different guest nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-kubevirt] services when running openshift cluster on KubeVirt virtual machines should allow connections to pods from guest hostNetwork pod via NodePort across different guest nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-kubevirt] services when running openshift cluster on KubeVirt virtual machines should allow connections to pods from guest podNetwork pod via NodePort across different guest nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-kubevirt] services when running openshift cluster on KubeVirt virtual machines should allow connections to pods from infra cluster pod via LoadBalancer service across different guest nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-kubevirt] services when running openshift cluster on KubeVirt virtual machines should allow connections to pods from infra cluster pod via NodePort across different infra nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-kubevirt] services when running openshift cluster on KubeVirt virtual machines should allow direct connections to pods from guest cluster pod in host network across different guest nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-kubevirt] services when running openshift cluster on KubeVirt virtual machines should allow direct connections to pods from guest cluster pod in pod network across different guest nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-mco] Machine config pools complete upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-network-edge] Application behind service load balancer with PDB is not disrupted",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-network-edge] Application behind service load balancer with PDB remains available using new connections",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network-edge] Application behind service load balancer with PDB remains available using new connections",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge] Application behind service load balancer with PDB remains available using new connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-network-edge] Application behind service load balancer with PDB remains available using reused connections",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network-edge] Application behind service load balancer with PDB remains available using reused connections",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge] Application behind service load balancer with PDB remains available using reused connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-network-edge] Cluster frontend ingress remain available",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-network-edge] Console remains available via cluster ingress using new connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-network-edge] Console remains available via cluster ingress using reused connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-network-edge] DNS should answer A and AAAA queries for a dual-stack service [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge] DNS should answer A and AAAA queries for a dual-stack service [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge] DNS should answer queries using the local DNS endpoint [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge] OAuth remains available via cluster ingress using new connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-network-edge] OAuth remains available via cluster ingress using reused connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-network-edge] Verify DNS availability during and after upgrade success",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-network-edge] ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network-edge] ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/new should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge] ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network-edge] ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/reused should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge] ns/openshift-console route/console disruption/ingress-to-console connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network-edge] ns/openshift-console route/console disruption/ingress-to-console connection/new should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge] ns/openshift-console route/console disruption/ingress-to-console connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network-edge] ns/openshift-console route/console disruption/ingress-to-console connection/reused should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should be able to connect to a service that is idled because a GET on the route will unidle it [Skipped:Disconnected] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should be able to connect to a service that is idled because a GET on the route will unidle it [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should be able to connect to a service that is idled because a GET on the route will unidle it [apigroup:config.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should pass the gRPC interoperability tests [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should pass the gRPC interoperability tests [apigroup:config.openshift.io][apigroup:route.openshift.io][apigroup:operator.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should pass the gRPC interoperability tests [apigroup:route.openshift.io][apigroup:operator.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should pass the h2spec conformance tests [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should pass the http2 tests [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router][apigroup:route.openshift.io] The HAProxy router should pass the h2spec conformance tests [apigroup:authorization.openshift.io][apigroup:user.openshift.io][apigroup:security.openshift.io][apigroup:operator.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router][apigroup:route.openshift.io] The HAProxy router should pass the h2spec conformance tests [apigroup:config.openshift.io][apigroup:authorization.openshift.io][apigroup:user.openshift.io][apigroup:security.openshift.io][apigroup:operator.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Conformance][Area:Networking][Feature:Router][apigroup:route.openshift.io][apigroup:config.openshift.io] The HAProxy router should pass the http2 tests [apigroup:image.openshift.io][apigroup:operator.openshift.io] [Suite:openshift/conformance/parallel/minimal]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Idling with a single service and ReplicationController should idle the service and ReplicationController properly [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Unidling [apigroup:apps.openshift.io][apigroup:route.openshift.io] should handle many TCP connections by possibly dropping those over a certain bound [Serial] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Unidling [apigroup:apps.openshift.io][apigroup:route.openshift.io] should handle many TCP connections by possibly dropping those over a certain bound [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Unidling [apigroup:apps.openshift.io][apigroup:route.openshift.io] should handle many UDP senders (by continuing to drop all packets on the floor) [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Unidling [apigroup:apps.openshift.io][apigroup:route.openshift.io] should work with TCP (when fully idled) [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Unidling [apigroup:apps.openshift.io][apigroup:route.openshift.io] should work with TCP (when fully idled) [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Unidling [apigroup:apps.openshift.io][apigroup:route.openshift.io] should work with UDP [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Unidling should handle many TCP connections by possibly dropping those over a certain bound [Serial] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Unidling should handle many UDP senders (by continuing to drop all packets on the floor) [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Unidling should work with TCP (when fully idled) [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network-edge][Feature:Idling] Unidling should work with UDP [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] CVE-2021-29923 IPv4 Service Type ClusterIP with leading zeros should work interpreted as decimal [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Connectivity Pod Lifecycle should be able to connect from a Pod to a terminating Pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Conntrack should be able to preserve UDP traffic when initial unready endpoints get ready [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Conntrack should be able to preserve UDP traffic when server pod cycles for a ClusterIP service [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Conntrack should be able to preserve UDP traffic when server pod cycles for a NodePort service [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Conntrack should be able to preserve UDP traffic when server pod cycles for a NodePort service [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Conntrack should drop INVALID conntrack entries [Privileged] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide DNS for the cluster  [Conformance] [Skipped:Proxy] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide DNS for the cluster [Provider:GCE] [Skipped:Proxy] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should provide DNS for the cluster [Provider:GCE] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Skipped:Proxy] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] DNS should work with the pod containing more than 6 DNS search paths and longer than 256 search list characters [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Disruption should not overlap with DNS problems in cluster running tests",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] Disruption should not overlap with DNS problems in cluster running tests",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSlice should support a Service with multiple endpoint IPs specified in multiple EndpointSlices [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSlice should support a Service with multiple ports specified in multiple EndpointSlices [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSliceMirroring should mirror a custom Endpoint with multiple subsets and same IP address [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [Serial:Self] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Ingress API should support creating Ingress API operations [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] IngressClass [Feature:Ingress] should allow IngressClass to have Namespace-scoped parameters [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] IngressClass [Feature:Ingress] should choose the one with the later CreationTimestamp, if equal the one with the lower name when two ingressClasses are marked as default[Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] IngressClass [Feature:Ingress] should not set default value if no default IngressClass [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] IngressClass [Feature:Ingress] should prevent Ingress creation if more than 1 IngressClass marked as default [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] IngressClass [Feature:Ingress] should set default value on new IngressClass [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Internal connectivity for TCP and UDP on ports 9000-9999 is allowed [Serial:Self] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Internal connectivity for TCP and UDP on ports 9000-9999 is allowed [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol API should support creating NetworkPolicy API operations [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol API should support creating NetworkPolicy API with endport field [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol API should support creating NetworkPolicy with Status subresource [Feature:NetworkPolicyStatus] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should allow egress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should allow egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should allow ingress access from namespace on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should allow ingress access from updated namespace [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should allow ingress access from updated pod [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should allow ingress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should deny egress from all pods in a namespace [Feature:NetworkPolicy]  [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should deny egress from pods based on PodSelector [Feature:NetworkPolicy]  [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should deny ingress access to updated pod [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce egress policy allowing traffic to a server in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce except clause while egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce ingress policy allowing any port traffic to a server on a specific protocol [Feature:NetworkPolicy] [Feature:UDP] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce multiple egress policies with egress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce policies to check ingress and egress policies can be controlled independently based on PodSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce policy based on Multiple PodSelectors and NamespaceSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce policy based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce policy based on Ports [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce policy to allow ingress traffic for a target [Feature:NetworkPolicy]  [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce policy to allow ingress traffic from pods in all namespaces [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should enforce policy to allow traffic based on NamespaceSelector with MatchLabels using default ns label [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should ensure an IP overlapping both IPBlock.CIDR and IPBlock.Except is allowed [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should not allow access by TCP when a policy specifies only UDP [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should not mistakenly treat 'protocol: SCTP' as 'protocol: TCP', even if the plugin doesn't support SCTP [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should properly isolate pods that are selected by a policy allowing SCTP, even if the plugin doesn't support SCTP [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should stop enforcing policies after they are deleted [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should support a 'default-deny-all' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should support a 'default-deny-ingress' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should support allow-all policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should support denying of egress traffic on the client side (even if the server explicitly allows this traffic) [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Netpol NetworkPolicy between server and client should work with Ingress, Egress specified together [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkManager should not log too many netlink events to system journal",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] NetworkManager should not log too many netlink events to system journal",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy API should support creating NetworkPolicy API operations [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow egress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from namespace on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from updated namespace [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from updated pod [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should deny ingress access to updated pod [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce egress policy allowing traffic to a server in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce except clause while egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple egress policies with egress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policies to check ingress and egress policies can be controlled independently based on PodSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on NamespaceSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector or NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on Ports [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic from pods within server namespace based on PodSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a different namespace, based on NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce updated policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should ensure an IP overlapping both IPBlock.CIDR and IPBlock.Except is allowed [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should not allow access by TCP when a policy specifies only SCTP [Feature:NetworkPolicy] [Feature:SCTP] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should stop enforcing policies after they are deleted [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should stop enforcing policies after they are deleted [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny-all' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny-ingress' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support allow-all policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should work with Ingress,Egress specified together [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should allow egress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should allow egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from namespace on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from updated namespace [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from updated pod [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should allow ingress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should deny ingress access to updated pod [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce egress policy allowing traffic to a server in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce except clause while egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce multiple egress policies with egress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce policies to check ingress and egress policies can be controlled independently based on PodSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on NamespaceSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector or NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on Ports [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic from pods within server namespace based on PodSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a different namespace, based on NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should enforce updated policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should ensure an IP overlapping both IPBlock.CIDR and IPBlock.Except is allowed [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should not allow access by TCP when a policy specifies only SCTP [Feature:NetworkPolicy] [Serial] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should not allow access by TCP when a policy specifies only SCTP [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should stop enforcing policies after they are deleted [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny-all' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny-ingress' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should support allow-all policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] NetworkPolicyLegacy [LinuxOnly] NetworkPolicy between server and client should work with Ingress,Egress specified together [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for multiple endpoint-Services with same selector [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for node-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for node-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for pod-Service(hostNetwork): udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for pod-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should support basic nodePort: udp functionality [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking IPerf2 [Feature:Networking-Performance] should run iperf2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking should allow creating a Pod with an SCTP HostPort [LinuxOnly] [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:Disconnected] [Skipped:Proxy] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:Disconnected] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Proxy version v1 should proxy logs on node with explicit kubelet port using proxy subresource  [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] SCTP [Feature:SCTP] [LinuxOnly] should allow creating a basic SCTP service with pod and endpoints [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] SCTP [Feature:SCTP] [LinuxOnly] should create a ClusterIP Service with SCTP ports [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] SCTP [Feature:SCTP] [LinuxOnly] should create a Pod with SCTP HostPort [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] SCTP [LinuxOnly] should allow creating a basic SCTP service with pod and endpoints [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] SCTP [LinuxOnly] should create a ClusterIP Service with SCTP ports [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] SCTP [LinuxOnly] should create a Pod with SCTP HostPort [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Service endpoints latency should not be very high  [Conformance] [Serial] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should allow creating a basic SCTP service with pod and endpoints [LinuxOnly] [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should allow pods to hairpin back to themselves through services [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to connect to terminating and unready endpoints if PublishNotReadyAddresses is XXXX [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to connect to terminating and unready endpoints if PublishNotReadyAddresses is true [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to create a functioning NodePort service [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be possible to connect to a service via ExternalIP when the external IP is not assigned to a node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be rejected for evicted pods (no endpoints exist) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be rejected when no endpoints exist [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be rejected when no endpoints exist [Skipped:ibmroks] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should be updated after adding or deleting ports  [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should complete a service status lifecycle [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should delete a collection of services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should fail health check node port if there are only terminating endpoints [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should fallback to local terminating endpoints when there are no ready endpoints with externalTrafficPolicy=Local [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should fallback to local terminating endpoints when there are no ready endpoints with internalTrafficPolicy=Local [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should fallback to terminating endpoints when there are no ready endpoints with externallTrafficPolicy=Cluster [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should fallback to terminating endpoints when there are no ready endpoints with internalTrafficPolicy=Cluster [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should find a service from listing all namespaces [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance] [Skipped:Network/OVNKuberenetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance] [Skipped:Network/OVNKuberenetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should not be able to connect to terminating and unready endpoints if PublishNotReadyAddresses is XXXXX [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should not be able to connect to terminating and unready endpoints if PublishNotReadyAddresses is false [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should preserve source pod IP for traffic thru service cluster IP [LinuxOnly] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should preserve source pod IP for traffic thru service cluster IP [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should prevent NodePort collisions [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should provide secure master service  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should release NodePorts on delete [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod (hostNetwork: XXXX) to Pod [Feature:ServiceInternalTrafficPolicy] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod (hostNetwork: XXXX) to Pod [Feature:ServiceInternalTrafficPolicy] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod (hostNetwork: XXXX) to Pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod (hostNetwork: true) to Pod [Feature:ServiceInternalTrafficPolicy] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod (hostNetwork: true) to Pod [Feature:ServiceInternalTrafficPolicy] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod (hostNetwork: true) to Pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod and Node, to Pod (hostNetwork: XXXX) [Feature:ServiceInternalTrafficPolicy] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod and Node, to Pod (hostNetwork: XXXX) [Feature:ServiceInternalTrafficPolicy] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod and Node, to Pod (hostNetwork: XXXX) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod and Node, to Pod (hostNetwork: true) [Feature:ServiceInternalTrafficPolicy] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod and Node, to Pod (hostNetwork: true) [Feature:ServiceInternalTrafficPolicy] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod and Node, to Pod (hostNetwork: true) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod to Pod [Feature:ServiceInternalTrafficPolicy] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod to Pod [Feature:ServiceInternalTrafficPolicy] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should respect internalTrafficPolicy=Local Pod to Pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should serve a basic endpoint from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should serve endpoints on same port and different protocol for internal traffic on Type LoadBalancer  [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should serve endpoints on same port and different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should serve multiport endpoints from pods  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] Services should work after the service has been recreated [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should function for client IP based session affinity: http [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should function for client IP based session affinity: udp [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should function for endpoint-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should function for endpoint-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should function for service endpoints using hostNetwork [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] Granular Checks: Services Secondary IP Family [LinuxOnly] should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should function for endpoint-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should function for endpoint-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should function for service endpoints using hostNetwork [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] Granular Checks: Services Secondary IP Family should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] should be able to reach pod on ipv4 and ipv6 ip [Feature:IPv6DualStack] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] should create a single stack service with cluster ip from primary service range [Feature:IPv6DualStack] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] should create pod, add ipv6 and ipv4 ip to pod ips [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] should create service with ipv4 cluster ip [Feature:IPv6DualStack] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] should create service with ipv4,v6 cluster ip [Feature:IPv6DualStack] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] should create service with ipv6 cluster ip [Feature:IPv6DualStack] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] should create service with ipv6,v4 cluster ip [Feature:IPv6DualStack] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] [LinuxOnly] should have ipv4 and ipv6 internal node ip [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] should be able to reach pod on ipv4 and ipv6 ip [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] should create a single stack service with cluster ip from primary service range [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] should create pod, add ipv6 and ipv4 ip to pod ips [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] should create service with ipv4 cluster ip [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] should create service with ipv4,v6 cluster ip [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] should create service with ipv6 cluster ip [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] should create service with ipv6,v4 cluster ip [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] [Feature:IPv6DualStack] should have ipv4 and ipv6 internal node ip [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect host-to-host poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect host-to-host poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect host-to-pod poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect host-to-pod poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect host-to-service poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect host-to-service poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=host-to-host poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=host-to-host poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=host-to-pod poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=host-to-pod poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=host-to-service poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=host-to-service poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=pod-to-host poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=pod-to-host poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=pod-to-pod poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=pod-to-pod poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=pod-to-service poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect network.openshift.io/disruption-actor=poller,network.openshift.io/disruption-target=pod-to-service poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect pod-to-host poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect pod-to-host poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect pod-to-pod network disruption",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect pod-to-pod network disruption",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect pod-to-pod poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect pod-to-pod poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] can collect pod-to-service poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] can collect pod-to-service poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] external gateway address when using openshift ovn-kubernetes should match the address family of the pod [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] load balancer should be managed by OpenShift [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] load balancer should not be managed by OpenShift [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] multicast when using one of the OpenshiftSDN modes 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should allow multicast traffic in namespaces where it is enabled [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] multicast when using one of the OpenshiftSDN modes 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should block multicast traffic in namespaces where it is disabled [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] multicast when using one of the OpenshiftSDN modes 'redhat/openshift-ovs-subnet' should block multicast traffic [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should allow multicast traffic in namespaces where it is enabled [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should block multicast traffic in namespaces where it is disabled [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] multicast when using one of the plugins 'redhat/openshift-ovs-subnet' should block multicast traffic [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using OpenshiftSDN in a mode that does not isolate namespaces by default should allow communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using OpenshiftSDN in a mode that does not isolate namespaces by default should allow communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using OpenshiftSDN in a mode that isolates namespaces by default should allow communication from default to non-default namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using OpenshiftSDN in a mode that isolates namespaces by default should allow communication from default to non-default namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using OpenshiftSDN in a mode that isolates namespaces by default should allow communication from non-default to default namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using OpenshiftSDN in a mode that isolates namespaces by default should allow communication from non-default to default namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using OpenshiftSDN in a mode that isolates namespaces by default should prevent communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using OpenshiftSDN in a mode that isolates namespaces by default should prevent communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin in a mode that does not isolate namespaces by default should allow communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin in a mode that does not isolate namespaces by default should allow communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin in a mode that isolates namespaces by default should allow communication from default to non-default namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin in a mode that isolates namespaces by default should allow communication from default to non-default namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin in a mode that isolates namespaces by default should allow communication from non-default to default namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin in a mode that isolates namespaces by default should allow communication from non-default to default namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin in a mode that isolates namespaces by default should prevent communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin in a mode that isolates namespaces by default should prevent communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin that does not isolate namespaces by default should allow communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin that isolates namespaces by default should allow communication from default to non-default namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin that isolates namespaces by default should allow communication from default to non-default namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin that isolates namespaces by default should allow communication from non-default to default namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin that isolates namespaces by default should allow communication from non-default to default namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin that isolates namespaces by default should prevent communication between pods in different namespaces on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] network isolation when using a plugin that isolates namespaces by default should prevent communication between pods in different namespaces on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] ovs-vswitchd should not log any unreasonably long poll intervals to system journal",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] ovs-vswitchd should not log any unreasonably long poll intervals to system journal",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by adding pod to network",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by adding pod to network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by getting pod",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by getting pod",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by initializing docker source",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by initializing docker source",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by not timing out",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by not timing out",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by other",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by other",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by ovn default network ready",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by ovn default network ready",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by pinging container registry",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by pinging container registry",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by reading container",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by reading container",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by writing child",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by writing child",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by writing network status",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] pods should successfully create sandboxes by writing network status",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] poller pod logs",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] poller pod logs",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services basic functionality should allow connections to another pod on a different node via a service IP  [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services basic functionality should allow connections to another pod on a different node via a service IP [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services basic functionality should allow connections to another pod on the same node via a service IP  [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services basic functionality should allow connections to another pod on the same node via a service IP [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when running openshift ipv4 cluster ensures external ip policy is configured correctly on the cluster [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when running openshift ipv4 cluster ensures external ip policy is configured correctly on the cluster [apigroup:config.openshift.io] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when running openshift ipv4 cluster on bare metal [apigroup:config.openshift.io] ensures external auto assign cidr is configured correctly on the cluster [apigroup:config.openshift.io] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when running openshift ipv4 cluster on bare metal ensures external auto assign cidr is configured correctly on the cluster [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using OpenshiftSDN in a mode that does not isolate namespaces by default should allow connections to pods in different namespaces on different nodes via service IPs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using OpenshiftSDN in a mode that does not isolate namespaces by default should allow connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using OpenshiftSDN in a mode that isolates namespaces by default should allow connections from pods in the default namespace to a service in another namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using OpenshiftSDN in a mode that isolates namespaces by default should allow connections from pods in the default namespace to a service in another namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using OpenshiftSDN in a mode that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using OpenshiftSDN in a mode that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using OpenshiftSDN in a mode that isolates namespaces by default should prevent connections to pods in different namespaces on different nodes via service IPs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using OpenshiftSDN in a mode that isolates namespaces by default should prevent connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin in a mode that does not isolate namespaces by default should allow connections to pods in different namespaces on different nodes via service IPs  [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin in a mode that does not isolate namespaces by default should allow connections to pods in different namespaces on the same node via service IPs  [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin in a mode that isolates namespaces by default should allow connections from pods in the default namespace to a service in another namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin in a mode that isolates namespaces by default should allow connections from pods in the default namespace to a service in another namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin in a mode that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin in a mode that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin in a mode that isolates namespaces by default should prevent connections to pods in different namespaces on different nodes via service IPs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin in a mode that isolates namespaces by default should prevent connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on different nodes via service IPs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin that does not isolate namespaces by default should allow connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin that isolates namespaces by default should allow connections from pods in the default namespace to a service in another namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin that isolates namespaces by default should allow connections from pods in the default namespace to a service in another namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on a different node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin that isolates namespaces by default should allow connections to services in the default namespace from a pod in another namespace on the same node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin that isolates namespaces by default should prevent connections to pods in different namespaces on different nodes via service IPs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] services when using a plugin that isolates namespaces by default should prevent connections to pods in different namespaces on the same node via service IPs [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-kube-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-kube-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-kube-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-kube-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-kube-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-kube-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-kube-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-kube-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-oauth-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-oauth-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-oauth-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-oauth-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-oauth-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-oauth-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-oauth-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-oauth-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-openshift-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-openshift-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-openshift-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-openshift-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-openshift-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-openshift-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-openshift-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/cache-openshift-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/kube-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/kube-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/kube-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/kube-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/kube-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/kube-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/kube-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/kube-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/oauth-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/oauth-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/oauth-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/oauth-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/oauth-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/oauth-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/oauth-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/oauth-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/openshift-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/openshift-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/openshift-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/openshift-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/openshift-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/openshift-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/openshift-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/openshift-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/cache-kube-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/cache-kube-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/cache-oauth-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/cache-oauth-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/cache-openshift-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/cache-openshift-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/kube-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/kube-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/oauth-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/oauth-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/openshift-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for disruption/service-network/openshift-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for ns/openshift-console route/console disruption/ingress-to-console connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for ns/openshift-console route/console disruption/ingress-to-console connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for ns/openshift-console route/console disruption/ingress-to-console connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be nearly zero single second disruptions for ns/openshift-console route/console disruption/ingress-to-console connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-kube-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-kube-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-kube-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-kube-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-kube-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-kube-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-kube-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-kube-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-oauth-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-oauth-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-oauth-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-oauth-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-oauth-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-oauth-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-oauth-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-oauth-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-openshift-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-openshift-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-openshift-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-openshift-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-openshift-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-openshift-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-openshift-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/cache-openshift-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/kube-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/kube-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/kube-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/kube-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/kube-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/kube-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/kube-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/kube-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/oauth-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/oauth-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/oauth-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/oauth-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/oauth-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/oauth-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/oauth-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/oauth-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/openshift-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/openshift-api connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/openshift-api connection/new target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/openshift-api connection/new target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/openshift-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/openshift-api connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/openshift-api connection/reused target=api-int",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/openshift-api connection/reused target=service-network",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/cache-kube-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/cache-kube-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/cache-oauth-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/cache-oauth-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/cache-openshift-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/cache-openshift-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/kube-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/kube-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/oauth-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/oauth-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/openshift-api connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for disruption/service-network/openshift-api connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for ns/openshift-authentication route/oauth-openshift disruption/ingress-to-oauth-server connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for ns/openshift-console route/console disruption/ingress-to-console connection/new",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for ns/openshift-console route/console disruption/ingress-to-console connection/new",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for ns/openshift-console route/console disruption/ingress-to-console connection/reused",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-network] there should be reasonably few single second disruptions for ns/openshift-console route/console disruption/ingress-to-console connection/reused",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressFirewall] egressFirewall should have no impact outside its namespace [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressFirewall] egressFirewall should have no impact outside its namespace [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressFirewall] when using openshift ovn-kubernetes should ensure egressfirewall is created  [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressFirewall] when using openshift ovn-kubernetes should ensure egressfirewall is created [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressFirewall] when using openshift-sdn should ensure egressnetworkpolicy is created [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressFirewall] when using openshift-sdn should ensure egressnetworkpolicy is created [apigroup:network.openshift.io]  [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP] [external-targets] EgressIPs can be assigned automatically [Skipped:Network/OVNKubernetes] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP] [external-targets] only pods matched by the pod selector should have the EgressIPs [Skipped:Network/OpenShiftSDN] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP] [external-targets] pods should have the assigned EgressIPs and EgressIPs can be deleted and recreated [Skipped:azure] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP] [external-targets] pods should have the assigned EgressIPs and EgressIPs can be updated [Skipped:Network/OpenShiftSDN] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP] [external-targets] pods should keep the assigned EgressIPs when being rescheduled to another node [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:config.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] EgressIPs can be assigned automatically [Skipped:Network/OVNKubernetes] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:config.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] only pods matched by the pod selector should have the EgressIPs [Skipped:Network/OpenShiftSDN] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:config.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] pods should have the assigned EgressIPs and EgressIPs can be deleted and recreated [Skipped:azure][apigroup:route.openshift.io] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:config.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] pods should have the assigned EgressIPs and EgressIPs can be updated [Skipped:Network/OpenShiftSDN] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:config.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] pods should keep the assigned EgressIPs when being rescheduled to another node [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:operator.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] EgressIPs can be assigned automatically [Skipped:Network/OVNKubernetes] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:operator.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] only pods matched by the pod selector should have the EgressIPs [Skipped:Network/OpenShiftSDN] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:operator.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] pods should have the assigned EgressIPs and EgressIPs can be deleted and recreated [Skipped:azure][apigroup:route.openshift.io] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:operator.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] pods should have the assigned EgressIPs and EgressIPs can be updated [Skipped:Network/OpenShiftSDN] [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:operator.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] pods should keep the assigned EgressIPs when being rescheduled to another node [Serial] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressIP][apigroup:operator.openshift.io] [external-targets][apigroup:user.openshift.io][apigroup:security.openshift.io] pods should keep the assigned EgressIPs when being rescheduled to another node [Serial] [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressRouterCNI] should ensure ipv4 egressrouter cni resources are created [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressRouterCNI] should ensure ipv4 egressrouter cni resources are created [apigroup:operator.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressRouterCNI] when using openshift ovn-kubernetes should ensure ipv6 egressrouter cni resources are created [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:EgressRouterCNI] when using openshift ovn-kubernetes should ensure ipv6 egressrouter cni resources are created [apigroup:operator.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:MultiNetworkPolicy][Serial] should enforce a network policies on secondary network IPv4 [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:MultiNetworkPolicy][Serial] should enforce a network policies on secondary network IPv6 [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:MultiNetworkPolicy][Serial][apigroup:operator.openshift.io] should enforce a network policies on secondary network IPv4 [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:MultiNetworkPolicy][Serial][apigroup:operator.openshift.io] should enforce a network policies on secondary network IPv6 [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Multus] should use multus to create net1 device from network-attachment-definition [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Multus] should use multus to create net1 device from network-attachment-definition [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Network Policy Audit logging] when using openshift ovn-kubernetes should ensure acl logs are created and correct [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Network Policy Audit logging] when using openshift ovn-kubernetes should ensure acl logs are created and correct [apigroup:project.openshift.io][apigroup:network.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router converges when multiple routers are writing conflicting status [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router converges when multiple routers are writing status [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router reports the expected host names in admitted routes' statuses [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should enable openshift-monitoring to pull metrics [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should enable openshift-monitoring to pull metrics [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should expose a health check on the metrics port [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should expose a health check on the metrics port [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should expose prometheus metrics for a route [apigroup:route.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should expose the profiling endpoints [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should expose the profiling endpoints [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should override the route host with a custom value [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should respond with 503 to unrecognized hosts [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should respond with 503 to unrecognized hosts [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should run even if it has no access to update status [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should serve the correct routes when running with the haproxy config manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should set Forwarded headers appropriately [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should set Forwarded headers appropriately [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] when FIPS is disabled the HAProxy router should serve routes when configured with a 1024-bit RSA key [Feature:Networking-IPv4] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router] when FIPS is enabled the HAProxy router should not work when configured with a 1024-bit RSA key [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:config.openshift.io] The HAProxy router should enable openshift-monitoring to pull metrics [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:config.openshift.io] The HAProxy router should expose a health check on the metrics port [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:config.openshift.io] The HAProxy router should expose prometheus metrics for a route [apigroup:route.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:config.openshift.io] The HAProxy router should expose the profiling endpoints [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:config.openshift.io][apigroup:image.openshift.io] The HAProxy router should serve a route that points to two services and respect weights [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:config.openshift.io][apigroup:operator.openshift.io] The HAProxy router should set Forwarded headers appropriately [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:config.openshift.io][apigroup:operator.openshift.io][apigroup:apps.openshift.io] The HAProxy router should set Forwarded headers appropriately [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:image.openshift.io] The HAProxy router should serve a route that points to two services and respect weights [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:operator.openshift.io] The HAProxy router should respond with 503 to unrecognized hosts [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:operator.openshift.io] The HAProxy router should serve routes that were created from an ingress [apigroup:route.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:operator.openshift.io] The HAProxy router should set Forwarded headers appropriately [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:operator.openshift.io][apigroup:apps.openshift.io] The HAProxy router should respond with 503 to unrecognized hosts [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:operator.openshift.io][apigroup:apps.openshift.io] The HAProxy router should serve routes that were created from an ingress [apigroup:route.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io] The HAProxy router converges when multiple routers are writing conflicting status [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io] The HAProxy router converges when multiple routers are writing status [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io] The HAProxy router reports the expected host names in admitted routes' statuses [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io] The HAProxy router should override the route host for overridden domains with a custom value [apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io] The HAProxy router should override the route host with a custom value [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io] The HAProxy router should run even if it has no access to update status [apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io] The HAProxy router should serve the correct routes when running with the haproxy config manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io] when FIPS is disabled the HAProxy router should serve routes when configured with a 1024-bit RSA key [Feature:Networking-IPv4] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io] when FIPS is enabled the HAProxy router should not work when configured with a 1024-bit RSA key [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io][apigroup:config.openshift.io] The HAProxy router reports the expected host names in admitted routes' statuses [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io][apigroup:config.openshift.io] The HAProxy router should run even if it has no access to update status [apigroup:image.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io][apigroup:config.openshift.io] The HAProxy router should serve the correct routes when running with the haproxy config manager [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io][apigroup:operator.openshift.io] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Router][apigroup:route.openshift.io][apigroup:operator.openshift.io][apigroup:apps.openshift.io] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Whereabouts] should assign unique IP addresses to each pod in the event of a race condition case [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Whereabouts] should assign unique IP addresses to each pod in the event of a race condition case [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Whereabouts] should use whereabouts net-attach-def to limit IP ranges for newly created pods [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:Whereabouts] should use whereabouts net-attach-def to limit IP ranges for newly created pods [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:bond] should create a pod with bond interface [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:bond] should create a pod with bond interface [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tap] should create a pod with a tap interface [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod should not start for sysctls not on whitelist [apigroup:k8s.cni.cncf.io] net.ipv4.conf.IFNAME.arp_filter [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod should not start for sysctls not on whitelist [apigroup:k8s.cni.cncf.io] net.ipv4.conf.all.send_redirects [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod should not start for sysctls not on whitelist net.ipv4.conf.IFNAME.arp_filter [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod should not start for sysctls not on whitelist net.ipv4.conf.all.send_redirects [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod should start with all sysctl on whitelist [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod should start with all sysctl on whitelist [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod sysctl should not affect existing pods [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod sysctl should not affect existing pods [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod sysctl should not affect newly created pods [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod sysctl should not affect newly created pods [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod sysctls should not affect node [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] pod sysctls should not affect node [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:tuning] sysctl allowlist update should start a pod with custom sysctl only when the sysctl is added to whitelist [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:vlan] should create pingable pods with ipvlan interface on an in-container master [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:vlan] should create pingable pods with macvlan interface on an in-container master [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][Feature:vlan] should create pingable pods with vlan interface on an in-container master [apigroup:k8s.cni.cncf.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][endpoints] admission TestEndpointAdmission [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][endpoints] admission [apigroup:config.openshift.io] blocks manual creation of EndpointSlices pointing to the cluster or service network [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][endpoints] admission [apigroup:config.openshift.io] blocks manual creation of Endpoints pointing to the cluster or service network [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][endpoints] admission blocks manual creation of EndpointSlices pointing to the cluster or service network [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][endpoints] admission blocks manual creation of Endpoints pointing to the cluster or service network [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-network][endpoints] admission when using openshift-sdn blocks manual creation of Endpoints pointing to the cluster or service network [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-networking] pathological event should not see excessive FailedToUpdateEndpointSlices Error updating Endpoint Slices",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-networking] pathological event should not see excessive FailedToUpdateEndpointSlices Error updating Endpoint Slices",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-networking] should not see excessive FailedToUpdateEndpointSlices Error updating Endpoint Slices",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-networking] should not see excessive FailedToUpdateEndpointSlices Error updating Endpoint Slices",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] AppArmor load AppArmor profiles can disable an AppArmor profile, using unconfined [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] AppArmor load AppArmor profiles should enforce an AppArmor profile [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] ConfigMap should update ConfigMap successfully [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart https hook properly [MinimumKubeletVersion:1.23] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop https hook properly [MinimumKubeletVersion:1.23] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [Excluded:WindowsDocker] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set [Excluded:WindowsDocker] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test when running a container with a new image should be able to pull image [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test when running a container with a new image should not be able to pull from private registry without secret [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test when running a container with a new image should not be able to pull image from invalid registry [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Docker Containers should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Docker Containers should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Docker Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Docker Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Downward API should provide host IP and pod IP as an env var if pod uses host network [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Ephemeral Containers [NodeFeature:EphemeralContainers] will start an ephemeral container in an existing pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Lease lease API should be available [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Managed cluster record the number of nodes at the beginning of the tests [Early] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] Managed cluster record the number of nodes at the beginning of the tests [Early] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Managed cluster should report ready nodes the entire duration of the test run [Late] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Managed cluster should report ready nodes the entire duration of the test run [Late] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Managed cluster should report ready nodes the entire duration of the test run [Late][apigroup:monitoring.coreos.com] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Managed cluster should verify that nodes have no unexpected reboots [Late] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Mount propagation should propagate mounts to the host [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Mount propagation should propagate mounts within defined scopes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [Skipped:SingleReplicaTopology] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Multiple Pods [Serial] only evicts pods without tolerations from tainted nodes [Skipped:SingleReplicaTopology] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Multiple Pods [Serial] only evicts pods without tolerations from tainted nodes [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Single Pod [Serial] doesn't evict pod with tolerations from tainted nodes [Skipped:SingleReplicaTopology] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Single Pod [Serial] doesn't evict pod with tolerations from tainted nodes [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Single Pod [Serial] eventually evict pod with finite tolerations from tainted nodes [Skipped:SingleReplicaTopology] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Single Pod [Serial] eventually evict pod with finite tolerations from tainted nodes [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Single Pod [Serial] evicts pods from tainted nodes [Skipped:SingleReplicaTopology] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Single Pod [Serial] evicts pods from tainted nodes [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Single Pod [Serial] pods evicted from tainted nodes have pod disruption condition [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [Skipped:SingleReplicaTopology] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NodeLease NodeLease should have OwnerReferences set [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NodeLease NodeLease the kubelet should create and update a lease in the kube-node-lease namespace [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NodeLease NodeLease the kubelet should report node status infrequently [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NodeLease when the NodeLease feature is enabled should have OwnerReferences set [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NodeLease when the NodeLease feature is enabled the kubelet should create and update a lease in the kube-node-lease namespace [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] NodeLease when the NodeLease feature is enabled the kubelet should report node status infrequently [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] PodOSRejection [NodeConformance] Kubelet should reject pod when the node OS doesn't match pod's OS [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] PodTemplates should replace a pod template [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods Extended Delete Grace Period should be submitted and removed [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods Extended Pod Container Status should never report container start when an init container fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods Extended Pod Container Status should never report success for a pending container [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods Extended Pod Container lifecycle evicted pods should be terminal [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods Extended Pod Container lifecycle should not create extra sandbox if all containers are done [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods Extended Pod TerminationGracePeriodSeconds is negative pod with negative grace period [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should be updated [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should delete a collection of pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should patch a pod status [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should support pod readiness gates [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should support pod readiness gates [NodeFeature:PodReadinessGate] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [Skipped:Proxy] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [Skipped:Proxy] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] PreStop graceful pod terminated should wait until preStop hook completes the process [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] PreStop should call prestop when killing a pod  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] PrivilegedPod [NodeConformance] should enable privileged commands [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should *not* be restarted by liveness probe because startup probe delays it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should *not* be restarted with a non-local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should be ready immediately after startupProbe succeeds [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should be restarted by liveness probe after startup probe enables it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should be restarted startup probe fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should be restarted with a failing exec liveness probe that took longer than the timeout [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should be restarted with a local redirect http liveness probe [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should be restarted with an exec liveness probe with timeout [MinimumKubeletVersion:1.20] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should have XXXotonically increasing restart count [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should mark readiness on pods to XXXXX and disable liveness probes while pod is in progress of terminating [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should mark readiness on pods to XXXXX while pod is in progress of terminating when a pod has a readiness probe [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should mark readiness on pods to false and disable liveness probes while pod is in progress of terminating [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should mark readiness on pods to false while pod is in progress of terminating when a pod has a readiness probe [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should not be ready with an exec readiness probe timeout [MinimumKubeletVersion:1.20] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should override timeoutGracePeriodSeconds when LivenessProbe field is set [Feature:ProbeTerminationGracePeriod] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should override timeoutGracePeriodSeconds when LivenessProbe field is set [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should override timeoutGracePeriodSeconds when StartupProbe field is set [Feature:ProbeTerminationGracePeriod] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container should override timeoutGracePeriodSeconds when StartupProbe field is set [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Secrets should patch a secret [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a container with runAsNonRoot should not run with an explicit root user ID [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a container with runAsNonRoot should not run without a specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a container with runAsNonRoot should run with an explicit non-root user ID [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a container with runAsNonRoot should run with an image specified user ID [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a container with runAsUser should run the container with uid 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a pod with privileged should run the container as privileged when XXXX [LinuxOnly] [NodeFeature:HostAccess] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a pod with privileged should run the container as privileged when true [LinuxOnly] [NodeFeature:HostAccess] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when XXXXX [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with readonly rootfs when readOnlyRootFilesystem=XXXX [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with readonly rootfs when readOnlyRootFilesystem=true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=XXXXX [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context should support container.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context should support pod.Spec.SecurityContext.SupplementalGroups [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context should support seccomp default which is unconfined [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context should support seccomp runtime/default [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context should support seccomp unconfined on the container [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context should support seccomp unconfined on the pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when XXXX [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when not explicitly set and uid != 0 [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should allow privilege escalation when true [LinuxOnly] [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when XXXXX [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Security Context when if the container's primary UID belongs to some groups in the image [LinuxOnly] should add pod.Spec.SecurityContext.SupplementalGroups to them [LinuxOnly] in resultant supplementary groups for the container processes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Sysctls [LinuxOnly] [NodeConformance] should not launch unsafe, but not explicitly enabled sysctls on the node [MinimumKubeletVersion:1.21] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls with slashes as separator [MinimumKubeletVersion:1.23] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support unsafe sysctls which are actually allowed [MinimumKubeletVersion:1.21] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Sysctls [LinuxOnly] [NodeFeature:Sysctls] should not launch unsafe, but not explicitly enabled sysctls on the node [MinimumKubeletVersion:1.21] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Sysctls [LinuxOnly] [NodeFeature:Sysctls] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Sysctls [LinuxOnly] [NodeFeature:Sysctls] should support sysctls [MinimumKubeletVersion:1.21] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Sysctls [LinuxOnly] [NodeFeature:Sysctls] should support unsafe sysctls which are actually allowed [MinimumKubeletVersion:1.21] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Test the NodeHasNoDiskPressure condition does not occur too often",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] Test the NodeHasNoDiskPressure condition does not occur too often",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Test the NodeHasSufficeintMemory condition does not occur too often",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] Test the NodeHasSufficeintMemory condition does not occur too often",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Test the NodeHasSufficientPID condition does not occur too often",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] Test the NodeHasSufficientPID condition does not occur too often",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] [Feature:Example] Downward API should create a pod that prints his name and namespace [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] [Feature:Example] Liveness liveness pods should be automatically restarted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] [Feature:Example] Secret should create a pod that reads a secret [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] kubelet Clean up pods on node kubelet should be able to delete 10 pods per node in 1m0s. [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] kubelet logs do not contain ErrImagePull unrecognized signature format",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] kubelet logs do not contain ErrImagePull unrecognized signature format",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] kubelet logs do not contain http client connection lost errors",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] kubelet logs do not contain http client connection lost errors",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] kubelet logs do not contain late lease update errors",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] kubelet logs do not contain late lease update errors",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] kubelet should be able to delete cgroups path",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] kubelet should be able to delete cgroups path",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] kubelet should not use an anonymous user",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] kubelet should not use an anonymous user",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] kubelet terminates kube-apiserver gracefully",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] kubelet terminates kube-apiserver gracefully",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] nodes should not go unready after being upgraded and go unready only once",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] nodes should not go unready after being upgraded and go unready only once",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] openshift-config-operator readiness probe should not fail due to timeout",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] openshift-config-operator readiness probe should not fail due to timeout",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] openshift-config-operator should not get probe error on liveness probe due to timeout",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] openshift-config-operator should not get probe error on liveness probe due to timeout",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] openshift-config-operator should not get probe error on readiness probe due to timeout",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] openshift-config-operator should not get probe error on readiness probe due to timeout",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] overlapping apiserver process detected during kube-apiserver rollout",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] overlapping apiserver process detected during kube-apiserver rollout",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pathological event ErrorReconcilingNode condition does not occur too often",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pathological event ErrorReconcilingNode condition does not occur too often",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pathological event FailedScheduling condition does not occur too often",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pathological event FailedScheduling condition does not occur too often",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pathological event NodeHasNoDiskPressure condition does not occur too often",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pathological event NodeHasNoDiskPressure condition does not occur too often",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pathological event NodeHasSufficeintMemory condition does not occur too often",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pathological event NodeHasSufficeintMemory condition does not occur too often",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pathological event NodeHasSufficientPID condition does not occur too often",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pathological event NodeHasSufficientPID condition does not occur too often",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pathological event OperatorStatusChanged condition does not occur too often",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pathological event OperatorStatusChanged condition does not occur too often",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pathological event openshift-config-operator readiness probe should not fail due to timeout",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pathological event openshift-config-operator readiness probe should not fail due to timeout",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pathological event openshift-config-operator should not get probe error on liveness probe due to timeout",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pathological event openshift-config-operator should not get probe error on liveness probe due to timeout",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pathological event openshift-config-operator should not get probe error on readiness probe due to timeout",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pathological event openshift-config-operator should not get probe error on readiness probe due to timeout",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pods should never transition back to pending",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pods should never transition back to pending",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] pods should not fail on systemd timeouts",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] pods should not fail on systemd timeouts",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull QPS exceeded error in non-openshift namespace pods",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull QPS exceeded error in non-openshift namespace pods",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull QPS exceeded error in openshift namespace pods",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull QPS exceeded error in openshift namespace pods",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull in non-openshift namespace pods",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull in non-openshift namespace pods",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull in openshift namespace pods",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull in openshift namespace pods",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull manifest unknown error in non-openshift namespace pods",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull manifest unknown error in non-openshift namespace pods",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull manifest unknown error in openshift namespace pods",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull manifest unknown error in openshift namespace pods",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull read connection timeout in non-openshift namespace pods",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull read connection timeout in non-openshift namespace pods",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull read connection timeout in openshift namespace pods",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] should not encounter ErrImagePull read connection timeout in openshift namespace pods",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] should override timeoutGracePeriodSeconds when annotation is set [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] static pods should start after being created",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-node] static pods should start after being created",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node] supplemental groups Ensure supplemental groups propagate to docker should propagate requested groups to the container [apigroup:security.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][Disruptive][Feature:KubeletGracefulShutdown] Kubelet with graceful shutdown configuration should respect pods termination grace period  [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][Late] Image pulls are fast",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-node][Late] should not have pod creation failures due to systemd timeouts [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][Suite:openshift/nodes/realtime/latency][Disruptive] Real time kernel should meet latency requirements when tested with cyclictest  [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][Suite:openshift/nodes/realtime/latency][Disruptive] Real time kernel should meet latency requirements when tested with hwlatdetect  [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][Suite:openshift/nodes/realtime/latency][Disruptive] Real time kernel should meet latency requirements when tested with oslat  [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][Suite:openshift/nodes/realtime/latency][Disruptive] Real time kernel should meet latency requirements when tested with rteval  [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][Suite:openshift/nodes/realtime][Disruptive] Real time kernel should allow deadline_test to run successfully  [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][Suite:openshift/nodes/realtime][Disruptive] Real time kernel should allow pi_stress to run successfully with the default algorithm  [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][Suite:openshift/nodes/realtime][Disruptive] Real time kernel should allow pi_stress to run successfully with the fifo algorithm  [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][Suite:openshift/nodes/realtime][Disruptive] Real time kernel should allow pi_stress to run successfully with the round robin algorithm  [Serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][apigroup:config.openshift.io] CPU Partitioning cluster infrastructure should be configured correctly [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][apigroup:config.openshift.io] CPU Partitioning cluster platform workloads should be annotated correctly for DaeXXXSets [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][apigroup:config.openshift.io] CPU Partitioning cluster platform workloads should be annotated correctly for DaemonSets [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][apigroup:config.openshift.io] CPU Partitioning cluster platform workloads should be annotated correctly for Deployments [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][apigroup:config.openshift.io] CPU Partitioning cluster workloads in annotated namespaces should be modified if CPUPartitioningMode = AllNodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][apigroup:config.openshift.io] CPU Partitioning cluster workloads in non-annotated namespaces should not be allowed if CPUPartitioningMode = AllNodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-node][apigroup:config.openshift.io] CPU Partitioning node validation should have correct cpuset and cpushare set in crio containers [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should Implement packages API server and list packagemanifest info with namespace not NULL [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should Implement packages API server and list packagemanifest info with namespace not NULL [apigroup:packages.operators.coreos.com] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should Implement packages API server and list packagemanifest info with namespace not NULL [apigroup:packages.operators.coreos.com] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with catalogsources at version v1alpha1 [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with catalogsources at version v1alpha1 [apigroup:operators.coreos.com] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with catalogsources at version v1alpha1 [apigroup:operators.coreos.com] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with clusterserviceversions at version v1alpha1 [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with clusterserviceversions at version v1alpha1 [apigroup:operators.coreos.com] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with clusterserviceversions at version v1alpha1 [apigroup:operators.coreos.com] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with installplans at version v1alpha1 [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with installplans at version v1alpha1 [apigroup:operators.coreos.com] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with installplans at version v1alpha1 [apigroup:operators.coreos.com] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with operatorgroups at version v1 [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with operatorgroups at version v1 [apigroup:operators.coreos.com] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with operatorgroups at version v1 [apigroup:operators.coreos.com] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with packagemanifests at version v1 [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with packagemanifests at version v1 [apigroup:packages.operators.coreos.com] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with packagemanifests at version v1 [apigroup:packages.operators.coreos.com] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with subscriptions at version v1alpha1 [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with subscriptions at version v1alpha1 [apigroup:operators.coreos.com] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should be installed with subscriptions at version v1alpha1 [apigroup:operators.coreos.com] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should have imagePullPolicy:IfNotPresent on thier deployments [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should have imagePullPolicy:IfNotPresent on thier deployments [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] OLM should have imagePullPolicy:IfNotPresent on thier deployments [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] an end user can use OLM Report Upgradeable in OLM ClusterOperators status [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] an end user can use OLM Report Upgradeable in OLM ClusterOperators status [apigroup:config.openshift.io] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] an end user can use OLM Report Upgradeable in OLM ClusterOperators status [apigroup:config.openshift.io] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] an end user can use OLM can subscribe to the operator [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] an end user can use OLM can subscribe to the operator [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] an end user can use OLM can subscribe to the operator [apigroup:config.openshift.io] [Skipped:Disconnected] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-operator] an end user can use OLM can subscribe to the operator [apigroup:config.openshift.io] [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] should only be allowed to provision PDs in zones where nodes exist [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] should schedule pods in the same zones as statically provisioned PVs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] Multi-AZ Clusters should spread the pods of a replication controller across zones [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] Multi-AZ Clusters should spread the pods of a service across zones [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] PodTopologySpread Filtering validates 4 pods with MaxSkew=1 are evenly distributed into 2 nodes [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates Pods with non-empty schedulingGates are blocked on scheduling [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates pod overhead is considered along with resource limits of pods that are allowed to run verify pod overhead is accounted for [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates that NodeAffinity is respected if not matching [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates that required NodeAffinity setting is respected if matching [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates that taints-tolerations is respected if matching [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates that taints-tolerations is respected if not matching [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [Slow] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPredicates [Serial] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPreemption [Serial] PodTopologySpread Preemption validates proper pods are preempted [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPriorities [Serial] Pod should avoid nodes that have avoidPod annotation [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPriorities [Serial] Pod should be preferably scheduled to nodes pod can tolerate [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPriorities [Serial] Pod should be scheduled to node that don't match the PodAntiAffinity terms [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling] SchedulerPriorities [Serial] PodTopologySpread Scoring validates pod should be preferably scheduled to node which makes the matching pods more evenly distributed [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The HAProxy router pods [apigroup:route.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The HAProxy router pods [apigroup:route.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The HAProxy router pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The HAProxy router pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-apiserver pods [apigroup:apps.openshift.io][apigroup:authorization.openshift.io][apigroup:build.openshift.io][apigroup:image.openshift.io][apigroup:project.openshift.io][apigroup:quota.openshift.io][apigroup:route.openshift.io][apigroup:security.openshift.io][apigroup:template.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-apiserver pods [apigroup:apps.openshift.io][apigroup:authorization.openshift.io][apigroup:build.openshift.io][apigroup:image.openshift.io][apigroup:project.openshift.io][apigroup:quota.openshift.io][apigroup:route.openshift.io][apigroup:security.openshift.io][apigroup:template.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-apiserver pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-apiserver pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-authentication pods [apigroup:oauth.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-authentication pods [apigroup:oauth.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-authentication pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-authentication pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-console console pods [apigroup:console.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-console console pods [apigroup:console.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-console downloads pods [apigroup:console.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-console downloads pods [apigroup:console.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-console pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-console pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-etcd pods [apigroup:operator.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-etcd pods [apigroup:operator.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-etcd pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-etcd pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-image-registry pods [apigroup:imageregistry.operator.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-image-registry pods [apigroup:imageregistry.operator.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-image-registry pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-image-registry pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-monitoring pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-monitoring pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-monitoring prometheus-adapter pods [apigroup:monitoring.coreos.com] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-monitoring prometheus-adapter pods [apigroup:monitoring.coreos.com] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-monitoring thanos-querier pods [apigroup:monitoring.coreos.com] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-monitoring thanos-querier pods [apigroup:monitoring.coreos.com] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-oauth-apiserver pods [apigroup:oauth.openshift.io][apigroup:user.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-oauth-apiserver pods [apigroup:oauth.openshift.io][apigroup:user.openshift.io] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-oauth-apiserver pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-oauth-apiserver pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-operator-lifecycle-manager pods [apigroup:packages.operators.coreos.com] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-operator-lifecycle-manager pods [apigroup:packages.operators.coreos.com] should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-operator-lifecycle-manager pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-scheduling][Early] The openshift-operator-lifecycle-manager pods should be scheduled on different nodes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-service-catalog] [Feature:PodPreset] PodPreset should create a pod preset [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-service-catalog] [Feature:PodPreset] PodPreset should not modify the pod on conflict [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock fsgroup as mount option Delegate FSGroup to CSI driver [LinuxOnly] should not pass FSGroup to CSI driver if it is set in pod and driver supports VOLUME_MOUNT_GROUP [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock fsgroup as mount option Delegate FSGroup to CSI driver [LinuxOnly] should pass FSGroup to CSI driver if it is set in pod and driver supports VOLUME_MOUNT_GROUP [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume attach CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume attach CSI attach test using mock driver should preserve attachment policy when no CSIDriver present [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume attach CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume attach CSI attach test using mock driver should require VolumeAttach for ephemermal volume and drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume expansion CSI Volume expansion should expand volume by restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume expansion CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume expansion CSI Volume expansion should expand volume without restarting pod if nodeExpansion=off [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume expansion CSI Volume expansion should not expand volume if resizingOnDriver=off, resizingOnSC=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume expansion CSI Volume expansion should not have staging_path missing in node expand volume pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume expansion CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume expansion CSI online volume expansion should expand volume without restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume expansion CSI online volume expansion with secret should expand volume without restarting pod if attach=on, nodeExpansion=on, csiNodeExpandSecret=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume fsgroup policies CSI FSGroupPolicy [LinuxOnly] should modify fsGroup if fsGroupPolicy=File [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume fsgroup policies CSI FSGroupPolicy [LinuxOnly] should modify fsGroup if fsGroupPolicy=default [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume fsgroup policies CSI FSGroupPolicy [LinuxOnly] should not modify fsGroup if fsGroupPolicy=None [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume service account token CSIServiceAccountToken token should be plumbed down when csiServiceAccountTokenEnabled=XXXX [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume service account token CSIServiceAccountToken token should be plumbed down when csiServiceAccountTokenEnabled=true [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume service account token CSIServiceAccountToken token should not be plumbed down when CSIDriver is not deployed [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume service account token CSIServiceAccountToken token should not be plumbed down when csiServiceAccountTokenEnabled=XXXXX [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume service account token CSIServiceAccountToken token should not be plumbed down when csiServiceAccountTokenEnabled=false [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume snapshot CSI Snapshot Controller metrics [Feature:VolumeSnapshotDataSource] snapshot controller should emit dynamic CreateSnapshot, CreateSnapshotAndReady, and DeleteSnapshot metrics [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume snapshot CSI Snapshot Controller metrics [Feature:VolumeSnapshotDataSource] snapshot controller should emit pre-provisioned CreateSnapshot, CreateSnapshotAndReady, and DeleteSnapshot metrics [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume snapshot CSI Volume Snapshots [Feature:VolumeSnapshotDataSource] volumesnapshotcontent and pvc in Bound state with deletion timestamp set should not get deleted while snapshot finalizer exists [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume snapshot CSI Volume Snapshots secrets [Feature:VolumeSnapshotDataSource] volume snapshot create/delete with secrets [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume storage capacity CSIStorageCapacity CSIStorageCapacity disabled [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume storage capacity CSIStorageCapacity CSIStorageCapacity unused [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume storage capacity CSIStorageCapacity CSIStorageCapacity used, have capacity [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume storage capacity CSIStorageCapacity CSIStorageCapacity used, insufficient capacity [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume storage capacity CSIStorageCapacity CSIStorageCapacity used, no capacity [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume storage capacity storage capacity exhausted, immediate binding [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume storage capacity storage capacity exhausted, late binding, no topology [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume storage capacity storage capacity exhausted, late binding, with topology [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock volume storage capacity storage capacity unlimited [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock workload info CSI workload information using mock driver contain ephemeral=XXXX when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock workload info CSI workload information using mock driver contain ephemeral=true when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock workload info CSI workload information using mock driver should be passed when podInfoOnMount=XXXX [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock workload info CSI workload information using mock driver should be passed when podInfoOnMount=true [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock workload info CSI workload information using mock driver should not be passed when CSIDriver does not exist [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock workload info CSI workload information using mock driver should not be passed when podInfoOnMount=XXXXX [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock workload info CSI workload information using mock driver should not be passed when podInfoOnMount=false [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Mock workload info CSI workload information using mock driver should not be passed when podInfoOnMount=nil [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should block a second pod from using an in-use ReadWriteOncePod volume on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should preempt lower priority pods using ReadWriteOncePod volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should create snapshot objects correctly [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should delete the VolumeSnapshotContent according to its deletion policy [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should restore from snapshot with saved data after modifying source data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should create snapshot objects correctly [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should delete the VolumeSnapshotContent according to its deletion policy [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should restore from snapshot with saved data after modifying source data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read-only inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should create read/write inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support multiple inline ephemeral volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which have the same volume definition [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: CSI Ephemeral-volume (default fs)] ephemeral should support two pods which share the same volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should block a second pod from using an in-use ReadWriteOncePod volume on the same node [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] read-write-once-pod should preempt lower priority pods using ReadWriteOncePod volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should block a second pod from using an in-use ReadWriteOncePod volume on the same node [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] read-write-once-pod[MinimumKubeletVersion:1.27] should preempt lower priority pods using ReadWriteOncePod volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should create snapshot objects correctly [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should delete the VolumeSnapshotContent according to its deletion policy [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should restore from snapshot with saved data after modifying source data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should create snapshot objects correctly [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should delete the VolumeSnapshotContent according to its deletion policy [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should restore from snapshot with saved data after modifying source data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Dynamic Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Ephemeral Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Ephemeral Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which share the same volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which share the same volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (immediate-binding)] ephemeral should support two pods which share the same volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs) [Feature:GenericEphemeralVolume] (late-binding)] ephemeral should support two pods which share the same volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works after modifying source data, check deletion [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works after modifying source data, check deletion (persistent) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI Volumes [Driver: pd.csi.storage.gke.io][Serial] [Testpattern: Pre-provisioned Snapshot (retain policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller should check snapshot fields, check restore correctly works, check deletion (ephemeral) [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI FSGroupPolicy [LinuxOnly] should modify fsGroup if fsGroupPolicy=File [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI FSGroupPolicy [LinuxOnly] should modify fsGroup if fsGroupPolicy=File [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI FSGroupPolicy [LinuxOnly] should modify fsGroup if fsGroupPolicy=default [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI FSGroupPolicy [LinuxOnly] should modify fsGroup if fsGroupPolicy=default [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI FSGroupPolicy [LinuxOnly] should not modify fsGroup if fsGroupPolicy=None [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI FSGroupPolicy [LinuxOnly] should not modify fsGroup if fsGroupPolicy=None [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Snapshot Controller metrics [Feature:VolumeSnapshotDataSource] snapshot controller should emit dynamic CreateSnapshot, CreateSnapshotAndReady, and DeleteSnapshot metrics [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Snapshot Controller metrics [Feature:VolumeSnapshotDataSource] snapshot controller should emit dynamic CreateSnapshot, CreateSnapshotAndReady, and DeleteSnapshot metrics [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Snapshot Controller metrics [Feature:VolumeSnapshotDataSource] snapshot controller should emit pre-provisioned CreateSnapshot, CreateSnapshotAndReady, and DeleteSnapshot metrics [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Snapshot Controller metrics [Feature:VolumeSnapshotDataSource] snapshot controller should emit pre-provisioned CreateSnapshot, CreateSnapshotAndReady, and DeleteSnapshot metrics [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume Snapshots [Feature:VolumeSnapshotDataSource] volumesnapshotcontent and pvc in Bound state with deletion timestamp set should not get deleted while snapshot finalizer exists [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume Snapshots [Feature:VolumeSnapshotDataSource] volumesnapshotcontent and pvc in Bound state with deletion timestamp set should not get deleted while snapshot finalizer exists [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume Snapshots secrets [Feature:VolumeSnapshotDataSource] volume snapshot create/delete with secrets [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume Snapshots secrets [Feature:VolumeSnapshotDataSource] volume snapshot create/delete with secrets [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=off, nodeExpansion=on [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume expansion should expand volume without restarting pod if nodeExpansion=off [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume expansion should expand volume without restarting pod if nodeExpansion=off [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume expansion should not expand volume if resizingOnDriver=off, resizingOnSC=on [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI Volume expansion should not expand volume if resizingOnDriver=off, resizingOnSC=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI attach test using mock driver should preserve attachment policy when no CSIDriver present [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI attach test using mock driver should preserve attachment policy when no CSIDriver present [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for ephemermal volume and drivers with attachment [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for ephemermal volume and drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=on, nodeExpansion=on [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=XXXX when using inline volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=XXXX when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=true when using inline volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=true when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=XXXX [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=XXXX [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=true [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=true [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when CSIDriver does not exist [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when CSIDriver does not exist [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=XXXXX [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=XXXXX [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=false [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=false [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=nil [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=nil [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIServiceAccountToken token should be plumbed down when csiServiceAccountTokenEnabled=XXXX [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIServiceAccountToken token should be plumbed down when csiServiceAccountTokenEnabled=XXXX [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIServiceAccountToken token should be plumbed down when csiServiceAccountTokenEnabled=true [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIServiceAccountToken token should be plumbed down when csiServiceAccountTokenEnabled=true [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIServiceAccountToken token should not be plumbed down when CSIDriver is not deployed [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIServiceAccountToken token should not be plumbed down when CSIDriver is not deployed [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIServiceAccountToken token should not be plumbed down when csiServiceAccountTokenEnabled=XXXXX [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIServiceAccountToken token should not be plumbed down when csiServiceAccountTokenEnabled=XXXXX [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIServiceAccountToken token should not be plumbed down when csiServiceAccountTokenEnabled=false [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIServiceAccountToken token should not be plumbed down when csiServiceAccountTokenEnabled=false [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIStorageCapacity CSIStorageCapacity disabled [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIStorageCapacity CSIStorageCapacity disabled [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIStorageCapacity CSIStorageCapacity unused [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIStorageCapacity CSIStorageCapacity unused [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIStorageCapacity CSIStorageCapacity used, have capacity [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIStorageCapacity CSIStorageCapacity used, have capacity [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIStorageCapacity CSIStorageCapacity used, insufficient capacity [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIStorageCapacity CSIStorageCapacity used, insufficient capacity [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIStorageCapacity CSIStorageCapacity used, no capacity [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume CSIStorageCapacity CSIStorageCapacity used, no capacity [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume Delegate FSGroup to CSI driver [LinuxOnly] should not pass FSGroup to CSI driver if it is set in pod and driver supports VOLUME_MOUNT_GROUP [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume Delegate FSGroup to CSI driver [LinuxOnly] should not pass FSGroup to CSI driver if it is set in pod and driver supports VOLUME_MOUNT_GROUP [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume Delegate FSGroup to CSI driver [LinuxOnly] should pass FSGroup to CSI driver if it is set in pod and driver supports VOLUME_MOUNT_GROUP [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume Delegate FSGroup to CSI driver [LinuxOnly] should pass FSGroup to CSI driver if it is set in pod and driver supports VOLUME_MOUNT_GROUP [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume storage capacity exhausted, immediate binding [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume storage capacity exhausted, immediate binding [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume storage capacity exhausted, late binding, no topology [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume storage capacity exhausted, late binding, no topology [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume storage capacity exhausted, late binding, with topology [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume storage capacity exhausted, late binding, with topology [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume storage capacity unlimited [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSI mock volume storage capacity unlimited [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSIInlineVolumes should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSIInlineVolumes should support ephemeral VolumeLifecycleMode in CSIDriver API [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap should be immutable if `immutable` field is set [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Dynamic Provisioning Invalid AWS KMS key should report an error and create no PV [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes pod should support memory backed volumes of specified size [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes pod should support memory backed volumes of specified size [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] files with FSGroup ownership should support (root,0644,tmpfs) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] files with FSGroup ownership should support (root,0644,tmpfs) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is non-root [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is non-root [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is root [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is root [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] nonexistent volume subPath should have the correct mode and owner using FSGroup [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] nonexistent volume subPath should have the correct mode and owner using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on default medium should have the correct mode using FSGroup [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on default medium should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on tmpfs should have the correct mode using FSGroup [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir volumes when FSGroup is specified [LinuxOnly] [NodeFeature:FSGroup] volume on tmpfs should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [Suite:openshift/conformance/serial/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : configmap [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : configmap [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : projected [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : projected [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : secret [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : secret [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Flexvolumes should be mountable when attachable [Feature:Flexvolumes] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Flexvolumes should be mountable when attachable [Feature:Flexvolumes] [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Flexvolumes should be mountable when non-attachable [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Flexvolumes should be mountable when non-attachable [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] GCP Volumes GlusterFS should be mountable [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] GCP Volumes NFSv3 should be mountable for NFSv3 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] GCP Volumes NFSv4 should be mountable for NFSv4 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] GKE local SSD [Feature:GKELocalSSD] should write and read from node local SSD [Feature:GKELocalSSD] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] GKE local SSD [Feature:GKELocalSSD] should write and read from node local SSD [Feature:GKELocalSSD] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] HostPath should give a volume the correct mode [LinuxOnly] [NodeConformance] [Skipped:NoOptionalCapabilities] [Skipped:ibmroks] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] HostPath should give a volume the correct mode [LinuxOnly] [NodeConformance] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] HostPath should give a volume the correct mode [LinuxOnly] [NodeConformance] [Skipped:ibmroks] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] HostPath should support r/w [NodeConformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] HostPath should support r/w [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] HostPath should support subPath [NodeConformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] HostPath should support subPath [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: aws] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-disk] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:azure] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:azure] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: azure-file] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: cinder] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:ibmcloud] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPathSymlink] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: block] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: blockfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link-bindmounted] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: gce-localssd-scsi-fs] [Serial] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: tmpfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source (ROX mode) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source (ROX mode) [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: vsphere] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] capacity provides storage capacity information [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (Always)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, new pod fsgroup applied to volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with different fsgroup applied to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] fsgroupchangepolicy (OnRootMismatch)[LinuxOnly], pod created with an initial fsgroup, volume contents ownership changed via chgrp in first pod, new pod with same fsgroup skips ownership changes to the volume contents [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (delayed binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (delayed binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should fail to schedule a pod which has topologies that conflict with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (immediate binding)] topology should provision a volume and schedule a pod with AllowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][Feature:Windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)(allowExpansion)][sig-windows] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should mount multiple PV pointing to the same storage on the same node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision correct filesystem size when restoring snapshot to larger size pvc [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with any volume data source [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Dynamic PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (block volmode) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (immediate-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support expansion of pvcs created for ephemeral pvcs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs) (late-binding)] ephemeral should support two pods which have the same volume definition [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should support volume limits [Serial] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Generic Ephemeral-volume (default fs)] volumeLimits should verify that all csinodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Inline-volume (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ext3)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ext4)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ntfs)][Feature:Windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] In-tree Volumes [Driver: windows-gcepd] [Testpattern: Pre-provisioned PV (ntfs)][sig-windows] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Managed cluster should have no crashlooping recycler pods over four minutes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Managed cluster should have no crashlooping recycler pods over four minutes [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Mounted volume expand Should verify mounted devices can be resized [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Mounted volume expand [Feature:StorageProvider] Should verify mounted devices can be resized [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Mounted volume expand [Feature:StorageProvider] Should verify mounted devices can be resized [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Multi-AZ Cluster Volumes should only be allowed to provision PDs in zones where nodes exist [Skipped:gce] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Multi-AZ Cluster Volumes should schedule pods in the same zones as statically provisioned PVs [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Multi-AZ Cluster Volumes should schedule pods in the same zones as statically provisioned PVs [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PV Protection Verify \"immediate\" deletion of a PV that is not bound to a PVC [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PV Protection Verify \"immediate\" deletion of a PV that is not bound to a PVC [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PV Protection Verify that PV bound to a PVC is not removed immediately [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PV Protection Verify that PV bound to a PVC is not removed immediately [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PVC Protection Verify \"immediate\" deletion of a PVC that is not in active use by a pod [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PVC Protection Verify \"immediate\" deletion of a PVC that is not in active use by a pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PVC Protection Verify that PVC in active use by a pod is not removed immediately [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PVC Protection Verify that PVC in active use by a pod is not removed immediately [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PVC Protection Verify that scheduling of a pod that uses PVC that is being deleted fails and the pod becomes Unschedulable [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PVC Protection Verify that scheduling of a pod that uses PVC that is being deleted fails and the pod becomes Unschedulable [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes GCEPD [Feature:StorageProvider] should test that deleting a PVC before the pod does not cause pod deletion to fail on PD detach [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes GCEPD [Feature:StorageProvider] should test that deleting a PVC before the pod does not cause pod deletion to fail on PD detach [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes GCEPD [Feature:StorageProvider] should test that deleting the Namespace of a PVC and Pod causes the successful detach of Persistent Disk [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes GCEPD [Feature:StorageProvider] should test that deleting the Namespace of a PVC and Pod causes the successful detach of Persistent Disk [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes GCEPD [Feature:StorageProvider] should test that deleting the PV before the pod does not cause pod deletion to fail on PD detach [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes GCEPD [Feature:StorageProvider] should test that deleting the PV before the pod does not cause pod deletion to fail on PD detach [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes GCEPD should test that deleting a PVC before the pod does not cause pod deletion to fail on PD detach [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes GCEPD should test that deleting the Namespace of a PVC and Pod causes the successful detach of Persistent Disk [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes GCEPD should test that deleting the PV before the pod does not cause pod deletion to fail on PD detach [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted. [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PV and a pre-bound PVC: test write access [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PV and a pre-bound PVC: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and a pre-bound PV: test write access [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and a pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and non-pre-bound PV: test write access [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and non-pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs should create a non-pre-bound PV and PVC: test write access  [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs should create a non-pre-bound PV and PVC: test write access  [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 2 PVs and 4 PVCs: test write access [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 2 PVs and 4 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 3 PVs and 3 PVCs: test write access [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 3 PVs and 3 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes [Feature:vsphere][Feature:LabelSelector] Selector-Label Volume Binding:vsphere [Feature:vsphere] should bind volume with claim for given label [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes [Feature:vsphere][Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere [Feature:vsphere] should bind volume with claim for given label [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes [Feature:vsphere][Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere [Feature:vsphere] should delete persistent volume when reclaimPolicy set to delete and associated claim is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes [Feature:vsphere][Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere [Feature:vsphere] should not detach and unmount PV when associated pvc with delete as reclaimPolicy is deleted when it is in use by the pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes [Feature:vsphere][Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere [Feature:vsphere] should retain persistent volume when reclaimPolicy set to retain when associated claim is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes [Feature:vsphere][Feature:ReclaimPolicy] persistentvolumereclaim:vsphere [Feature:vsphere] should delete persistent volume when reclaimPolicy set to delete and associated claim is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes [Feature:vsphere][Feature:ReclaimPolicy] persistentvolumereclaim:vsphere [Feature:vsphere] should not detach and unmount PV when associated pvc with delete as reclaimPolicy is deleted when it is in use by the pod [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes [Feature:vsphere][Feature:ReclaimPolicy] persistentvolumereclaim:vsphere [Feature:vsphere] should retain persistent volume when reclaimPolicy set to retain when associated claim is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-expansion  loopback local block volume should support online expansion on node [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-expansion  loopback local block volume should support online expansion on node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeAffinity [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeAffinity [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeSelector [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  Pod with node different from PV's NodeAffinity should fail scheduling due to different NodeSelector [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  Pods sharing a single local PV [Serial] all pods should be running [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  Pods sharing a single local PV [Serial] all pods should be running [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  Stress with local volumes [Serial] should be able to process many pods and reuse local volumes [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  Stress with local volumes [Serial] should be able to process many pods and reuse local volumes [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: block] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: block] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: block] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: blockfswithoutformat] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Skipped:gce] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and read from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and write from pod1 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes:vsphere [Feature:vsphere] should test that deleting a PVC before the pod does not cause pod deletion to fail on vsphere volume detach [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes:vsphere [Feature:vsphere] should test that deleting the Namespace of a PVC and Pod causes the successful detach of vsphere volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] PersistentVolumes:vsphere [Feature:vsphere] should test that deleting the PV before the pod does not cause pod deletion to fail on vsphere volume detach [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Pod Disks [Feature:StorageProvider] [Serial] attach on previously attached volumes should work [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Pod Disks [Feature:StorageProvider] [Serial] attach on previously attached volumes should work [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Pod Disks [Feature:StorageProvider] should be able to delete a non-existent PD without error [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Pod Disks [Feature:StorageProvider] should be able to delete a non-existent PD without error [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Pod Disks [Serial] attach on previously attached volumes should work [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Pod Disks should be able to delete a non-existent PD without error [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root with FSGroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide podname as non-root with fsgroup and defaultMode [LinuxOnly] [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Secrets should be immutable if `immutable` field is set [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with invalid capability name objectSpaceReserve is not honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with invalid diskStripes value is not honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with invalid hostFailuresToTolerate value is not honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with non-vsan datastore is not honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid diskStripes and objectSpaceReservation values and a VSAN datastore is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid diskStripes and objectSpaceReservation values is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid hostFailuresToTolerate and cacheReservation values is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid objectSpaceReservation and iopsLimit values is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an existing and compatible SPBM policy is honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an if a SPBM policy and VSAN capabilities cannot be honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify clean up of stale dummy VM for dynamically provisioned pvc using SPBM policy [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a SPBM policy is not honored on a non-compatible datastore for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a non-existing SPBM policy is not honored for dynamically provisioned pvc using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Excluded:WindowsDocker] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Excluded:WindowsDocker] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Excluded:WindowsDocker] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Excluded:WindowsDocker] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Excluded:WindowsDocker] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Container restart should verify that container can restart successfully after configmaps modified [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Subpath Container restart should verify that container can restart successfully after configmaps modified [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Disk Format [Feature:vsphere] verify disk format type - eagerzeroedthick is honored for dynamically provisioned pv using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Disk Format [Feature:vsphere] verify disk format type - thin is honored for dynamically provisioned pv using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Disk Format [Feature:vsphere] verify disk format type - zeroedthick is honored for dynamically provisioned pv using storageclass [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Disk Size [Feature:vsphere] verify dynamically provisioned pv has size rounded up correctly [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume FStype [Feature:vsphere] verify fstype - default value should be ext4 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume FStype [Feature:vsphere] verify fstype - ext3 formatted volume [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume FStype [Feature:vsphere] verify invalid fstype [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Operations Storm [Feature:vsphere] should create pod with many volumes and verify no attach call fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Placement [Feature:vsphere] should create and delete pod with multiple volumes from different datastore [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Placement [Feature:vsphere] should create and delete pod with multiple volumes from same datastore [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Placement [Feature:vsphere] should create and delete pod with the same volume source attach/detach to different worker nodes [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Placement [Feature:vsphere] should create and delete pod with the same volume source on the same worker node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Placement [Feature:vsphere] test back to back pod creation and deletion with different volume sources on the same worker node [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with default parameter on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with spbm policy on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify static provisioning on clustered datastore [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume Provisioning on Datastore [Feature:vsphere] verify dynamically provisioned pv using storageclass fails on an invalid datastore [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volume limits should verify that all nodes have volume limits [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volumes ConfigMap should be mountable [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volumes ConfigMap should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volumes NFSv3 should be mountable for NFSv3 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volumes NFSv3 should be mountable for NFSv3 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volumes NFSv4 should be mountable for NFSv4 [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Volumes NFSv4 should be mountable for NFSv4 [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation fails if no zones are specified in the storage class (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation fails if only datastore is specified in the storage class (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation fails if only storage policy is specified in the storage class (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation fails if the availability zone specified in the storage class have no shared datastores under it. [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation with an invalid VSAN capability along with a compatible zone combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation with compatible policy and datastore without any zones specified in the storage class fails (No shared datastores exist among all the nodes) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation with incompatible datastore and zone combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation with incompatible storage policy along with compatible zone and datastore combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation with incompatible storagePolicy and zone combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation with incompatible zone along with compatible storagePolicy and datastore combination specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify PVC creation with invalid zone specified in storage class fails [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a PVC creation fails when multiple zones are specified in the storage class without shared datastores among the zones in waitForFirstConsumer binding mode [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod fails to get scheduled when conflicting volume topology (allowedTopologies) and pod scheduling constraints(nodeSelector) are specified [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode with allowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV with storage policy specified in storage class in waitForFirstConsumer binding mode with multiple allowedTopologies [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV, based on a VSAN capability, datastore and compatible zone specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV, based on allowed zones specified in storage class  [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in storage class  [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV, based on multiple zones specified in the storage class. (No shared datastores exist among both zones) [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and datastore specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and datastore specified in storage class when there are multiple datastores with the same name under different zones across datacenters [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV, based on the allowed zones specified in storage class when the datastore under the zone is present in another datacenter [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created and attached to a dynamically created PV, based on the allowed zones, datastore and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify a pod is created on a non-Workspace zone and attached to a dynamically created PV, based on the allowed zones and storage policy specified in storage class [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify dynamically created pv with allowed zones specified in storage class, shows the right zone information on its labels [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] Zone Support [Feature:vsphere] Verify dynamically created pv with multiple zones specified in the storage class, shows both the zones on its labels [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create metrics for total number of volumes in A/D Controller [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create metrics for total number of volumes in A/D Controller [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create metrics for total time taken in volume operations in P/V Controller [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create metrics for total time taken in volume operations in P/V Controller [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create prometheus metrics for volume provisioning and attach/detach [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create prometheus metrics for volume provisioning and attach/detach [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create volume metrics in Volume Manager [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create volume metrics in Volume Manager [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create volume metrics with the correct BlockMode PVC ref [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create volume metrics with the correct BlockMode PVC ref [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create volume metrics with the correct FilesystemMode PVC ref [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics Ephemeral should create volume metrics with the correct FilesystemMode PVC ref [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create metrics for total number of volumes in A/D Controller [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create metrics for total number of volumes in A/D Controller [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create metrics for total time taken in volume operations in P/V Controller [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create metrics for total time taken in volume operations in P/V Controller [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create prometheus metrics for volume provisioning and attach/detach [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create prometheus metrics for volume provisioning and attach/detach [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create volume metrics in Volume Manager [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create volume metrics in Volume Manager [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create volume metrics with the correct BlockMode PVC ref [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create volume metrics with the correct BlockMode PVC ref [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create volume metrics with the correct FilesystemMode PVC ref [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVC should create volume metrics with the correct FilesystemMode PVC ref [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVController should create bound pv/pvc count metrics for pvc controller after creating both pv and pvc [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVController should create bound pv/pvc count metrics for pvc controller after creating both pv and pvc [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVController should create none metrics for pvc controller before creating any PV or PVC [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVController should create none metrics for pvc controller before creating any PV or PVC [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVController should create total pv count metrics for with plugin and volume mode labels after creating pv [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVController should create total pv count metrics for with plugin and volume mode labels after creating pv [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVController should create unbound pv count metrics for pvc controller after creating pv only [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVController should create unbound pv count metrics for pvc controller after creating pv only [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVController should create unbound pvc count metrics for pvc controller after creating pvc only [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics PVController should create unbound pvc count metrics for pvc controller after creating pvc only [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics should create metrics for total number of volumes in A/D Controller [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics should create metrics for total time taken in volume operations in P/V Controller [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics should create prometheus metrics for volume provisioning and attach/detach [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics should create volume metrics in Volume Manager [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics should create volume metrics with the correct BlockMode PVC ref [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics should create volume metrics with the correct FilesystemMode PVC ref [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [Serial] Volume metrics should create volume metrics with the correct PVC ref [Suite:openshift/conformance/serial] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] [sig-api-machinery] configmap-upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-storage] [sig-api-machinery] secret-upgrade",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-storage] vcp at scale [Feature:vsphere]  vsphere scale tests [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] vcp-performance [Feature:vsphere] vcp performance tests [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] vsphere cloud provider stress [Feature:vsphere] vsphere stress tests [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage] vsphere statefulset [Feature:vsphere] vsphere statefulset testing [Suite:openshift/conformance/parallel] [Suite:k8s]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:CSIInlineVolumeAdmission][Serial] baseline namespace should allow pods with inline volumes when the driver uses the baseline label [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:CSIInlineVolumeAdmission][Serial] baseline namespace should allow pods with inline volumes when the driver uses the restricted label [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:CSIInlineVolumeAdmission][Serial] baseline namespace should deny pods with inline volumes when the driver uses the privileged label [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:CSIInlineVolumeAdmission][Serial] privileged namespace should allow pods with inline volumes when the driver uses the privileged label [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:CSIInlineVolumeAdmission][Serial] privileged namespace should allow pods with inline volumes when the driver uses the restricted label [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:CSIInlineVolumeAdmission][Serial] restricted namespace should allow pods with inline volumes when the driver uses the restricted label [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:CSIInlineVolumeAdmission][Serial] restricted namespace should deny pods with inline volumes when the driver uses the baseline label [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:CSIInlineVolumeAdmission][Serial] restricted namespace should deny pods with inline volumes when the driver uses the privileged label [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:DisableStorageClass][Serial] should not reconcile the StorageClass when StorageClassState is Unmanaged [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:DisableStorageClass][Serial] should reconcile the StorageClass when StorageClassState is Managed [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:DisableStorageClass][Serial] should remove the StorageClass when StorageClassState is Removed [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:DisableStorageClass][Serial][apigroup:operator.openshift.io] should not reconcile the StorageClass when StorageClassState is Unmanaged [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:DisableStorageClass][Serial][apigroup:operator.openshift.io] should reconcile the StorageClass when StorageClassState is Managed [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Feature:DisableStorageClass][Serial][apigroup:operator.openshift.io] should remove the StorageClass when StorageClassState is Removed [Suite:openshift/conformance/serial]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Late] Metrics should report short attach times [Skipped:Disconnected] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Late] Metrics should report short attach times [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Late] Metrics should report short attach times [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Late] Metrics should report short mount times [Skipped:Disconnected] [Skipped:NoOptionalCapabilities] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Late] Metrics should report short mount times [Skipped:Disconnected] [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-storage][Late] Metrics should report short mount times [Suite:openshift/conformance/parallel]",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-trt] CI cluster remains able to communicate with an external service with new connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-trt] CI cluster remains able to communicate with an external service with reused connections",
    "Suite": "Cluster upgrade"
  },
  {
    "Name": "[sig-trt] ConfigMap count should not have grown significantly during upgrade",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-trt] Secret count should not have grown significantly during upgrade",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-trt] disruption/ci-cluster-network-liveness connection/new should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-trt] disruption/ci-cluster-network-liveness connection/new should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-trt] disruption/ci-cluster-network-liveness connection/reused should be available throughout the test",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-trt] disruption/ci-cluster-network-liveness connection/reused should be available throughout the test",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-trt] no DNS lookup errors should be encountered in disruption samplers",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-trt] no DNS lookup errors should be encountered in disruption samplers",
    "Suite": "openshift-tests"
  },
  {
    "Name": "[sig-trt][invariant] No alerts without an explicit test should be firing/pending more than historically",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "[sig-trt][invariant] No alerts without an explicit test should be firing/pending more than historically",
    "Suite": "openshift-tests"
  },
  {
    "Name": "install should succeed: cluster bootstrap",
    "Suite": "cluster install"
  },
  {
    "Name": "install should succeed: cluster creation",
    "Suite": "cluster install"
  },
  {
    "Name": "install should succeed: configuration",
    "Suite": "cluster install"
  },
  {
    "Name": "install should succeed: infrastructure",
    "Suite": "cluster install"
  },
  {
    "Name": "install should succeed: other",
    "Suite": "cluster install"
  },
  {
    "Name": "install should succeed: overall",
    "Suite": "cluster install"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Image Registry\" invariant test image-registry-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"NetworkEdge\" invariant test service-type-load-balancer-availability writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test additional-events-collector writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test alert-summary-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test cluster-info-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test disruption-summary-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test interval-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test pod-lifecycle writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test timeline-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer cleanup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer cleanup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer collection",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer collection",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer interval construction",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer interval construction",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer setup",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer setup",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer test evaluation",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer test evaluation",
    "Suite": "openshift-tests"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer writing to storage",
    "Suite": "openshift-tests-upgrade"
  },
  {
    "Name": "jira/\"Test Framework\" invariant test tracked-resources-serializer writing to storage",
    "Suite": "openshift-tests"
  },
  {
    "Name": "operator conditions authentication",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions baremetal",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions cert-manager",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions cloud-controller-manager",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions cloud-credential",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions cluster-api",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions cluster-autoscaler",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions config-operator",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions console",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions control-plane-machine-set",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions csi-snapshot-controller",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions dns",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions etcd",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions image-registry",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions ingress",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions insights",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions kube-apiserver",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions kube-controller-manager",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions kube-scheduler",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions kube-storage-version-migrator",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions machine-api",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions machine-approver",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions machine-config",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions marketplace",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions monitoring",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions network",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions node-tuning",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions olm",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions openshift-apiserver",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions openshift-controller-manager",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions openshift-samples",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions operator-lifecycle-manager",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions operator-lifecycle-manager-catalog",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions operator-lifecycle-manager-packageserver",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions platform-operators-aggregated",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions service-ca",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions service-catalog-apiserver",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions service-catalog-controller-manager",
    "Suite": "Operator results"
  },
  {
    "Name": "operator conditions storage",
    "Suite": "Operator results"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for including:ovn-proxy",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:aws",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:aws network:ovn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:aws network:sdn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:azure",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:azure network:ovn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:gcp",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:gcp network:sdn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:metal network:ovn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:metal network:sdn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:vsphere",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:vsphere network:ovn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:vsphere network:ovn infrastructure:upi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for plaftorm:vsphere network:sdn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:aws including:techpreview",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:aws network:ovn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:aws network:sdn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:azure including:techpreview",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:azure network:ovn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:gcp including:techpreview",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:gcp network:sdn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:metal network:ovn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:metal network:sdn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:vsphere including:techpreview",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:vsphere network:ovn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:vsphere network:ovn infrastructure:upi",
    "Suite": "cluster install"
  },
  {
    "Name": "test 'install should succeed: overall' has required number of successful passes across payload jobs for platform:vsphere network:sdn infrastructure:ipi",
    "Suite": "cluster install"
  },
  {
    "Name": "upgrade",
    "Suite": "Cluster upgrade"
  }
]
